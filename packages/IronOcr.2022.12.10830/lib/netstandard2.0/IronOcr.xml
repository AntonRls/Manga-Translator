<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>IronOcr</name>
    </assembly>
    <members>
        <member name="T:IronOcr.Installation">
            <summary>
            A static class providing everything to need to configure the installation and licensing of IronOcr
            </summary>
        </member>
        <member name="F:IronOcr.Installation.SendAnonymousAnalyiticsAndCrashData">
            <summary>
            Opt in or out of sending anonymous usage statistics about Iron Software usage and performance to help us improve the product and developer experience.
            <para>Usage statistics are never sent in commercially deployed projects(when a license key is applied), only during development usage.</para></summary>
        </member>
        <member name="P:IronOcr.Installation.InstallationPath">
            <summary>
            IronOcr installation path
            </summary>
        </member>
        <member name="P:IronOcr.Installation.MachineLearningModelsDirectory">
            <summary>
            Directory containing machine learning files for computer vision features
            </summary>
        </member>
        <member name="P:IronOcr.Installation.LinuxAndDockerDependenciesAutoConfig">
            <summary>
            If <c>true</c> The necessary package dependencies for IronOCR rendering will we automatically installed to
            Docker and Debian / Ubuntu Linux deployments. <para>Applies only to IronOCR for .Net Core.</para><para>This
            will take a few minutes the next time you run IronOCR. Watch the Visual Studio "Output" window for
            progress.</para><para>Set this to false if manual Docker / Linux setup is more convenient:
            https://ironsoftware.com/csharp/ocr/docs/questions/csharp-tesseract-ocr-docker-linux-setup-tutorial/</para></summary>
            <seealso cref="P:IronSoftware.Deployment.DeploymentEngine.SkipInstallCommands" />
        </member>
        <member name="M:IronOcr.Installation.IsValidLicense(System.String)">
            <summary>
             Checks if a license key is valid.
            </summary>
            <param name="LicenseKey" />
            <returns>True when a valid key is given.</returns>
        </member>
        <member name="P:IronOcr.Installation.LicenseKey">
            <summary>
            Removes watermarks. Get Licensed at https://ironsoftware.com
            </summary>
        </member>
        <member name="P:IronOcr.Installation.IsLicensed">
            <summary>
            Determines whether this instance of IronOcr is Licensed.
            Will return false unless a LicenseKey is set to a valid trial or full license key in IronOcr.Installation.LicenseKey, Web.Config , App.Config or appsettings.json in .Net Core.
            </summary>
        </member>
        <member name="T:IronOcr.Installation.LoggingModes">
            <summary>
            Logging modes. You may use any combination of these flags to enable logging.
            </summary>
            <seealso cref="P:IronOcr.Installation.LoggingMode" />
        </member>
        <member name="F:IronOcr.Installation.LoggingModes.None">
            <summary>
            Disable logging
            </summary>
        </member>
        <member name="F:IronOcr.Installation.LoggingModes.DebugOutputWindow">
            <summary>
            Enable logging to the debug output window
            </summary>
        </member>
        <member name="F:IronOcr.Installation.LoggingModes.Console">
            <summary>
            Enable logging to the console
            </summary>
        </member>
        <member name="F:IronOcr.Installation.LoggingModes.Custom">
            <summary>
            Enable custom logging
            </summary>
            <seealso cref="P:IronOcr.Installation.CustomLogger" />
        </member>
        <member name="F:IronOcr.Installation.LoggingModes.File">
            <summary>
            Enable logging to the debug output window
            </summary>
            <seealso cref="P:IronOcr.Installation.LogFilePath" />
        </member>
        <member name="F:IronOcr.Installation.LoggingModes.All">
            <summary>
            Enable logging to the debug output window
            </summary>
        </member>
        <member name="P:IronOcr.Installation.LogFilePath">
            <summary>
            Setting a log path produces ‘log files’ which may be vey useful for debugging in production or providing to Iron Software support when reporting an issue.
            <para>LogFilePath may be set to a directory name or a full file name.</para><para>Setting <c>LogFilePath = null</c> will turn off log files.</para></summary>
            <seealso cref="M:IronOcr.Installation.ClearLogFiles" />
        </member>
        <member name="M:IronOcr.Installation.ClearLogFiles">
            <summary>
            Removes any Iron Software log files at the <see cref="P:IronOcr.Installation.LogFilePath" />.
            </summary>
            <seealso cref="P:IronOcr.Installation.LogFilePath" />
        </member>
        <member name="P:IronOcr.Installation.LoggingMode">
            <summary>
            Activate or disable detailed developer messages sent to your choice of location in the IDE or application console. 
            </summary>
        </member>
        <member name="P:IronOcr.Installation.CustomLogger">
            <summary>
            Custom logger implementation
            </summary>
        </member>
        <member name="T:IronOcr.TesseractPageSegmentationMode">
            <summary>
            Page segmentation mode defines how your text will be searched for by Tesseract.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.OsdOnly">
            <summary>
            Orientation and script detection (OSD) only.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.AutoOsd">
            <summary>
            Automatic page segmentation with orientation and script detection (OSD).
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.AutoOnly">
            <summary>
            Automatic page segmentation, but no OSD, or OCR.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.Auto">
            <summary>
            Fully automatic page segmentation, but no OSD.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.SingleColumn">
            <summary>
            Assume a single column of text of variable sizes.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.SingleBlockVertText">
            <summary>
            Assume a single uniform block of vertically aligned text.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.SingleBlock">
            <summary>
            Assume a single uniform block of text.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.SingleLine">
            <summary>
            Treat the image as a single text line.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.SingleWord">
            <summary>
            Treat the image as a single word.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.CircleWord">
            <summary>
            Treat the image as a single word in a circle.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.SingleChar">
            <summary>
            Treat the image as a single character.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.SparseText">
            <summary>
            Find as much text as possible in no particular order.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.SparseTextOsd">
            <summary>
            Sparse text with orientation and script detection.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.RawLine">
            <summary>
            Treat the image as a single text line, bypassing hacks that are
            specific to Tesseract.
            </summary>
        </member>
        <member name="T:IronOcr.ResultHighlightType">
            <summary>
            ResultHighlightType defines what highlighting mode to use for <see cref="M:IronOcr.OcrInput.HighlightTextAndSaveAsImages(IronOcr.IronTesseract,System.String,IronOcr.ResultHighlightType)" />.
            You may choose to highlight every character, word, line, or paragraph.
            </summary>
        </member>
        <member name="F:IronOcr.ResultHighlightType.Character">
            <summary>
            Highlight every single detected <see cref="T:IronOcr.OcrResult.Character" />.
            </summary>
        </member>
        <member name="F:IronOcr.ResultHighlightType.Word">
            <summary>
            Highlight every single detected <see cref="T:IronOcr.OcrResult.Word" />.
            </summary>
        </member>
        <member name="F:IronOcr.ResultHighlightType.Line">
            <summary>
            Highlight every single detected <see cref="T:IronOcr.OcrResult.Line" />.
            </summary>
        </member>
        <member name="F:IronOcr.ResultHighlightType.Paragraph">
            <summary>
            Highlight every single detected <see cref="T:IronOcr.OcrResult.Paragraph" />.
            </summary>
        </member>
        <member name="T:IronOcr.TesseractEngineMode">
            <summary>
            Allows the developer to choose the algorithm Tesseract will use for OCR.  TesseractAndLstm is the recommended behavior for IronOCR.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractEngineMode.TesseractOnly">
            <summary>
            Only the legacy tesseract OCR engine is used.  (Tesseract 3 OEM Mode)
            </summary>
        </member>
        <member name="F:IronOcr.TesseractEngineMode.LstmOnly">
            <summary>
            Only the new LSTM-based OCR engine is used.  Uses a pre programmed neural net. (Tesseract 4 + 5  Mode)
            </summary>
        </member>
        <member name="F:IronOcr.TesseractEngineMode.TesseractAndLstm">
            <summary>
            Both the legacy and new LSTM based OCR engine is used.  (Recommended for a  good balance of speed and performance)
            </summary>
        </member>
        <member name="F:IronOcr.TesseractEngineMode.Default">
            <summary>
            The default OCR engine is used (currently LSTM-based OCR engine).
            </summary>
        </member>
        <member name="T:IronOcr.TesseractVersion">
            <summary>
            Selects between different binary versions of Tesseract.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractVersion.Tesseract5">
            <summary>
            Tesseract 5.1
            </summary>
        </member>
        <member name="T:IronOcr.Events.OcrProgresEventsArgs">
            <summary>
            An event allowing developers to track and display profess of longer OCR jobs.
            <para>Use the <see cref="E:IronOcr.IronTesseract.OcrProgress" /> event to receive detailed notifications of
            ocr job progress.</para></summary>
            <seealso cref="E:IronOcr.IronTesseract.OcrProgress" />
        </member>
        <member name="P:IronOcr.Events.OcrProgresEventsArgs.ProgressPercent">
            <summary>
            OCR job progress as a percentage of pages completed. Values range from  0 to 100.
            </summary>
        </member>
        <member name="P:IronOcr.Events.OcrProgresEventsArgs.TotalPages">
            <summary>
            The total number of pages being OCR 'read' by <see cref="M:IronOcr.IronTesseract.Read(IronOcr.OcrInput)" /> method class.
            </summary>
        </member>
        <member name="P:IronOcr.Events.OcrProgresEventsArgs.PagesComplete">
            <summary>
            The number of pages where OCR 'reading' has been fully completed.  They are normally processed in parallel across multiple CPU cores.
            </summary>
        </member>
        <member name="P:IronOcr.Events.OcrProgresEventsArgs.Duration">
            <summary>
            The time taken for the entire OCR job.  The counter stops when OCR is complete on every page.
            </summary>
        </member>
        <member name="P:IronOcr.Events.OcrProgresEventsArgs.StartTimeUTC">
            <summary>
            The DateTime at which the <see cref="M:IronOcr.IronTesseract.Read(IronOcr.OcrInput)" /> OCR job started in UTC format.
            </summary>
        </member>
        <member name="P:IronOcr.Events.OcrProgresEventsArgs.EndTimeUTC">
            <summary>
            The DateTime at which the <see cref="M:IronOcr.IronTesseract.Read(IronOcr.OcrInput)" /> OCR job was 100% completed in UTC format.
            <para>null while OCR is still in progress</para></summary>
        </member>
        <member name="T:IronOcr.Exceptions.NamespaceDoc">
            <summary>
            Exceptions thrown from IronOCR.  For documentation and support please visit:  https://ironsoftware.com/csharp/ocr/ 
            </summary>
        </member>
        <member name="T:IronOcr.Exceptions.IronOcrNativeException">
            <summary>
            Represents errors that occur in IronOCR native code
            </summary>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrNativeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrNativeException" /> class.
            </summary>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrNativeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrNativeException" /> class with a
            specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrNativeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrNativeException" /> class with a
            specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.
            </param>
        </member>
        <member name="T:IronOcr.Exceptions.IronOcrLicensingException">
            <summary>
             Represents errors that occur during IronOCR execution due to the library not being appropriately licensed.
            <para>https://ironsoftware.com/csharp/ocr/licensing/</para></summary>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrLicensingException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrLicensingException" /> class.
            </summary>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrLicensingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrLicensingException" /> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrLicensingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrLicensingException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:IronOcr.Exceptions.IronOcrProductException">
            <summary>
            Represents errors that occur during IronOCR execution.
            </summary>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrProductException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrProductException" /> class.
            </summary>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrProductException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrProductException" /> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrProductException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrProductException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:IronOcr.Exceptions.IronOcrDictionaryException">
            <summary>
            Represents errors that occur relating to IronOCR language files.
            </summary>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrDictionaryException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrDictionaryException" /> class.
            </summary>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrDictionaryException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrDictionaryException" /> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrDictionaryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrDictionaryException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:IronOcr.Exceptions.IronOcrAssemblyVersionMismatchException">
            <summary>
            Represents errors that occur while loading assemblies during IronOcr deployment.
            </summary>
        </member>
        <member name="P:IronOcr.Exceptions.IronOcrAssemblyVersionMismatchException.Message">
            <summary>
            The message that describes the error.
            </summary>
        </member>
        <member name="T:IronOcr.IronTesseract">
            <summary>
             IronTesseract is a comprehensive managed class for performing Tesseract OCR in .Net applications.
             <para>IronTesseract natively supports Tesseract 3, 4 and 5 engines, and will automatically install all required binaries and language packs (tessdata) files.</para></summary>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadAsync(IronOcr.OcrInput,System.Int32)">
            <summary>
            Reads text from an <see cref="T:IronOcr.OcrInput" /> object and returns an <see cref="T:IronOcr.OcrResult" /> object.
            <para><see cref="T:IronOcr.OcrInput" /> is the preferred input type because it allows for OCR of multi-paged documents, and allows images to be enhanced before OCR to obtain faster, more accurate results.</para><para>There are also other overloads of this method that allow for Images and PDFs to be read directly as  File paths and Bitmaps. </para></summary>
            <param name="Input">An <see cref="T:IronOcr.OcrInput" /> document which can contain one or more images and PDFs</param>
            <param name="TimeoutMs">Optional timeout in milliseconds, after which the Ocr read will be cancelled. Not supported in .NET 4.0</param>
            <returns>A task that represents the asynchronous read operation. The value of the <see cref="P:System.Threading.Tasks.Task`1.Result" /> property contains
            an <see cref="T:IronOcr.OcrResult" /> object containing text,  and detailed, structured information about the extracted text content.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadAsync(System.String,IronSoftware.Drawing.CropRectangle,System.Int32)">
            <summary>
            Reads text from an Image file and returns an <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
            <param name="ImagePath">Path to an image file.</param>
            <param name="ContentArea">Specifies a region within the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
            <param name="TimeoutMs">Optional timeout in milliseconds, after which the Ocr read will be cancelled. Not supported in .NET 4.0</param>
            <returns>A task that represents the asynchronous read operation. The value of the <see cref="P:System.Threading.Tasks.Task`1.Result" /> property contains
            an <see cref="T:IronOcr.OcrResult" /> object containing text,  and detailed, structured information about the extracted text content.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadAsync(IronSoftware.Drawing.AnyBitmap,IronSoftware.Drawing.CropRectangle,System.Int32)">
            <summary>
            Reads text from an <see cref="T:IronSoftware.Drawing.AnyBitmap" /> object and returns an <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
            <param name="Image">An <see cref="T:IronSoftware.Drawing.AnyBitmap" /> object</param>
            <param name="ContentArea">Specifies a region within the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
            <param name="TimeoutMs">Optional timeout in milliseconds, after which the Ocr read will be cancelled. Not supported in .NET 4.0</param>
            <returns>A task that represents the asynchronous read operation. The value of the <see cref="P:System.Threading.Tasks.Task`1.Result" /> property contains
            an <see cref="T:IronOcr.OcrResult" /> object containing text,  and detailed, structured information about the extracted text content.</returns>
        </member>
        <member name="P:IronOcr.IronTesseract.MultiThreaded">
            <summary>
            Deprecated (operations are now always multithreaded)
            </summary>
            <exclude />
        </member>
        <member name="M:IronOcr.IronTesseract.#ctor">
            <summary>
            Public constructor.  Creates a default instance of IronTesseract
            </summary>
        </member>
        <member name="M:IronOcr.IronTesseract.#ctor(IronOcr.TesseractConfiguration)">
            <summary>
            Public constructor.  Creates an instance of IronTesseract with a customized <see cref="T:IronOcr.TesseractConfiguration" />.
            <para>This allows advanced developers to fine tune Tesseract behavior.</para></summary>
        </member>
        <member name="M:IronOcr.IronTesseract.Read(IronOcr.OcrInput)">
            <summary>
             Reads text from an <see cref="T:IronOcr.OcrInput" /> object and returns an <see cref="T:IronOcr.OcrResult" /> object.
            <para><see cref="T:IronOcr.OcrInput" /> is the preferred input type because it allows for OCR of multi-paged documents, and allows images to be enhanced before OCR to obtain faster, more accurate results.</para><para>There are also other overloads of this method that allow for Images and PDFs to be read directly as  File paths and Bitmaps. </para></summary>
            <param name="Input">An <see cref="T:IronOcr.OcrInput" /> document which can contain one or more images and PDFs</param>
            <returns>A <see cref="T:IronOcr.OcrResult" /> object containing text,  and detailed, structured information about the extracted text content.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.Read(System.String)">
            <summary>
            Reads text from an Image file and returns an <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
            <param name="ImagePath">Path to an image file.</param>
            <returns>A <see cref="T:IronOcr.OcrResult" /> object containing text,  and detailed, structured information about the extracted text content.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.Read(System.String,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Reads text from a region of an Image file and returns an <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
            <param name="ImagePath">Path to an image file.</param>
            <param name="ContentArea">Specifies a region within the  image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
            <returns>A <see cref="T:IronOcr.OcrResult" /> object containing text,  and detailed, structured information about the extracted text content.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.Read(IronSoftware.Drawing.AnyBitmap)">
            <summary>
            Reads text from a IronSoftware.Drawing.AnyBitmap Image file and returns an <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
            <param name="Image">An <see cref="T:IronSoftware.Drawing.AnyBitmap" />, SixLabor.ImageSharp.Image, SkiaSharp.SKBitmap, SkiaSharp.SKImage, Microsoft.Maui.Graphics.Platform.PlatformImage, System.Drawing.Bitmap, or System.Drawing.Image</param>
            <returns>A <see cref="T:IronOcr.OcrResult" /> object containing text,  and detailed, structured information about the extracted text content.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.Read(IronSoftware.Drawing.AnyBitmap,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Reads text from a region of a IronSoftware.Drawing.AnyBitmap Image file and returns an <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
            <param name="Image">An <see cref="T:IronSoftware.Drawing.AnyBitmap" />, SixLabor.ImageSharp.Image, SkiaSharp.SKBitmap, SkiaSharp.SKImage, Microsoft.Maui.Graphics.Platform.PlatformImage, System.Drawing.Bitmap, or System.Drawing.Image</param>
            <param name="ContentArea">Specifies a region within the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
            <returns>A <see cref="T:IronOcr.OcrResult" /> object containing text,  and detailed, structured information about the extracted text content.</returns>
        </member>
        <member name="F:IronOcr.IronTesseract.Configuration">
            <summary>
            An instance of <see cref="T:IronOcr.TesseractConfiguration" /> which allows fine-grained control of the underlying Tesseract OCR Engine.
            <para>Options include: Language file detail level.  Page Segmentation Mode and access to the entire API of tesseract settings variables.</para></summary>
        </member>
        <member name="P:IronOcr.IronTesseract.Language">
            <summary>
             The Natural Language of the documents Which <see cref="T:IronOcr.IronTesseract" /> will read.
             <para> Default is English. Additional languages can be installed easily using Nuget https://www.nuget.org/packages?q=IronOcr.Languages or downloaded from  https://ironsoftware.com/csharp/ocr/languages/</para><para>We may use multiple languages packs simultaneously with the UseMultipleLanguages method.</para><para>We can use custom Tesseract .tessdata language packs with the <see cref="M:IronOcr.IronTesseract.UseCustomTesseractLanguageFile(System.String)" /> method.</para></summary>
            <seealso cref="T:IronOcr.OcrLanguage" />
        </member>
        <member name="M:IronOcr.IronTesseract.UseCustomTesseractLanguageFile(System.String)">
            <summary>
            IronTesseract will use  a tesseract .traineddata language file as its only OCR language.
            <para>https://github.com/tesseract-ocr/tessdata</para></summary>
            <param name="TrainedDataPath">File path to a .traineddata file. These can be downloaded from https://github.com/tesseract-ocr/tessdata or generated using Tesseract command line.</param>
        </member>
        <member name="M:IronOcr.IronTesseract.AddSecondaryLanguage(IronOcr.OcrLanguage)">
            <summary>
             IronTesseract will use  multiple tesseract language files simultaneously.  MultilingualOCR.
              <para>Any number of secondary languages may be added.  Speed and performance may be affected.</para></summary>
            <param name="SecondaryLanguage">An additional <see cref="T:IronOcr.OcrLanguage" /></param>
        </member>
        <member name="M:IronOcr.IronTesseract.AddSecondaryLanguage(System.String)">
            <summary>
             IronTesseract will use  multiple tesseract language files simultaneously.  MultilingualOCR using a custom .traineddata tesseract 3,4 or 5 language file.
             <para>Any number of secondary languages may be added.  Speed and performance may be affected.</para></summary>
            <param name="CustomLanguagePath">File path to a .traineddata tesseract language pack.</param>
        </member>
        <member name="M:IronOcr.IronTesseract.ClearSecondaryLanguages">
            <summary>
            Removes all languages add by <see cref="M:IronOcr.IronTesseract.AddSecondaryLanguage(IronOcr.OcrLanguage)" /> or <see cref="M:IronOcr.IronTesseract.AddSecondaryLanguage(System.String)" /></summary>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadMultithreaded(System.Collections.Generic.IEnumerable{IronOcr.OcrInput})">
            <summary>
            Obsolete.  "All IronOCR read Operations are run Multithreaded by default.
            </summary>
            <param name="Inputs">Any number of <see cref="T:IronOcr.OcrInput" /> documents.</param>
            <returns>An array of <see cref="T:IronOcr.OcrResult" /> objects in the order of the original  <see cref="T:IronOcr.OcrInput" /> documents.</returns>
            <seealso cref="P:IronOcr.IronTesseract.MultiThreaded" />
        </member>
        <member name="M:IronOcr.IronTesseract.ReadMultithreaded(IronOcr.OcrInput[])">
            <summary>
            Reads multiple multiple <see cref="T:IronOcr.OcrInput" /> documents in parallel multithreading for enhanced performance.
            </summary>
            <param name="Inputs">Any number of <see cref="T:IronOcr.OcrInput" /> documents.</param>
            <returns>An array of <see cref="T:IronOcr.OcrResult" /> objects in the order of the original  <see cref="T:IronOcr.OcrInput" /> documents.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadMultithreaded(System.String[])">
            <summary>
            Reads multiple multiple images files (given as file paths) in parallel multithreading for enhanced performance.
            </summary>
            <param name="ImagePaths">Any number of image file paths.</param>
            <returns>An array of <see cref="T:IronOcr.OcrResult" /> objects in the order of the original input.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadMultithreaded(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Reads multiple multiple images files (given as file paths) in parallel multithreading for enhanced performance.
            </summary>
            <param name="Paths">Any number of image file paths.</param>
            <returns>An array of <see cref="T:IronOcr.OcrResult" /> objects in the order of the original input.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadMultithreaded(System.Byte[][])">
            <summary>
            Reads multiple byte arrays (byte[])  containing image file data in parallel multithreading for enhanced performance.
            <para>Reads Jpeg, TIFF, Png, Gif, BMP, WBMP, PDF and many more.</para></summary>
            <param name="ByteArrays">Any number of images as byte arrays.</param>
            <returns>An array of OcrResult objects in the order of the original binary input.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadMultithreaded(System.Collections.Generic.IEnumerable{System.Byte[]})">
            <summary>
            Reads multiple byte arrays (byte[])  containing image file data in parallel multithreading for enhanced performance.
            <para>Reads Jpeg, TIFF, Png, Gif, BMP, WBMP, PDF and many more.</para></summary>
            <param name="ByteArrays">Any number of images as byte arrays.</param>
            <returns>An array of OcrResult objects in the order of the original binary input.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadMultithreaded(System.IO.Stream[])">
            <summary>
            Reads multiple <see cref="T:System.IO.Stream" />s containing image file data in parallel multithreading for enhanced performance.
            <para>Reads Jpeg, TIFF, Png, Gif, BMP, WBMP, PDF and many more.</para></summary>
            <param name="Streams">Any number of images as <see cref="T:System.IO.Stream" />s</param>
            <returns>An array of OcrResult objects in the order of the original <see cref="T:System.IO.Stream" /> input.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadMultithreaded(System.Collections.Generic.IEnumerable{System.IO.Stream})">
            <summary>
            Reads multiple <see cref="T:System.IO.Stream" />s containing image file data in parallel multithreading for enhanced performance.
            <para>Reads Jpeg, TIFF, Png, Gif, BMP, WBMP, PDF and many more.</para></summary>
            <param name="Streams">Any number of images as <see cref="T:System.IO.Stream" />s</param>
            <returns>An array of <see cref="T:IronOcr.OcrResult" /> objects in the order of the original <see cref="T:System.IO.Stream" /> input.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadMultithreaded(SixLabors.ImageSharp.Image[])">
            <summary>
            Reads multiple <see cref="T:SixLabors.ImageSharp.Image" /> in parallel multithreading for enhanced performance.
            </summary>
            <param name="Images">Any number of <see cref="T:SixLabors.ImageSharp.Image" />s</param>
            <returns>An array of <see cref="T:IronOcr.OcrResult" /> objects in the order of the original <see cref="T:SixLabors.ImageSharp.Image" /> input.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadMultithreaded(System.Collections.Generic.IEnumerable{SixLabors.ImageSharp.Image})">
            <summary>
            Reads multiple <see cref="T:SixLabors.ImageSharp.Image" /> in parallel multithreading for enhanced performance.
            </summary>
            <param name="Images">An IEnumerable of <see cref="T:SixLabors.ImageSharp.Image" /></param>
            <returns>An array of <see cref="T:IronOcr.OcrResult" /> objects in the order of the original <see cref="T:SixLabors.ImageSharp.Image" /> input.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadMultithreaded(IronSoftware.Drawing.AnyBitmap[])">
            <summary>
            Reads multiple bitmaps in parallel multithreading for enhanced performance.
            </summary>
            <param name="Bitmaps">Any number of Bitmaps</param>
            <returns>An array of <see cref="T:IronOcr.OcrResult" /> objects in the order of the original Bitmap input.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadMultithreaded(System.Collections.Generic.IEnumerable{IronSoftware.Drawing.AnyBitmap})">
            <summary>
            Reads multiple bitmaps in parallel multithreading for enhanced performance.
            </summary>
            <param name="Bitmaps">An IEnumerable of bitmaps</param>
            <returns>An array of <see cref="T:IronOcr.OcrResult" /> objects in the order of the original Bitmap input.</returns>
        </member>
        <member name="E:IronOcr.IronTesseract.OcrProgress">
            <summary>
            An Event which can be used to track OCR progress and inform users of OCR performance and progress.
            <para>Progress is reported via the <see cref="T:IronOcr.Events.OcrProgresEventsArgs" /> class </para></summary>
            <seealso cref="T:IronOcr.Events.OcrProgresEventsArgs" />
            <example>
                <code>myIronTesseract.OcrProgress += (object o, IronOcr.Events.OcrProgresEventsArgs e) =&gt;
                   {
                      Console.WriteLine(e.ProgressPercent + "%   " + e.Duration.TotalSeconds+"s"  );
                   }</code>
            </example>
        </member>
        <member name="M:IronOcr.IronTesseract.TesseractPageFactory(DynamicTesseract.TesseractEngine,IronOcr.OcrInput.PixPlus)">
            <summary>
            Allows IronTesseract to read documents using multiple threads on multiple CPU cores. A significant performance improvement over traditional Tesseract.
            </summary>
        </member>
        <member name="T:IronOcr.NamespaceDoc">
            <summary>
                <para>IronOcr is an advanced Optical Character Recognition library for the .Net Framework.</para>
                <para> IronOcr provides advanced OCR by processing Images and PDF documents to test using an embedded Tesseract engine supporting Tesseract 3,4 and 5.</para>
                <para>To read an image to text - first add the image to an <see cref="T:IronOcr.OcrInput" /> document, and then convert it to plain text it with the <see cref="T:IronOcr.IronTesseract" /> class.</para>
                <para>Support for .Net 4.0 and above, .Net Standard 2.x and.Net Core 2, 3  &amp; 5 omn on Windows, Mac and Linux.  https://ironsoftware.com/csharp/ocr/</para>
            </summary>
        </member>
        <member name="T:IronOcr.TesseractConfiguration">
            <summary>
            A configuration object that fine-tunes Tesseract behavior at an Instance level.    Gives access to every option available to tesseract command line or C++ API users.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractConfiguration.RenderSearchablePdfsAndHocr">
            <summary>
            Prerenders searchable PDF documents and HOCR files during Tesseract read operations.  
            Required True to use <see cref="M:IronOcr.OcrResult.SaveAsHocrFile(System.String)" /> and  <see cref="M:IronOcr.OcrResult.SaveAsSearchablePdf(System.String)" /> methods.
            </summary>
        </member>
        <member name="M:IronOcr.TesseractConfiguration.Clone">
            <summary>
            Clone this See <see cref="T:IronOcr.TesseractConfiguration" /></summary>
            <returns>A copy of this <see cref="T:IronOcr.TesseractConfiguration" /> as an object.</returns>
        </member>
        <member name="F:IronOcr.TesseractConfiguration.TesseractVersion">
            <summary>
            IronOcr supports Tesseract 5.1
            </summary>
        </member>
        <member name="P:IronOcr.TesseractConfiguration.WhiteListCharacters">
            <summary>
            If set, only characters in this string will be read by IronTesseract.  Remember to include punctuation marks and space characters.
            <para>If know, WhiteListCharacters can dramatically increase performance and accuracy.</para><para>Also very useful if we expect only numbers or only letters.</para></summary>
        </member>
        <member name="P:IronOcr.TesseractConfiguration.BlackListCharacters">
            <summary>
            If set, any characters in this string will not be recognized by IronTesseract OCR.  An example use-case is to remove characters with accents.
             <para>BlackListCharacters and WhiteListCharacters can positively impact speed and accuracy if set thoughtfully.</para></summary>
            <seealso cref="P:IronOcr.TesseractConfiguration.WhiteListCharacters" />
        </member>
        <member name="F:IronOcr.TesseractConfiguration.PageSegmentationMode">
            <summary>
            Determines how a page is scanned to find potential blocks of text.  Best documented in Tesseract developer websites.
            <para><see cref="F:IronOcr.TesseractPageSegmentationMode.AutoOsd" /> is a safe default.</para></summary>
        </member>
        <member name="F:IronOcr.TesseractConfiguration.EngineMode">
            <summary>
            Allows the developer to choose the algorithm Tesseract will use for OCR.  TesseractAndLstm is the recommended behavior for IronOCR.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractConfiguration.ReadBarCodes">
            <summary>
            Optionally turns on Barcode reading alongside OCR.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractConfiguration.TesseractVariables">
            <summary>
            Add Tesseract configuration variables of type bool, int, double or string.  Gives access to all Tesseract command-line and config file options.
            <para>
            To learn how to use this, Tesseract documentation is very sparse.  Please use <see cref="M:IronOcr.TesseractConfiguration.TrySaveAllTesseractVariablesToFile(System.String)" /> to output all available tesseract variables for your installation of Tesseract.
            </para><para>
            To learn more about how to use TesseractVariables see our guide at: https://ironsoftware.com/csharp/ocr/docs/questions/csharp-tesseract-config-configuration-variables/
            </para></summary>
        </member>
        <member name="M:IronOcr.TesseractConfiguration.TrySaveAllTesseractVariablesToFile(System.String)">
            <summary>
            Saves all Tesseract internal settings for this Configuration to a plain text file.
            </summary>
            <param name="Path">A valid file path.  Recommended file extension is .txt</param>
            <returns>True if file successfully saved</returns>
        </member>
        <member name="T:IronOcr.OcrLanguage">
            <summary>
             The natural language in which OCR documents will be read.
             <para>Any number of languages may be used simultaneously using the IronTessseract.AddSecondaryLanguage() Method.  </para><para>To use a custom Tesseract language file (.traineddata) please see the IronTessseract.UseCustomLanguageFile() Method</para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Afrikaans">
            <summary>
            Afrikaans  OCR language. Performs OCR, reading documents of the Afrikaans language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Afrikaans uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Afrikaans' from https://www.nuget.org/packages/IronOcr.Languages.Afrikaans/ to your Visual Studio project.<br />
            Alternatively download the "Afrikaans.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AfrikaansBest">
            <summary>
            Afrikaans  OCR language. Performs OCR, reading documents of the Afrikaans language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Afrikaans uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Afrikaans' from https://www.nuget.org/packages/IronOcr.Languages.Afrikaans/ to your Visual Studio project.<br />
            Alternatively download the "Afrikaans.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AfrikaansFast">
            <summary>
            Afrikaans  OCR language. Performs OCR, reading documents of the Afrikaans language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Afrikaans uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Afrikaans' from https://www.nuget.org/packages/IronOcr.Languages.Afrikaans/ to your Visual Studio project.<br />
            Alternatively download the "Afrikaans.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Amharic">
            <summary>
            Amharic  OCR language. Performs OCR, reading documents of the Amharic (አማርኛ) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Amharic uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Amharic' from https://www.nuget.org/packages/IronOcr.Languages.Amharic/ to your Visual Studio project.<br />
            Alternatively download the "Amharic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AmharicBest">
            <summary>
            Amharic  OCR language. Performs OCR, reading documents of the Amharic (አማርኛ) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Amharic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Amharic' from https://www.nuget.org/packages/IronOcr.Languages.Amharic/ to your Visual Studio project.<br />
            Alternatively download the "Amharic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AmharicFast">
            <summary>
            Amharic  OCR language. Performs OCR, reading documents of the Amharic (አማርኛ) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Amharic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Amharic' from https://www.nuget.org/packages/IronOcr.Languages.Amharic/ to your Visual Studio project.<br />
            Alternatively download the "Amharic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Arabic">
            <summary>
            Arabic  OCR language. Performs OCR, reading documents of the Arabic (العربية) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Arabic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Arabic' from https://www.nuget.org/packages/IronOcr.Languages.Arabic/ to your Visual Studio project.<br />
            Alternatively download the "Arabic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArabicBest">
            <summary>
            Arabic  OCR language. Performs OCR, reading documents of the Arabic (العربية) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Arabic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Arabic' from https://www.nuget.org/packages/IronOcr.Languages.Arabic/ to your Visual Studio project.<br />
            Alternatively download the "Arabic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArabicFast">
            <summary>
            Arabic  OCR language. Performs OCR, reading documents of the Arabic (العربية) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Arabic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Arabic' from https://www.nuget.org/packages/IronOcr.Languages.Arabic/ to your Visual Studio project.<br />
            Alternatively download the "Arabic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArabicAlphabet">
            <summary>
            Arabic Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Arabic Alphabet (العربية) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Arabic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Arabic' from https://www.nuget.org/packages/IronOcr.Languages.Arabic/ to your Visual Studio project.<br />
            Alternatively download the "Arabic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArabicAlphabetBest">
            <summary>
            Arabic Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Arabic Alphabet (العربية) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Arabic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Arabic' from https://www.nuget.org/packages/IronOcr.Languages.Arabic/ to your Visual Studio project.<br />
            Alternatively download the "Arabic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArabicAlphabetFast">
            <summary>
            Arabic Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Arabic Alphabet (العربية) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Arabic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Arabic' from https://www.nuget.org/packages/IronOcr.Languages.Arabic/ to your Visual Studio project.<br />
            Alternatively download the "Arabic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArmenianAlphabet">
            <summary>
            Armenian Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Armenian Alphabet (Հայերեն) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Armenian Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Armenian' from https://www.nuget.org/packages/IronOcr.Languages.Armenian/ to your Visual Studio project.<br />
            Alternatively download the "Armenian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArmenianAlphabetBest">
            <summary>
            Armenian Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Armenian Alphabet (Հայերեն) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Armenian Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Armenian' from https://www.nuget.org/packages/IronOcr.Languages.Armenian/ to your Visual Studio project.<br />
            Alternatively download the "Armenian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArmenianAlphabetFast">
            <summary>
            Armenian Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Armenian Alphabet (Հայերեն) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Armenian Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Armenian' from https://www.nuget.org/packages/IronOcr.Languages.Armenian/ to your Visual Studio project.<br />
            Alternatively download the "Armenian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Assamese">
            <summary>
            Assamese  OCR language. Performs OCR, reading documents of the Assamese (অসমীয়া) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Assamese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Assamese' from https://www.nuget.org/packages/IronOcr.Languages.Assamese/ to your Visual Studio project.<br />
            Alternatively download the "Assamese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AssameseBest">
            <summary>
            Assamese  OCR language. Performs OCR, reading documents of the Assamese (অসমীয়া) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Assamese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Assamese' from https://www.nuget.org/packages/IronOcr.Languages.Assamese/ to your Visual Studio project.<br />
            Alternatively download the "Assamese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AssameseFast">
            <summary>
            Assamese  OCR language. Performs OCR, reading documents of the Assamese (অসমীয়া) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Assamese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Assamese' from https://www.nuget.org/packages/IronOcr.Languages.Assamese/ to your Visual Studio project.<br />
            Alternatively download the "Assamese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Azerbaijani">
            <summary>
            Azerbaijani  OCR language. Performs OCR, reading documents of the Azerbaijani (azərbaycan dili) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Azerbaijani uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Azerbaijani' from https://www.nuget.org/packages/IronOcr.Languages.Azerbaijani/ to your Visual Studio project.<br />
            Alternatively download the "Azerbaijani.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AzerbaijaniBest">
            <summary>
            Azerbaijani  OCR language. Performs OCR, reading documents of the Azerbaijani (azərbaycan dili) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Azerbaijani uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Azerbaijani' from https://www.nuget.org/packages/IronOcr.Languages.Azerbaijani/ to your Visual Studio project.<br />
            Alternatively download the "Azerbaijani.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AzerbaijaniFast">
            <summary>
            Azerbaijani  OCR language. Performs OCR, reading documents of the Azerbaijani (azərbaycan dili) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Azerbaijani uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Azerbaijani' from https://www.nuget.org/packages/IronOcr.Languages.Azerbaijani/ to your Visual Studio project.<br />
            Alternatively download the "Azerbaijani.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AzerbaijaniCyrillic">
            <summary>
            Azerbaijani Cyrillic  OCR language. Performs OCR, reading documents of the Azerbaijani (azərbaycan dili) language ,using the Cyrillic alphabet, with an understanding of spelling and linguistic context. 
            <para>This Default variant of Azerbaijani Cyrillic uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Azerbaijani' from https://www.nuget.org/packages/IronOcr.Languages.Azerbaijani/ to your Visual Studio project.<br />
            Alternatively download the "Azerbaijani.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AzerbaijaniCyrillicBest">
            <summary>
            Azerbaijani Cyrillic  OCR language. Performs OCR, reading documents of the Azerbaijani (azərbaycan dili) language ,using the Cyrillic alphabet, with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Azerbaijani Cyrillic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Azerbaijani' from https://www.nuget.org/packages/IronOcr.Languages.Azerbaijani/ to your Visual Studio project.<br />
            Alternatively download the "Azerbaijani.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AzerbaijaniCyrillicFast">
            <summary>
            Azerbaijani Cyrillic  OCR language. Performs OCR, reading documents of the Azerbaijani (azərbaycan dili) language ,using the Cyrillic alphabet, with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Azerbaijani Cyrillic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Azerbaijani' from https://www.nuget.org/packages/IronOcr.Languages.Azerbaijani/ to your Visual Studio project.<br />
            Alternatively download the "Azerbaijani.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Belarusian">
            <summary>
            Belarusian  OCR language. Performs OCR, reading documents of the Belarusian (беларуская мова) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Belarusian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Belarusian' from https://www.nuget.org/packages/IronOcr.Languages.Belarusian/ to your Visual Studio project.<br />
            Alternatively download the "Belarusian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BelarusianBest">
            <summary>
            Belarusian  OCR language. Performs OCR, reading documents of the Belarusian (беларуская мова) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Belarusian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Belarusian' from https://www.nuget.org/packages/IronOcr.Languages.Belarusian/ to your Visual Studio project.<br />
            Alternatively download the "Belarusian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BelarusianFast">
            <summary>
            Belarusian  OCR language. Performs OCR, reading documents of the Belarusian (беларуская мова) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Belarusian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Belarusian' from https://www.nuget.org/packages/IronOcr.Languages.Belarusian/ to your Visual Studio project.<br />
            Alternatively download the "Belarusian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Bengali">
            <summary>
            Bengali  OCR language. Performs OCR, reading documents of the Bengali (Bangla,বাংলা) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Bengali uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bengali' from https://www.nuget.org/packages/IronOcr.Languages.Bengali/ to your Visual Studio project.<br />
            Alternatively download the "Bengali.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BengaliBest">
            <summary>
            Bengali  OCR language. Performs OCR, reading documents of the Bengali (Bangla,বাংলা) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Bengali uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bengali' from https://www.nuget.org/packages/IronOcr.Languages.Bengali/ to your Visual Studio project.<br />
            Alternatively download the "Bengali.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BengaliFast">
            <summary>
            Bengali  OCR language. Performs OCR, reading documents of the Bengali (Bangla,বাংলা) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Bengali uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bengali' from https://www.nuget.org/packages/IronOcr.Languages.Bengali/ to your Visual Studio project.<br />
            Alternatively download the "Bengali.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BengaliAlphabet">
            <summary>
            Bengali Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Bengali Alphabet (Bangla,বাংলা) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Bengali Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bengali' from https://www.nuget.org/packages/IronOcr.Languages.Bengali/ to your Visual Studio project.<br />
            Alternatively download the "Bengali.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BengaliAlphabetBest">
            <summary>
            Bengali Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Bengali Alphabet (Bangla,বাংলা) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Bengali Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bengali' from https://www.nuget.org/packages/IronOcr.Languages.Bengali/ to your Visual Studio project.<br />
            Alternatively download the "Bengali.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BengaliAlphabetFast">
            <summary>
            Bengali Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Bengali Alphabet (Bangla,বাংলা) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Bengali Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bengali' from https://www.nuget.org/packages/IronOcr.Languages.Bengali/ to your Visual Studio project.<br />
            Alternatively download the "Bengali.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Tibetan">
            <summary>
            Tibetan  OCR language. Performs OCR, reading documents of the Tibetan (Tibetan Standard, Tibetan, Central ཡིག་) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Tibetan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tibetan' from https://www.nuget.org/packages/IronOcr.Languages.Tibetan/ to your Visual Studio project.<br />
            Alternatively download the "Tibetan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TibetanBest">
            <summary>
            Tibetan  OCR language. Performs OCR, reading documents of the Tibetan (Tibetan Standard, Tibetan, Central ཡིག་) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Tibetan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tibetan' from https://www.nuget.org/packages/IronOcr.Languages.Tibetan/ to your Visual Studio project.<br />
            Alternatively download the "Tibetan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TibetanFast">
            <summary>
            Tibetan  OCR language. Performs OCR, reading documents of the Tibetan (Tibetan Standard, Tibetan, Central ཡིག་) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Tibetan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tibetan' from https://www.nuget.org/packages/IronOcr.Languages.Tibetan/ to your Visual Studio project.<br />
            Alternatively download the "Tibetan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Bosnian">
            <summary>
            Bosnian  OCR language. Performs OCR, reading documents of the Bosnian (bosanski jezik) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Bosnian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bosnian' from https://www.nuget.org/packages/IronOcr.Languages.Bosnian/ to your Visual Studio project.<br />
            Alternatively download the "Bosnian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BosnianBest">
            <summary>
            Bosnian  OCR language. Performs OCR, reading documents of the Bosnian (bosanski jezik) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Bosnian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bosnian' from https://www.nuget.org/packages/IronOcr.Languages.Bosnian/ to your Visual Studio project.<br />
            Alternatively download the "Bosnian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BosnianFast">
            <summary>
            Bosnian  OCR language. Performs OCR, reading documents of the Bosnian (bosanski jezik) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Bosnian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bosnian' from https://www.nuget.org/packages/IronOcr.Languages.Bosnian/ to your Visual Studio project.<br />
            Alternatively download the "Bosnian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Breton">
            <summary>
            Breton  OCR language. Performs OCR, reading documents of the Breton (brezhoneg) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Breton uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Breton' from https://www.nuget.org/packages/IronOcr.Languages.Breton/ to your Visual Studio project.<br />
            Alternatively download the "Breton.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BretonBest">
            <summary>
            Breton  OCR language. Performs OCR, reading documents of the Breton (brezhoneg) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Breton uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Breton' from https://www.nuget.org/packages/IronOcr.Languages.Breton/ to your Visual Studio project.<br />
            Alternatively download the "Breton.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BretonFast">
            <summary>
            Breton  OCR language. Performs OCR, reading documents of the Breton (brezhoneg) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Breton uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Breton' from https://www.nuget.org/packages/IronOcr.Languages.Breton/ to your Visual Studio project.<br />
            Alternatively download the "Breton.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Bulgarian">
            <summary>
            Bulgarian  OCR language. Performs OCR, reading documents of the Bulgarian (български език) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Bulgarian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bulgarian' from https://www.nuget.org/packages/IronOcr.Languages.Bulgarian/ to your Visual Studio project.<br />
            Alternatively download the "Bulgarian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BulgarianBest">
            <summary>
            Bulgarian  OCR language. Performs OCR, reading documents of the Bulgarian (български език) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Bulgarian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bulgarian' from https://www.nuget.org/packages/IronOcr.Languages.Bulgarian/ to your Visual Studio project.<br />
            Alternatively download the "Bulgarian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BulgarianFast">
            <summary>
            Bulgarian  OCR language. Performs OCR, reading documents of the Bulgarian (български език) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Bulgarian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bulgarian' from https://www.nuget.org/packages/IronOcr.Languages.Bulgarian/ to your Visual Studio project.<br />
            Alternatively download the "Bulgarian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CanadianAboriginalAlphabet">
            <summary>
            Canadian Aboriginal Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Canadian Aboriginal Alphabet (Canadian First Nations, Indigenous Canadians, Native Canadian, Inuit) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Canadian Aboriginal Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.CanadianAboriginal' from https://www.nuget.org/packages/IronOcr.Languages.CanadianAboriginal/ to your Visual Studio project.<br />
            Alternatively download the "CanadianAboriginal.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CanadianAboriginalAlphabetBest">
            <summary>
            Canadian Aboriginal Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Canadian Aboriginal Alphabet (Canadian First Nations, Indigenous Canadians, Native Canadian, Inuit) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Canadian Aboriginal Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.CanadianAboriginal' from https://www.nuget.org/packages/IronOcr.Languages.CanadianAboriginal/ to your Visual Studio project.<br />
            Alternatively download the "CanadianAboriginal.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CanadianAboriginalAlphabetFast">
            <summary>
            Canadian Aboriginal Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Canadian Aboriginal Alphabet (Canadian First Nations, Indigenous Canadians, Native Canadian, Inuit) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Canadian Aboriginal Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.CanadianAboriginal' from https://www.nuget.org/packages/IronOcr.Languages.CanadianAboriginal/ to your Visual Studio project.<br />
            Alternatively download the "CanadianAboriginal.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Catalan">
            <summary>
            Catalan  OCR language. Performs OCR, reading documents of the Catalan (català, valencià) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Catalan uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Catalan' from https://www.nuget.org/packages/IronOcr.Languages.Catalan/ to your Visual Studio project.<br />
            Alternatively download the "Catalan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CatalanBest">
            <summary>
            Catalan  OCR language. Performs OCR, reading documents of the Catalan (català, valencià) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Catalan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Catalan' from https://www.nuget.org/packages/IronOcr.Languages.Catalan/ to your Visual Studio project.<br />
            Alternatively download the "Catalan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CatalanFast">
            <summary>
            Catalan  OCR language. Performs OCR, reading documents of the Catalan (català, valencià) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Catalan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Catalan' from https://www.nuget.org/packages/IronOcr.Languages.Catalan/ to your Visual Studio project.<br />
            Alternatively download the "Catalan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Cebuano">
            <summary>
            Cebuano  OCR language. Performs OCR, reading documents of the Cebuano (Bisaya, Binisaya) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Cebuano uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cebuano' from https://www.nuget.org/packages/IronOcr.Languages.Cebuano/ to your Visual Studio project.<br />
            Alternatively download the "Cebuano.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CebuanoBest">
            <summary>
            Cebuano  OCR language. Performs OCR, reading documents of the Cebuano (Bisaya, Binisaya) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Cebuano uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cebuano' from https://www.nuget.org/packages/IronOcr.Languages.Cebuano/ to your Visual Studio project.<br />
            Alternatively download the "Cebuano.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CebuanoFast">
            <summary>
            Cebuano  OCR language. Performs OCR, reading documents of the Cebuano (Bisaya, Binisaya) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Cebuano uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cebuano' from https://www.nuget.org/packages/IronOcr.Languages.Cebuano/ to your Visual Studio project.<br />
            Alternatively download the "Cebuano.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Czech">
            <summary>
            Czech  OCR language. Performs OCR, reading documents of the Czech (čeština, český jazyk) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Czech uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Czech' from https://www.nuget.org/packages/IronOcr.Languages.Czech/ to your Visual Studio project.<br />
            Alternatively download the "Czech.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CzechBest">
            <summary>
            Czech  OCR language. Performs OCR, reading documents of the Czech (čeština, český jazyk) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Czech uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Czech' from https://www.nuget.org/packages/IronOcr.Languages.Czech/ to your Visual Studio project.<br />
            Alternatively download the "Czech.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CzechFast">
            <summary>
            Czech  OCR language. Performs OCR, reading documents of the Czech (čeština, český jazyk) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Czech uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Czech' from https://www.nuget.org/packages/IronOcr.Languages.Czech/ to your Visual Studio project.<br />
            Alternatively download the "Czech.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CherokeeAlphabet">
            <summary>
            Cherokee Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Cherokee Alphabet (ᏣᎳᎩ ᎦᏬᏂᎯᏍᏗ, Tsalagi Gawonihisdi) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Cherokee Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cherokee' from https://www.nuget.org/packages/IronOcr.Languages.Cherokee/ to your Visual Studio project.<br />
            Alternatively download the "Cherokee.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CherokeeAlphabetBest">
            <summary>
            Cherokee Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Cherokee Alphabet (ᏣᎳᎩ ᎦᏬᏂᎯᏍᏗ, Tsalagi Gawonihisdi) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Cherokee Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cherokee' from https://www.nuget.org/packages/IronOcr.Languages.Cherokee/ to your Visual Studio project.<br />
            Alternatively download the "Cherokee.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CherokeeAlphabetFast">
            <summary>
            Cherokee Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Cherokee Alphabet (ᏣᎳᎩ ᎦᏬᏂᎯᏍᏗ, Tsalagi Gawonihisdi) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Cherokee Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cherokee' from https://www.nuget.org/packages/IronOcr.Languages.Cherokee/ to your Visual Studio project.<br />
            Alternatively download the "Cherokee.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseSimplified">
            <summary>
            Chinese Simplified  OCR language. Performs OCR, reading documents of the Chinese Simplified [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Chinese Simplified uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseSimplifiedBest">
            <summary>
            Chinese Simplified  OCR language. Performs OCR, reading documents of the Chinese Simplified [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Chinese Simplified uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseSimplifiedFast">
            <summary>
            Chinese Simplified  OCR language. Performs OCR, reading documents of the Chinese Simplified [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Chinese Simplified uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseSimplifiedVertical">
            <summary>
            Chinese Simplified Vertical  OCR language. Performs OCR, reading documents of the Chinese Simplified Vertical [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Chinese Simplified Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseSimplifiedVerticalBest">
            <summary>
            Chinese Simplified Vertical  OCR language. Performs OCR, reading documents of the Chinese Simplified Vertical [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Chinese Simplified Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseSimplifiedVerticalFast">
            <summary>
            Chinese Simplified Vertical  OCR language. Performs OCR, reading documents of the Chinese Simplified Vertical [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Chinese Simplified Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseTraditional">
            <summary>
            Chinese Traditional  OCR language. Performs OCR, reading documents of the Chinese Traditional [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Chinese Traditional uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseTraditionalBest">
            <summary>
            Chinese Traditional  OCR language. Performs OCR, reading documents of the Chinese Traditional [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Chinese Traditional uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseTraditionalFast">
            <summary>
            Chinese Traditional  OCR language. Performs OCR, reading documents of the Chinese Traditional [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Chinese Traditional uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseTraditionalVertical">
            <summary>
            Chinese Traditional Vertical  OCR language. Performs OCR, reading documents of the Chinese Traditional Vertical [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Chinese Traditional Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseTraditionalVerticalBest">
            <summary>
            Chinese Traditional Vertical  OCR language. Performs OCR, reading documents of the Chinese Traditional Vertical [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Chinese Traditional Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseTraditionalVerticalFast">
            <summary>
            Chinese Traditional Vertical  OCR language. Performs OCR, reading documents of the Chinese Traditional Vertical [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Chinese Traditional Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Cherokee">
            <summary>
            Cherokee  OCR language. Performs OCR, reading documents of the Cherokee (ᏣᎳᎩ ᎦᏬᏂᎯᏍᏗ, Tsalagi Gawonihisdi) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Cherokee uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cherokee' from https://www.nuget.org/packages/IronOcr.Languages.Cherokee/ to your Visual Studio project.<br />
            Alternatively download the "Cherokee.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CherokeeBest">
            <summary>
            Cherokee  OCR language. Performs OCR, reading documents of the Cherokee (ᏣᎳᎩ ᎦᏬᏂᎯᏍᏗ, Tsalagi Gawonihisdi) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Cherokee uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cherokee' from https://www.nuget.org/packages/IronOcr.Languages.Cherokee/ to your Visual Studio project.<br />
            Alternatively download the "Cherokee.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CherokeeFast">
            <summary>
            Cherokee  OCR language. Performs OCR, reading documents of the Cherokee (ᏣᎳᎩ ᎦᏬᏂᎯᏍᏗ, Tsalagi Gawonihisdi) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Cherokee uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cherokee' from https://www.nuget.org/packages/IronOcr.Languages.Cherokee/ to your Visual Studio project.<br />
            Alternatively download the "Cherokee.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Corsican">
            <summary>
            Corsican  OCR language. Performs OCR, reading documents of the Corsican (corsu, lingua corsa) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Corsican uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Corsican' from https://www.nuget.org/packages/IronOcr.Languages.Corsican/ to your Visual Studio project.<br />
            Alternatively download the "Corsican.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CorsicanBest">
            <summary>
            Corsican  OCR language. Performs OCR, reading documents of the Corsican (corsu, lingua corsa) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Corsican uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Corsican' from https://www.nuget.org/packages/IronOcr.Languages.Corsican/ to your Visual Studio project.<br />
            Alternatively download the "Corsican.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CorsicanFast">
            <summary>
            Corsican  OCR language. Performs OCR, reading documents of the Corsican (corsu, lingua corsa) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Corsican uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Corsican' from https://www.nuget.org/packages/IronOcr.Languages.Corsican/ to your Visual Studio project.<br />
            Alternatively download the "Corsican.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Welsh">
            <summary>
            Welsh  OCR language. Performs OCR, reading documents of the Welsh (Cymraeg) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Welsh uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Welsh' from https://www.nuget.org/packages/IronOcr.Languages.Welsh/ to your Visual Studio project.<br />
            Alternatively download the "Welsh.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.WelshBest">
            <summary>
            Welsh  OCR language. Performs OCR, reading documents of the Welsh (Cymraeg) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Welsh uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Welsh' from https://www.nuget.org/packages/IronOcr.Languages.Welsh/ to your Visual Studio project.<br />
            Alternatively download the "Welsh.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.WelshFast">
            <summary>
            Welsh  OCR language. Performs OCR, reading documents of the Welsh (Cymraeg) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Welsh uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Welsh' from https://www.nuget.org/packages/IronOcr.Languages.Welsh/ to your Visual Studio project.<br />
            Alternatively download the "Welsh.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CyrillicAlphabet">
            <summary>
            Cyrillic Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Cyrillic Alphabet (Cyrillic scripts) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Cyrillic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cyrillic' from https://www.nuget.org/packages/IronOcr.Languages.Cyrillic/ to your Visual Studio project.<br />
            Alternatively download the "Cyrillic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CyrillicAlphabetBest">
            <summary>
            Cyrillic Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Cyrillic Alphabet (Cyrillic scripts) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Cyrillic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cyrillic' from https://www.nuget.org/packages/IronOcr.Languages.Cyrillic/ to your Visual Studio project.<br />
            Alternatively download the "Cyrillic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CyrillicAlphabetFast">
            <summary>
            Cyrillic Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Cyrillic Alphabet (Cyrillic scripts) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Cyrillic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cyrillic' from https://www.nuget.org/packages/IronOcr.Languages.Cyrillic/ to your Visual Studio project.<br />
            Alternatively download the "Cyrillic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Danish">
            <summary>
            Danish  OCR language. Performs OCR, reading documents of the Danish (dansk) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Danish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Danish' from https://www.nuget.org/packages/IronOcr.Languages.Danish/ to your Visual Studio project.<br />
            Alternatively download the "Danish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DanishBest">
            <summary>
            Danish  OCR language. Performs OCR, reading documents of the Danish (dansk) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Danish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Danish' from https://www.nuget.org/packages/IronOcr.Languages.Danish/ to your Visual Studio project.<br />
            Alternatively download the "Danish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DanishFast">
            <summary>
            Danish  OCR language. Performs OCR, reading documents of the Danish (dansk) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Danish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Danish' from https://www.nuget.org/packages/IronOcr.Languages.Danish/ to your Visual Studio project.<br />
            Alternatively download the "Danish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DanishFraktur">
            <summary>
            Danish Fraktur  OCR language. Performs OCR, reading documents of the Danish Fraktur (dansk) language with an understanding of spelling and linguistic context. 
            <para>This Danish Fraktur OCR language pack  uses only an OEM (shape recognition evolved from Tesseract 3) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Danish' from https://www.nuget.org/packages/IronOcr.Languages.Danish/ to your Visual Studio project.<br />
            Alternatively download the "Danish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.German">
            <summary>
            German  OCR language. Performs OCR, reading documents of the German (Deutsch) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of German uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.German' from https://www.nuget.org/packages/IronOcr.Languages.German/ to your Visual Studio project.<br />
            Alternatively download the "German.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GermanBest">
            <summary>
            German  OCR language. Performs OCR, reading documents of the German (Deutsch) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of German uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.German' from https://www.nuget.org/packages/IronOcr.Languages.German/ to your Visual Studio project.<br />
            Alternatively download the "German.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GermanFast">
            <summary>
            German  OCR language. Performs OCR, reading documents of the German (Deutsch) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of German uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.German' from https://www.nuget.org/packages/IronOcr.Languages.German/ to your Visual Studio project.<br />
            Alternatively download the "German.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GermanFraktur">
            <summary>
            German Fraktur  OCR language. Performs OCR, reading documents of the German Fraktur (Deutsch) language with an understanding of spelling and linguistic context. 
            <para>This German Fraktur OCR language pack  uses only an OEM (shape recognition evolved from Tesseract 3) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.German' from https://www.nuget.org/packages/IronOcr.Languages.German/ to your Visual Studio project.<br />
            Alternatively download the "German.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DevanagariAlphabet">
            <summary>
            Devanagari Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Devanagari Alphabet (Nagair,देवनागरी) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Devanagari Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Devanagari' from https://www.nuget.org/packages/IronOcr.Languages.Devanagari/ to your Visual Studio project.<br />
            Alternatively download the "Devanagari.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DevanagariAlphabetBest">
            <summary>
            Devanagari Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Devanagari Alphabet (Nagair,देवनागरी) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Devanagari Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Devanagari' from https://www.nuget.org/packages/IronOcr.Languages.Devanagari/ to your Visual Studio project.<br />
            Alternatively download the "Devanagari.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DevanagariAlphabetFast">
            <summary>
            Devanagari Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Devanagari Alphabet (Nagair,देवनागरी) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Devanagari Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Devanagari' from https://www.nuget.org/packages/IronOcr.Languages.Devanagari/ to your Visual Studio project.<br />
            Alternatively download the "Devanagari.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Divehi">
            <summary>
            Divehi  OCR language. Performs OCR, reading documents of the Divehi (ދިވެހި) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Divehi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Divehi' from https://www.nuget.org/packages/IronOcr.Languages.Divehi/ to your Visual Studio project.<br />
            Alternatively download the "Divehi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DivehiBest">
            <summary>
            Divehi  OCR language. Performs OCR, reading documents of the Divehi (ދިވެހި) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Divehi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Divehi' from https://www.nuget.org/packages/IronOcr.Languages.Divehi/ to your Visual Studio project.<br />
            Alternatively download the "Divehi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DivehiFast">
            <summary>
            Divehi  OCR language. Performs OCR, reading documents of the Divehi (ދިވެހި) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Divehi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Divehi' from https://www.nuget.org/packages/IronOcr.Languages.Divehi/ to your Visual Studio project.<br />
            Alternatively download the "Divehi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Dzongkha">
            <summary>
            Dzongkha  OCR language. Performs OCR, reading documents of the Dzongkha (རྫོང་ཁ) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Dzongkha uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Dzongkha' from https://www.nuget.org/packages/IronOcr.Languages.Dzongkha/ to your Visual Studio project.<br />
            Alternatively download the "Dzongkha.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DzongkhaBest">
            <summary>
            Dzongkha  OCR language. Performs OCR, reading documents of the Dzongkha (རྫོང་ཁ) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Dzongkha uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Dzongkha' from https://www.nuget.org/packages/IronOcr.Languages.Dzongkha/ to your Visual Studio project.<br />
            Alternatively download the "Dzongkha.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DzongkhaFast">
            <summary>
            Dzongkha  OCR language. Performs OCR, reading documents of the Dzongkha (རྫོང་ཁ) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Dzongkha uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Dzongkha' from https://www.nuget.org/packages/IronOcr.Languages.Dzongkha/ to your Visual Studio project.<br />
            Alternatively download the "Dzongkha.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Greek">
            <summary>
            Greek  OCR language. Performs OCR, reading documents of the Greek (ελληνικά) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Greek uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Greek' from https://www.nuget.org/packages/IronOcr.Languages.Greek/ to your Visual Studio project.<br />
            Alternatively download the "Greek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GreekBest">
            <summary>
            Greek  OCR language. Performs OCR, reading documents of the Greek (ελληνικά) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Greek uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Greek' from https://www.nuget.org/packages/IronOcr.Languages.Greek/ to your Visual Studio project.<br />
            Alternatively download the "Greek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GreekFast">
            <summary>
            Greek  OCR language. Performs OCR, reading documents of the Greek (ελληνικά) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Greek uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Greek' from https://www.nuget.org/packages/IronOcr.Languages.Greek/ to your Visual Studio project.<br />
            Alternatively download the "Greek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.English">
            <summary>
            English  OCR language. Performs OCR, reading documents of the English language with an understanding of spelling and linguistic context. 
            <para>Installed Automatically with IronOCR as the default Language</para><para>This Default variant of English uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.English' from https://www.nuget.org/packages/IronOcr.Languages.English/ to your Visual Studio project.<br />
            Alternatively download the "English.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.EnglishBest">
            <summary>
            English  OCR language. Performs OCR, reading documents of the English language with an understanding of spelling and linguistic context. 
            <para>Installed Automatically with IronOCR as the default Language</para><para>This 'Best' (detailed) variant of English uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.English' from https://www.nuget.org/packages/IronOcr.Languages.English/ to your Visual Studio project.<br />
            Alternatively download the "English.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.EnglishFast">
            <summary>
            English  OCR language. Performs OCR, reading documents of the English language with an understanding of spelling and linguistic context. 
            <para>Installed Automatically with IronOCR as the default Language</para><para>This 'Fast' variant of English uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.English' from https://www.nuget.org/packages/IronOcr.Languages.English/ to your Visual Studio project.<br />
            Alternatively download the "English.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MiddleEnglish">
            <summary>
            Middle English  OCR language. Performs OCR, reading documents of the Middle English [English (1100-1500 AD)] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Middle English uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.MiddleEnglish' from https://www.nuget.org/packages/IronOcr.Languages.MiddleEnglish/ to your Visual Studio project.<br />
            Alternatively download the "MiddleEnglish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MiddleEnglishBest">
            <summary>
            Middle English  OCR language. Performs OCR, reading documents of the Middle English [English (1100-1500 AD)] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Middle English uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.MiddleEnglish' from https://www.nuget.org/packages/IronOcr.Languages.MiddleEnglish/ to your Visual Studio project.<br />
            Alternatively download the "MiddleEnglish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MiddleEnglishFast">
            <summary>
            Middle English  OCR language. Performs OCR, reading documents of the Middle English [English (1100-1500 AD)] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Middle English uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.MiddleEnglish' from https://www.nuget.org/packages/IronOcr.Languages.MiddleEnglish/ to your Visual Studio project.<br />
            Alternatively download the "MiddleEnglish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Esperanto">
            <summary>
            Esperanto  OCR language. Performs OCR, reading documents of the Esperanto language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Esperanto uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Esperanto' from https://www.nuget.org/packages/IronOcr.Languages.Esperanto/ to your Visual Studio project.<br />
            Alternatively download the "Esperanto.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.EsperantoBest">
            <summary>
            Esperanto  OCR language. Performs OCR, reading documents of the Esperanto language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Esperanto uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Esperanto' from https://www.nuget.org/packages/IronOcr.Languages.Esperanto/ to your Visual Studio project.<br />
            Alternatively download the "Esperanto.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.EsperantoFast">
            <summary>
            Esperanto  OCR language. Performs OCR, reading documents of the Esperanto language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Esperanto uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Esperanto' from https://www.nuget.org/packages/IronOcr.Languages.Esperanto/ to your Visual Studio project.<br />
            Alternatively download the "Esperanto.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Estonian">
            <summary>
            Estonian  OCR language. Performs OCR, reading documents of the Estonian (eesti, eesti keel) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Estonian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Estonian' from https://www.nuget.org/packages/IronOcr.Languages.Estonian/ to your Visual Studio project.<br />
            Alternatively download the "Estonian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.EstonianBest">
            <summary>
            Estonian  OCR language. Performs OCR, reading documents of the Estonian (eesti, eesti keel) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Estonian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Estonian' from https://www.nuget.org/packages/IronOcr.Languages.Estonian/ to your Visual Studio project.<br />
            Alternatively download the "Estonian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.EstonianFast">
            <summary>
            Estonian  OCR language. Performs OCR, reading documents of the Estonian (eesti, eesti keel) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Estonian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Estonian' from https://www.nuget.org/packages/IronOcr.Languages.Estonian/ to your Visual Studio project.<br />
            Alternatively download the "Estonian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.EthiopicAlphabet">
            <summary>
            Ethiopic Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Ethiopic Alphabet (Ge'ez,ግዕዝ, Gəʿəz) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Ethiopic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Ethiopic' from https://www.nuget.org/packages/IronOcr.Languages.Ethiopic/ to your Visual Studio project.<br />
            Alternatively download the "Ethiopic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.EthiopicAlphabetBest">
            <summary>
            Ethiopic Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Ethiopic Alphabet (Ge'ez,ግዕዝ, Gəʿəz) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Ethiopic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Ethiopic' from https://www.nuget.org/packages/IronOcr.Languages.Ethiopic/ to your Visual Studio project.<br />
            Alternatively download the "Ethiopic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.EthiopicAlphabetFast">
            <summary>
            Ethiopic Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Ethiopic Alphabet (Ge'ez,ግዕዝ, Gəʿəz) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Ethiopic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Ethiopic' from https://www.nuget.org/packages/IronOcr.Languages.Ethiopic/ to your Visual Studio project.<br />
            Alternatively download the "Ethiopic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Basque">
            <summary>
            Basque  OCR language. Performs OCR, reading documents of the Basque (euskara, euskera) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Basque uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Basque' from https://www.nuget.org/packages/IronOcr.Languages.Basque/ to your Visual Studio project.<br />
            Alternatively download the "Basque.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BasqueBest">
            <summary>
            Basque  OCR language. Performs OCR, reading documents of the Basque (euskara, euskera) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Basque uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Basque' from https://www.nuget.org/packages/IronOcr.Languages.Basque/ to your Visual Studio project.<br />
            Alternatively download the "Basque.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BasqueFast">
            <summary>
            Basque  OCR language. Performs OCR, reading documents of the Basque (euskara, euskera) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Basque uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Basque' from https://www.nuget.org/packages/IronOcr.Languages.Basque/ to your Visual Studio project.<br />
            Alternatively download the "Basque.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Faroese">
            <summary>
            Faroese  OCR language. Performs OCR, reading documents of the Faroese (føroyskt) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Faroese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Faroese' from https://www.nuget.org/packages/IronOcr.Languages.Faroese/ to your Visual Studio project.<br />
            Alternatively download the "Faroese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FaroeseBest">
            <summary>
            Faroese  OCR language. Performs OCR, reading documents of the Faroese (føroyskt) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Faroese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Faroese' from https://www.nuget.org/packages/IronOcr.Languages.Faroese/ to your Visual Studio project.<br />
            Alternatively download the "Faroese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FaroeseFast">
            <summary>
            Faroese  OCR language. Performs OCR, reading documents of the Faroese (føroyskt) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Faroese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Faroese' from https://www.nuget.org/packages/IronOcr.Languages.Faroese/ to your Visual Studio project.<br />
            Alternatively download the "Faroese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Persian">
            <summary>
            Persian  OCR language. Performs OCR, reading documents of the Persian (فارسی) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Persian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Persian' from https://www.nuget.org/packages/IronOcr.Languages.Persian/ to your Visual Studio project.<br />
            Alternatively download the "Persian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PersianBest">
            <summary>
            Persian  OCR language. Performs OCR, reading documents of the Persian (فارسی) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Persian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Persian' from https://www.nuget.org/packages/IronOcr.Languages.Persian/ to your Visual Studio project.<br />
            Alternatively download the "Persian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PersianFast">
            <summary>
            Persian  OCR language. Performs OCR, reading documents of the Persian (فارسی) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Persian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Persian' from https://www.nuget.org/packages/IronOcr.Languages.Persian/ to your Visual Studio project.<br />
            Alternatively download the "Persian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Filipino">
            <summary>
            Filipino  OCR language. Performs OCR, reading documents of the Filipino (National Language of the Philippines, Standardized Tagalog) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Filipino uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Filipino' from https://www.nuget.org/packages/IronOcr.Languages.Filipino/ to your Visual Studio project.<br />
            Alternatively download the "Filipino.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FilipinoBest">
            <summary>
            Filipino  OCR language. Performs OCR, reading documents of the Filipino (National Language of the Philippines, Standardized Tagalog) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Filipino uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Filipino' from https://www.nuget.org/packages/IronOcr.Languages.Filipino/ to your Visual Studio project.<br />
            Alternatively download the "Filipino.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FilipinoFast">
            <summary>
            Filipino  OCR language. Performs OCR, reading documents of the Filipino (National Language of the Philippines, Standardized Tagalog) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Filipino uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Filipino' from https://www.nuget.org/packages/IronOcr.Languages.Filipino/ to your Visual Studio project.<br />
            Alternatively download the "Filipino.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Finnish">
            <summary>
            Finnish  OCR language. Performs OCR, reading documents of the Finnish (suomi, suomen kieli) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Finnish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Finnish' from https://www.nuget.org/packages/IronOcr.Languages.Finnish/ to your Visual Studio project.<br />
            Alternatively download the "Finnish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FinnishBest">
            <summary>
            Finnish  OCR language. Performs OCR, reading documents of the Finnish (suomi, suomen kieli) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Finnish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Finnish' from https://www.nuget.org/packages/IronOcr.Languages.Finnish/ to your Visual Studio project.<br />
            Alternatively download the "Finnish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FinnishFast">
            <summary>
            Finnish  OCR language. Performs OCR, reading documents of the Finnish (suomi, suomen kieli) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Finnish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Finnish' from https://www.nuget.org/packages/IronOcr.Languages.Finnish/ to your Visual Studio project.<br />
            Alternatively download the "Finnish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Financial">
            <summary>
            Financial  OCR language. Performs OCR, reading documents of the Financial (Financial, Numerical and Technical Documents) language with an understanding of spelling and linguistic context. 
            <para>This Financial OCR language pack  uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Financial' from https://www.nuget.org/packages/IronOcr.Languages.Financial/ to your Visual Studio project.<br />
            Alternatively download the "Financial.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.French">
            <summary>
            French  OCR language. Performs OCR, reading documents of the French (français, langue française) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of French uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.French' from https://www.nuget.org/packages/IronOcr.Languages.French/ to your Visual Studio project.<br />
            Alternatively download the "French.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FrenchBest">
            <summary>
            French  OCR language. Performs OCR, reading documents of the French (français, langue française) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of French uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.French' from https://www.nuget.org/packages/IronOcr.Languages.French/ to your Visual Studio project.<br />
            Alternatively download the "French.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FrenchFast">
            <summary>
            French  OCR language. Performs OCR, reading documents of the French (français, langue française) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of French uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.French' from https://www.nuget.org/packages/IronOcr.Languages.French/ to your Visual Studio project.<br />
            Alternatively download the "French.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FrakturAlphabet">
            <summary>
            Fraktur Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Fraktur Alphabet (Generic Fraktur, Calligraphic hand of the Latin alphabet) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Fraktur Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Fraktur' from https://www.nuget.org/packages/IronOcr.Languages.Fraktur/ to your Visual Studio project.<br />
            Alternatively download the "Fraktur.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FrakturAlphabetBest">
            <summary>
            Fraktur Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Fraktur Alphabet (Generic Fraktur, Calligraphic hand of the Latin alphabet) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Fraktur Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Fraktur' from https://www.nuget.org/packages/IronOcr.Languages.Fraktur/ to your Visual Studio project.<br />
            Alternatively download the "Fraktur.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FrakturAlphabetFast">
            <summary>
            Fraktur Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Fraktur Alphabet (Generic Fraktur, Calligraphic hand of the Latin alphabet) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Fraktur Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Fraktur' from https://www.nuget.org/packages/IronOcr.Languages.Fraktur/ to your Visual Studio project.<br />
            Alternatively download the "Fraktur.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Frankish">
            <summary>
            Frankish  OCR language. Performs OCR, reading documents of the Frankish (Frenkisk, Old Franconian) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Frankish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Frankish' from https://www.nuget.org/packages/IronOcr.Languages.Frankish/ to your Visual Studio project.<br />
            Alternatively download the "Frankish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FrankishBest">
            <summary>
            Frankish  OCR language. Performs OCR, reading documents of the Frankish (Frenkisk, Old Franconian) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Frankish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Frankish' from https://www.nuget.org/packages/IronOcr.Languages.Frankish/ to your Visual Studio project.<br />
            Alternatively download the "Frankish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FrankishFast">
            <summary>
            Frankish  OCR language. Performs OCR, reading documents of the Frankish (Frenkisk, Old Franconian) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Frankish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Frankish' from https://www.nuget.org/packages/IronOcr.Languages.Frankish/ to your Visual Studio project.<br />
            Alternatively download the "Frankish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MiddleFrench">
            <summary>
            Middle French  OCR language. Performs OCR, reading documents of the Middle French [Moyen Français,Middle French (ca. 1400-1600 AD)] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Middle French uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.MiddleFrench' from https://www.nuget.org/packages/IronOcr.Languages.MiddleFrench/ to your Visual Studio project.<br />
            Alternatively download the "MiddleFrench.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MiddleFrenchBest">
            <summary>
            Middle French  OCR language. Performs OCR, reading documents of the Middle French [Moyen Français,Middle French (ca. 1400-1600 AD)] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Middle French uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.MiddleFrench' from https://www.nuget.org/packages/IronOcr.Languages.MiddleFrench/ to your Visual Studio project.<br />
            Alternatively download the "MiddleFrench.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MiddleFrenchFast">
            <summary>
            Middle French  OCR language. Performs OCR, reading documents of the Middle French [Moyen Français,Middle French (ca. 1400-1600 AD)] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Middle French uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.MiddleFrench' from https://www.nuget.org/packages/IronOcr.Languages.MiddleFrench/ to your Visual Studio project.<br />
            Alternatively download the "MiddleFrench.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.WesternFrisian">
            <summary>
            Western Frisian  OCR language. Performs OCR, reading documents of the Western Frisian (Frysk) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Western Frisian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.WesternFrisian' from https://www.nuget.org/packages/IronOcr.Languages.WesternFrisian/ to your Visual Studio project.<br />
            Alternatively download the "WesternFrisian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.WesternFrisianBest">
            <summary>
            Western Frisian  OCR language. Performs OCR, reading documents of the Western Frisian (Frysk) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Western Frisian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.WesternFrisian' from https://www.nuget.org/packages/IronOcr.Languages.WesternFrisian/ to your Visual Studio project.<br />
            Alternatively download the "WesternFrisian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.WesternFrisianFast">
            <summary>
            Western Frisian  OCR language. Performs OCR, reading documents of the Western Frisian (Frysk) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Western Frisian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.WesternFrisian' from https://www.nuget.org/packages/IronOcr.Languages.WesternFrisian/ to your Visual Studio project.<br />
            Alternatively download the "WesternFrisian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GeorgianAlphabet">
            <summary>
            Georgian Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Georgian Alphabet (ქართული) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Georgian Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project.<br />
            Alternatively download the "Georgian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GeorgianAlphabetBest">
            <summary>
            Georgian Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Georgian Alphabet (ქართული) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Georgian Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project.<br />
            Alternatively download the "Georgian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GeorgianAlphabetFast">
            <summary>
            Georgian Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Georgian Alphabet (ქართული) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Georgian Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project.<br />
            Alternatively download the "Georgian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ScottishGaelic">
            <summary>
            Scottish Gaelic  OCR language. Performs OCR, reading documents of the Scottish Gaelic (Gàidhlig) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Scottish Gaelic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.ScottishGaelic' from https://www.nuget.org/packages/IronOcr.Languages.ScottishGaelic/ to your Visual Studio project.<br />
            Alternatively download the "ScottishGaelic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ScottishGaelicBest">
            <summary>
            Scottish Gaelic  OCR language. Performs OCR, reading documents of the Scottish Gaelic (Gàidhlig) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Scottish Gaelic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.ScottishGaelic' from https://www.nuget.org/packages/IronOcr.Languages.ScottishGaelic/ to your Visual Studio project.<br />
            Alternatively download the "ScottishGaelic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ScottishGaelicFast">
            <summary>
            Scottish Gaelic  OCR language. Performs OCR, reading documents of the Scottish Gaelic (Gàidhlig) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Scottish Gaelic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.ScottishGaelic' from https://www.nuget.org/packages/IronOcr.Languages.ScottishGaelic/ to your Visual Studio project.<br />
            Alternatively download the "ScottishGaelic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Irish">
            <summary>
            Irish  OCR language. Performs OCR, reading documents of the Irish (Gaeilge) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Irish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Irish' from https://www.nuget.org/packages/IronOcr.Languages.Irish/ to your Visual Studio project.<br />
            Alternatively download the "Irish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.IrishBest">
            <summary>
            Irish  OCR language. Performs OCR, reading documents of the Irish (Gaeilge) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Irish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Irish' from https://www.nuget.org/packages/IronOcr.Languages.Irish/ to your Visual Studio project.<br />
            Alternatively download the "Irish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.IrishFast">
            <summary>
            Irish  OCR language. Performs OCR, reading documents of the Irish (Gaeilge) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Irish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Irish' from https://www.nuget.org/packages/IronOcr.Languages.Irish/ to your Visual Studio project.<br />
            Alternatively download the "Irish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Galician">
            <summary>
            Galician  OCR language. Performs OCR, reading documents of the Galician (galego) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Galician uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Galician' from https://www.nuget.org/packages/IronOcr.Languages.Galician/ to your Visual Studio project.<br />
            Alternatively download the "Galician.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GalicianBest">
            <summary>
            Galician  OCR language. Performs OCR, reading documents of the Galician (galego) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Galician uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Galician' from https://www.nuget.org/packages/IronOcr.Languages.Galician/ to your Visual Studio project.<br />
            Alternatively download the "Galician.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GalicianFast">
            <summary>
            Galician  OCR language. Performs OCR, reading documents of the Galician (galego) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Galician uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Galician' from https://www.nuget.org/packages/IronOcr.Languages.Galician/ to your Visual Studio project.<br />
            Alternatively download the "Galician.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AncientGreek">
            <summary>
            Ancient Greek  OCR language. Performs OCR, reading documents of the Ancient Greek (Ἑλληνική) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Ancient Greek uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.AncientGreek' from https://www.nuget.org/packages/IronOcr.Languages.AncientGreek/ to your Visual Studio project.<br />
            Alternatively download the "AncientGreek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AncientGreekBest">
            <summary>
            Ancient Greek  OCR language. Performs OCR, reading documents of the Ancient Greek (Ἑλληνική) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Ancient Greek uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.AncientGreek' from https://www.nuget.org/packages/IronOcr.Languages.AncientGreek/ to your Visual Studio project.<br />
            Alternatively download the "AncientGreek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AncientGreekFast">
            <summary>
            Ancient Greek  OCR language. Performs OCR, reading documents of the Ancient Greek (Ἑλληνική) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Ancient Greek uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.AncientGreek' from https://www.nuget.org/packages/IronOcr.Languages.AncientGreek/ to your Visual Studio project.<br />
            Alternatively download the "AncientGreek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GreekAlphabet">
            <summary>
            Greek Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Greek Alphabet (ελληνικά) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Greek Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Greek' from https://www.nuget.org/packages/IronOcr.Languages.Greek/ to your Visual Studio project.<br />
            Alternatively download the "Greek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GreekAlphabetBest">
            <summary>
            Greek Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Greek Alphabet (ελληνικά) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Greek Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Greek' from https://www.nuget.org/packages/IronOcr.Languages.Greek/ to your Visual Studio project.<br />
            Alternatively download the "Greek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GreekAlphabetFast">
            <summary>
            Greek Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Greek Alphabet (ελληνικά) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Greek Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Greek' from https://www.nuget.org/packages/IronOcr.Languages.Greek/ to your Visual Studio project.<br />
            Alternatively download the "Greek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Gujarati">
            <summary>
            Gujarati  OCR language. Performs OCR, reading documents of the Gujarati (ગુજરાતી) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Gujarati uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Gujarati' from https://www.nuget.org/packages/IronOcr.Languages.Gujarati/ to your Visual Studio project.<br />
            Alternatively download the "Gujarati.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GujaratiBest">
            <summary>
            Gujarati  OCR language. Performs OCR, reading documents of the Gujarati (ગુજરાતી) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Gujarati uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Gujarati' from https://www.nuget.org/packages/IronOcr.Languages.Gujarati/ to your Visual Studio project.<br />
            Alternatively download the "Gujarati.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GujaratiFast">
            <summary>
            Gujarati  OCR language. Performs OCR, reading documents of the Gujarati (ગુજરાતી) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Gujarati uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Gujarati' from https://www.nuget.org/packages/IronOcr.Languages.Gujarati/ to your Visual Studio project.<br />
            Alternatively download the "Gujarati.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GujaratiAlphabet">
            <summary>
            Gujarati Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Gujarati Alphabet (ગુજરાતી) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Gujarati Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Gujarati' from https://www.nuget.org/packages/IronOcr.Languages.Gujarati/ to your Visual Studio project.<br />
            Alternatively download the "Gujarati.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GujaratiAlphabetBest">
            <summary>
            Gujarati Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Gujarati Alphabet (ગુજરાતી) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Gujarati Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Gujarati' from https://www.nuget.org/packages/IronOcr.Languages.Gujarati/ to your Visual Studio project.<br />
            Alternatively download the "Gujarati.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GujaratiAlphabetFast">
            <summary>
            Gujarati Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Gujarati Alphabet (ગુજરાતી) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Gujarati Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Gujarati' from https://www.nuget.org/packages/IronOcr.Languages.Gujarati/ to your Visual Studio project.<br />
            Alternatively download the "Gujarati.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GurmukhiAlphabet">
            <summary>
            Gurmukhi Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Gurmukhi Alphabet (Gurmukhī, ਗੁਰਮੁਖੀ, Shahmukhi, گُرمُکھی‎, Sihk Script) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Gurmukhi Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Gurmukhi' from https://www.nuget.org/packages/IronOcr.Languages.Gurmukhi/ to your Visual Studio project.<br />
            Alternatively download the "Gurmukhi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GurmukhiAlphabetBest">
            <summary>
            Gurmukhi Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Gurmukhi Alphabet (Gurmukhī, ਗੁਰਮੁਖੀ, Shahmukhi, گُرمُکھی‎, Sihk Script) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Gurmukhi Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Gurmukhi' from https://www.nuget.org/packages/IronOcr.Languages.Gurmukhi/ to your Visual Studio project.<br />
            Alternatively download the "Gurmukhi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GurmukhiAlphabetFast">
            <summary>
            Gurmukhi Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Gurmukhi Alphabet (Gurmukhī, ਗੁਰਮੁਖੀ, Shahmukhi, گُرمُکھی‎, Sihk Script) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Gurmukhi Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Gurmukhi' from https://www.nuget.org/packages/IronOcr.Languages.Gurmukhi/ to your Visual Studio project.<br />
            Alternatively download the "Gurmukhi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HangulAlphabet">
            <summary>
            Hangul Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Hangul Alphabet (Korean Alphabet,한글,Hangeul,조선글,hosŏn'gŭl) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Hangul Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hangul' from https://www.nuget.org/packages/IronOcr.Languages.Hangul/ to your Visual Studio project.<br />
            Alternatively download the "Hangul.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HangulAlphabetBest">
            <summary>
            Hangul Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Hangul Alphabet (Korean Alphabet,한글,Hangeul,조선글,hosŏn'gŭl) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Hangul Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hangul' from https://www.nuget.org/packages/IronOcr.Languages.Hangul/ to your Visual Studio project.<br />
            Alternatively download the "Hangul.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HangulAlphabetFast">
            <summary>
            Hangul Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Hangul Alphabet (Korean Alphabet,한글,Hangeul,조선글,hosŏn'gŭl) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Hangul Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hangul' from https://www.nuget.org/packages/IronOcr.Languages.Hangul/ to your Visual Studio project.<br />
            Alternatively download the "Hangul.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HangulVerticalAlphabet">
            <summary>
            Hangul Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Hangul Vertical Alphabet (Korean Alphabet,한글,Hangeul,조선글,hosŏn'gŭl) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Hangul Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hangul' from https://www.nuget.org/packages/IronOcr.Languages.Hangul/ to your Visual Studio project.<br />
            Alternatively download the "Hangul.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HangulVerticalAlphabetBest">
            <summary>
            Hangul Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Hangul Vertical Alphabet (Korean Alphabet,한글,Hangeul,조선글,hosŏn'gŭl) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Hangul Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hangul' from https://www.nuget.org/packages/IronOcr.Languages.Hangul/ to your Visual Studio project.<br />
            Alternatively download the "Hangul.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HangulVerticalAlphabetFast">
            <summary>
            Hangul Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Hangul Vertical Alphabet (Korean Alphabet,한글,Hangeul,조선글,hosŏn'gŭl) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Hangul Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hangul' from https://www.nuget.org/packages/IronOcr.Languages.Hangul/ to your Visual Studio project.<br />
            Alternatively download the "Hangul.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanSimplifiedAlphabet">
            <summary>
            Han Simplified Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Simplified Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Han Simplified Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanSimplifiedAlphabetBest">
            <summary>
            Han Simplified Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Simplified Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Han Simplified Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanSimplifiedAlphabetFast">
            <summary>
            Han Simplified Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Simplified Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Han Simplified Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanSimplifiedVerticalAlphabet">
            <summary>
            Han Simplified Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Simplified Vertical Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Han Simplified Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanSimplifiedVerticalAlphabetBest">
            <summary>
            Han Simplified Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Simplified Vertical Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Han Simplified Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanSimplifiedVerticalAlphabetFast">
            <summary>
            Han Simplified Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Simplified Vertical Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Han Simplified Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanTraditionalAlphabet">
            <summary>
            Han Traditional Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Traditional Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Han Traditional Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanTraditionalAlphabetBest">
            <summary>
            Han Traditional Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Traditional Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Han Traditional Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanTraditionalAlphabetFast">
            <summary>
            Han Traditional Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Traditional Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Han Traditional Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanTraditionalVerticalAlphabet">
            <summary>
            Han Traditional Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Traditional Vertical Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Han Traditional Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanTraditionalVerticalAlphabetBest">
            <summary>
            Han Traditional Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Traditional Vertical Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Han Traditional Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanTraditionalVerticalAlphabetFast">
            <summary>
            Han Traditional Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Traditional Vertical Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Han Traditional Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Haitian">
            <summary>
            Haitian  OCR language. Performs OCR, reading documents of the Haitian (Kreyòl ayisyen) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Haitian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Haitian' from https://www.nuget.org/packages/IronOcr.Languages.Haitian/ to your Visual Studio project.<br />
            Alternatively download the "Haitian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HaitianBest">
            <summary>
            Haitian  OCR language. Performs OCR, reading documents of the Haitian (Kreyòl ayisyen) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Haitian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Haitian' from https://www.nuget.org/packages/IronOcr.Languages.Haitian/ to your Visual Studio project.<br />
            Alternatively download the "Haitian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HaitianFast">
            <summary>
            Haitian  OCR language. Performs OCR, reading documents of the Haitian (Kreyòl ayisyen) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Haitian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Haitian' from https://www.nuget.org/packages/IronOcr.Languages.Haitian/ to your Visual Studio project.<br />
            Alternatively download the "Haitian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Hebrew">
            <summary>
            Hebrew  OCR language. Performs OCR, reading documents of the Hebrew (עברית) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Hebrew uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hebrew' from https://www.nuget.org/packages/IronOcr.Languages.Hebrew/ to your Visual Studio project.<br />
            Alternatively download the "Hebrew.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HebrewBest">
            <summary>
            Hebrew  OCR language. Performs OCR, reading documents of the Hebrew (עברית) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Hebrew uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hebrew' from https://www.nuget.org/packages/IronOcr.Languages.Hebrew/ to your Visual Studio project.<br />
            Alternatively download the "Hebrew.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HebrewFast">
            <summary>
            Hebrew  OCR language. Performs OCR, reading documents of the Hebrew (עברית) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Hebrew uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hebrew' from https://www.nuget.org/packages/IronOcr.Languages.Hebrew/ to your Visual Studio project.<br />
            Alternatively download the "Hebrew.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HebrewAlphabet">
            <summary>
            Hebrew Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Hebrew Alphabet (עברית) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Hebrew Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hebrew' from https://www.nuget.org/packages/IronOcr.Languages.Hebrew/ to your Visual Studio project.<br />
            Alternatively download the "Hebrew.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HebrewAlphabetBest">
            <summary>
            Hebrew Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Hebrew Alphabet (עברית) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Hebrew Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hebrew' from https://www.nuget.org/packages/IronOcr.Languages.Hebrew/ to your Visual Studio project.<br />
            Alternatively download the "Hebrew.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HebrewAlphabetFast">
            <summary>
            Hebrew Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Hebrew Alphabet (עברית) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Hebrew Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hebrew' from https://www.nuget.org/packages/IronOcr.Languages.Hebrew/ to your Visual Studio project.<br />
            Alternatively download the "Hebrew.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Hindi">
            <summary>
            Hindi  OCR language. Performs OCR, reading documents of the Hindi (हिन्दी, हिंदी) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Hindi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hindi' from https://www.nuget.org/packages/IronOcr.Languages.Hindi/ to your Visual Studio project.<br />
            Alternatively download the "Hindi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HindiBest">
            <summary>
            Hindi  OCR language. Performs OCR, reading documents of the Hindi (हिन्दी, हिंदी) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Hindi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hindi' from https://www.nuget.org/packages/IronOcr.Languages.Hindi/ to your Visual Studio project.<br />
            Alternatively download the "Hindi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HindiFast">
            <summary>
            Hindi  OCR language. Performs OCR, reading documents of the Hindi (हिन्दी, हिंदी) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Hindi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hindi' from https://www.nuget.org/packages/IronOcr.Languages.Hindi/ to your Visual Studio project.<br />
            Alternatively download the "Hindi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Croatian">
            <summary>
            Croatian  OCR language. Performs OCR, reading documents of the Croatian (hrvatski jezik) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Croatian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Croatian' from https://www.nuget.org/packages/IronOcr.Languages.Croatian/ to your Visual Studio project.<br />
            Alternatively download the "Croatian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CroatianBest">
            <summary>
            Croatian  OCR language. Performs OCR, reading documents of the Croatian (hrvatski jezik) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Croatian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Croatian' from https://www.nuget.org/packages/IronOcr.Languages.Croatian/ to your Visual Studio project.<br />
            Alternatively download the "Croatian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CroatianFast">
            <summary>
            Croatian  OCR language. Performs OCR, reading documents of the Croatian (hrvatski jezik) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Croatian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Croatian' from https://www.nuget.org/packages/IronOcr.Languages.Croatian/ to your Visual Studio project.<br />
            Alternatively download the "Croatian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Hungarian">
            <summary>
            Hungarian  OCR language. Performs OCR, reading documents of the Hungarian (magyar) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Hungarian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hungarian' from https://www.nuget.org/packages/IronOcr.Languages.Hungarian/ to your Visual Studio project.<br />
            Alternatively download the "Hungarian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HungarianBest">
            <summary>
            Hungarian  OCR language. Performs OCR, reading documents of the Hungarian (magyar) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Hungarian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hungarian' from https://www.nuget.org/packages/IronOcr.Languages.Hungarian/ to your Visual Studio project.<br />
            Alternatively download the "Hungarian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HungarianFast">
            <summary>
            Hungarian  OCR language. Performs OCR, reading documents of the Hungarian (magyar) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Hungarian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hungarian' from https://www.nuget.org/packages/IronOcr.Languages.Hungarian/ to your Visual Studio project.<br />
            Alternatively download the "Hungarian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Armenian">
            <summary>
            Armenian  OCR language. Performs OCR, reading documents of the Armenian (Հայերեն) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Armenian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Armenian' from https://www.nuget.org/packages/IronOcr.Languages.Armenian/ to your Visual Studio project.<br />
            Alternatively download the "Armenian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArmenianBest">
            <summary>
            Armenian  OCR language. Performs OCR, reading documents of the Armenian (Հայերեն) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Armenian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Armenian' from https://www.nuget.org/packages/IronOcr.Languages.Armenian/ to your Visual Studio project.<br />
            Alternatively download the "Armenian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArmenianFast">
            <summary>
            Armenian  OCR language. Performs OCR, reading documents of the Armenian (Հայերեն) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Armenian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Armenian' from https://www.nuget.org/packages/IronOcr.Languages.Armenian/ to your Visual Studio project.<br />
            Alternatively download the "Armenian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Inuktitut">
            <summary>
            Inuktitut  OCR language. Performs OCR, reading documents of the Inuktitut (ᐃᓄᒃᑎᑐᑦ) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Inuktitut uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Inuktitut' from https://www.nuget.org/packages/IronOcr.Languages.Inuktitut/ to your Visual Studio project.<br />
            Alternatively download the "Inuktitut.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.InuktitutBest">
            <summary>
            Inuktitut  OCR language. Performs OCR, reading documents of the Inuktitut (ᐃᓄᒃᑎᑐᑦ) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Inuktitut uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Inuktitut' from https://www.nuget.org/packages/IronOcr.Languages.Inuktitut/ to your Visual Studio project.<br />
            Alternatively download the "Inuktitut.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.InuktitutFast">
            <summary>
            Inuktitut  OCR language. Performs OCR, reading documents of the Inuktitut (ᐃᓄᒃᑎᑐᑦ) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Inuktitut uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Inuktitut' from https://www.nuget.org/packages/IronOcr.Languages.Inuktitut/ to your Visual Studio project.<br />
            Alternatively download the "Inuktitut.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Indonesian">
            <summary>
            Indonesian  OCR language. Performs OCR, reading documents of the Indonesian (Bahasa Indonesia) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Indonesian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Indonesian' from https://www.nuget.org/packages/IronOcr.Languages.Indonesian/ to your Visual Studio project.<br />
            Alternatively download the "Indonesian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.IndonesianBest">
            <summary>
            Indonesian  OCR language. Performs OCR, reading documents of the Indonesian (Bahasa Indonesia) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Indonesian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Indonesian' from https://www.nuget.org/packages/IronOcr.Languages.Indonesian/ to your Visual Studio project.<br />
            Alternatively download the "Indonesian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.IndonesianFast">
            <summary>
            Indonesian  OCR language. Performs OCR, reading documents of the Indonesian (Bahasa Indonesia) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Indonesian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Indonesian' from https://www.nuget.org/packages/IronOcr.Languages.Indonesian/ to your Visual Studio project.<br />
            Alternatively download the "Indonesian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Icelandic">
            <summary>
            Icelandic  OCR language. Performs OCR, reading documents of the Icelandic (Íslenska) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Icelandic uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Icelandic' from https://www.nuget.org/packages/IronOcr.Languages.Icelandic/ to your Visual Studio project.<br />
            Alternatively download the "Icelandic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.IcelandicBest">
            <summary>
            Icelandic  OCR language. Performs OCR, reading documents of the Icelandic (Íslenska) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Icelandic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Icelandic' from https://www.nuget.org/packages/IronOcr.Languages.Icelandic/ to your Visual Studio project.<br />
            Alternatively download the "Icelandic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.IcelandicFast">
            <summary>
            Icelandic  OCR language. Performs OCR, reading documents of the Icelandic (Íslenska) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Icelandic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Icelandic' from https://www.nuget.org/packages/IronOcr.Languages.Icelandic/ to your Visual Studio project.<br />
            Alternatively download the "Icelandic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Italian">
            <summary>
            Italian  OCR language. Performs OCR, reading documents of the Italian (italiano) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Italian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Italian' from https://www.nuget.org/packages/IronOcr.Languages.Italian/ to your Visual Studio project.<br />
            Alternatively download the "Italian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ItalianBest">
            <summary>
            Italian  OCR language. Performs OCR, reading documents of the Italian (italiano) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Italian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Italian' from https://www.nuget.org/packages/IronOcr.Languages.Italian/ to your Visual Studio project.<br />
            Alternatively download the "Italian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ItalianFast">
            <summary>
            Italian  OCR language. Performs OCR, reading documents of the Italian (italiano) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Italian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Italian' from https://www.nuget.org/packages/IronOcr.Languages.Italian/ to your Visual Studio project.<br />
            Alternatively download the "Italian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ItalianOld">
            <summary>
            Italian Old  OCR language. Performs OCR, reading documents of the Italian Old (italiano) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Italian Old uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Italian' from https://www.nuget.org/packages/IronOcr.Languages.Italian/ to your Visual Studio project.<br />
            Alternatively download the "Italian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ItalianOldBest">
            <summary>
            Italian Old  OCR language. Performs OCR, reading documents of the Italian Old (italiano) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Italian Old uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Italian' from https://www.nuget.org/packages/IronOcr.Languages.Italian/ to your Visual Studio project.<br />
            Alternatively download the "Italian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ItalianOldFast">
            <summary>
            Italian Old  OCR language. Performs OCR, reading documents of the Italian Old (italiano) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Italian Old uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Italian' from https://www.nuget.org/packages/IronOcr.Languages.Italian/ to your Visual Studio project.<br />
            Alternatively download the "Italian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseAlphabet">
            <summary>
            Japanese Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Japanese Alphabet [日本語 (にほんご)] languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Japanese Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseAlphabetBest">
            <summary>
            Japanese Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Japanese Alphabet [日本語 (にほんご)] languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Japanese Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseAlphabetFast">
            <summary>
            Japanese Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Japanese Alphabet [日本語 (にほんご)] languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Japanese Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseVerticalAlphabet">
            <summary>
            Japanese Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Japanese Vertical Alphabet [日本語 (にほんご)] languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Japanese Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseVerticalAlphabetBest">
            <summary>
            Japanese Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Japanese Vertical Alphabet [日本語 (にほんご)] languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Japanese Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseVerticalAlphabetFast">
            <summary>
            Japanese Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Japanese Vertical Alphabet [日本語 (にほんご)] languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Japanese Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Javanese">
            <summary>
            Javanese  OCR language. Performs OCR, reading documents of the Javanese (basa Jawa) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Javanese uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Javanese' from https://www.nuget.org/packages/IronOcr.Languages.Javanese/ to your Visual Studio project.<br />
            Alternatively download the "Javanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JavaneseBest">
            <summary>
            Javanese  OCR language. Performs OCR, reading documents of the Javanese (basa Jawa) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Javanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Javanese' from https://www.nuget.org/packages/IronOcr.Languages.Javanese/ to your Visual Studio project.<br />
            Alternatively download the "Javanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JavaneseFast">
            <summary>
            Javanese  OCR language. Performs OCR, reading documents of the Javanese (basa Jawa) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Javanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Javanese' from https://www.nuget.org/packages/IronOcr.Languages.Javanese/ to your Visual Studio project.<br />
            Alternatively download the "Javanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Japanese">
            <summary>
            Japanese  OCR language. Performs OCR, reading documents of the Japanese [日本語 (にほんご)] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Japanese uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseBest">
            <summary>
            Japanese  OCR language. Performs OCR, reading documents of the Japanese [日本語 (にほんご)] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Japanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseFast">
            <summary>
            Japanese  OCR language. Performs OCR, reading documents of the Japanese [日本語 (にほんご)] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Japanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseVertical">
            <summary>
            Japanese Vertical  OCR language. Performs OCR, reading documents of the Japanese Vertical [日本語 (にほんご)] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Japanese Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseVerticalBest">
            <summary>
            Japanese Vertical  OCR language. Performs OCR, reading documents of the Japanese Vertical [日本語 (にほんご)] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Japanese Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseVerticalFast">
            <summary>
            Japanese Vertical  OCR language. Performs OCR, reading documents of the Japanese Vertical [日本語 (にほんご)] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Japanese Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Kannada">
            <summary>
            Kannada  OCR language. Performs OCR, reading documents of the Kannada (ಕನ್ನಡ) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Kannada uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kannada' from https://www.nuget.org/packages/IronOcr.Languages.Kannada/ to your Visual Studio project.<br />
            Alternatively download the "Kannada.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KannadaBest">
            <summary>
            Kannada  OCR language. Performs OCR, reading documents of the Kannada (ಕನ್ನಡ) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Kannada uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kannada' from https://www.nuget.org/packages/IronOcr.Languages.Kannada/ to your Visual Studio project.<br />
            Alternatively download the "Kannada.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KannadaFast">
            <summary>
            Kannada  OCR language. Performs OCR, reading documents of the Kannada (ಕನ್ನಡ) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Kannada uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kannada' from https://www.nuget.org/packages/IronOcr.Languages.Kannada/ to your Visual Studio project.<br />
            Alternatively download the "Kannada.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KannadaAlphabet">
            <summary>
            Kannada Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Kannada Alphabet (ಕನ್ನಡ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Kannada Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kannada' from https://www.nuget.org/packages/IronOcr.Languages.Kannada/ to your Visual Studio project.<br />
            Alternatively download the "Kannada.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KannadaAlphabetBest">
            <summary>
            Kannada Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Kannada Alphabet (ಕನ್ನಡ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Kannada Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kannada' from https://www.nuget.org/packages/IronOcr.Languages.Kannada/ to your Visual Studio project.<br />
            Alternatively download the "Kannada.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KannadaAlphabetFast">
            <summary>
            Kannada Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Kannada Alphabet (ಕನ್ನಡ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Kannada Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kannada' from https://www.nuget.org/packages/IronOcr.Languages.Kannada/ to your Visual Studio project.<br />
            Alternatively download the "Kannada.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Georgian">
            <summary>
            Georgian  OCR language. Performs OCR, reading documents of the Georgian (ქართული) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Georgian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project.<br />
            Alternatively download the "Georgian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GeorgianBest">
            <summary>
            Georgian  OCR language. Performs OCR, reading documents of the Georgian (ქართული) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Georgian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project.<br />
            Alternatively download the "Georgian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GeorgianFast">
            <summary>
            Georgian  OCR language. Performs OCR, reading documents of the Georgian (ქართული) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Georgian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project.<br />
            Alternatively download the "Georgian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GeorgianOld">
            <summary>
            Georgian Old  OCR language. Performs OCR, reading documents of the Georgian Old (ქართული) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Georgian Old uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project.<br />
            Alternatively download the "Georgian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GeorgianOldBest">
            <summary>
            Georgian Old  OCR language. Performs OCR, reading documents of the Georgian Old (ქართული) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Georgian Old uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project.<br />
            Alternatively download the "Georgian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GeorgianOldFast">
            <summary>
            Georgian Old  OCR language. Performs OCR, reading documents of the Georgian Old (ქართული) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Georgian Old uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project.<br />
            Alternatively download the "Georgian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Kazakh">
            <summary>
            Kazakh  OCR language. Performs OCR, reading documents of the Kazakh (қазақ тілі) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Kazakh uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kazakh' from https://www.nuget.org/packages/IronOcr.Languages.Kazakh/ to your Visual Studio project.<br />
            Alternatively download the "Kazakh.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KazakhBest">
            <summary>
            Kazakh  OCR language. Performs OCR, reading documents of the Kazakh (қазақ тілі) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Kazakh uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kazakh' from https://www.nuget.org/packages/IronOcr.Languages.Kazakh/ to your Visual Studio project.<br />
            Alternatively download the "Kazakh.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KazakhFast">
            <summary>
            Kazakh  OCR language. Performs OCR, reading documents of the Kazakh (қазақ тілі) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Kazakh uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kazakh' from https://www.nuget.org/packages/IronOcr.Languages.Kazakh/ to your Visual Studio project.<br />
            Alternatively download the "Kazakh.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Khmer">
            <summary>
            Khmer  OCR language. Performs OCR, reading documents of the Khmer (ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Khmer uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Khmer' from https://www.nuget.org/packages/IronOcr.Languages.Khmer/ to your Visual Studio project.<br />
            Alternatively download the "Khmer.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KhmerBest">
            <summary>
            Khmer  OCR language. Performs OCR, reading documents of the Khmer (ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Khmer uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Khmer' from https://www.nuget.org/packages/IronOcr.Languages.Khmer/ to your Visual Studio project.<br />
            Alternatively download the "Khmer.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KhmerFast">
            <summary>
            Khmer  OCR language. Performs OCR, reading documents of the Khmer (ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Khmer uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Khmer' from https://www.nuget.org/packages/IronOcr.Languages.Khmer/ to your Visual Studio project.<br />
            Alternatively download the "Khmer.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KhmerAlphabet">
            <summary>
            Khmer Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Khmer Alphabet (ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Khmer Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Khmer' from https://www.nuget.org/packages/IronOcr.Languages.Khmer/ to your Visual Studio project.<br />
            Alternatively download the "Khmer.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KhmerAlphabetBest">
            <summary>
            Khmer Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Khmer Alphabet (ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Khmer Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Khmer' from https://www.nuget.org/packages/IronOcr.Languages.Khmer/ to your Visual Studio project.<br />
            Alternatively download the "Khmer.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KhmerAlphabetFast">
            <summary>
            Khmer Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Khmer Alphabet (ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Khmer Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Khmer' from https://www.nuget.org/packages/IronOcr.Languages.Khmer/ to your Visual Studio project.<br />
            Alternatively download the "Khmer.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Kyrgyz">
            <summary>
            Kyrgyz  OCR language. Performs OCR, reading documents of the Kyrgyz (Кыргызча, Кыргыз тили) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Kyrgyz uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kyrgyz' from https://www.nuget.org/packages/IronOcr.Languages.Kyrgyz/ to your Visual Studio project.<br />
            Alternatively download the "Kyrgyz.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KyrgyzBest">
            <summary>
            Kyrgyz  OCR language. Performs OCR, reading documents of the Kyrgyz (Кыргызча, Кыргыз тили) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Kyrgyz uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kyrgyz' from https://www.nuget.org/packages/IronOcr.Languages.Kyrgyz/ to your Visual Studio project.<br />
            Alternatively download the "Kyrgyz.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KyrgyzFast">
            <summary>
            Kyrgyz  OCR language. Performs OCR, reading documents of the Kyrgyz (Кыргызча, Кыргыз тили) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Kyrgyz uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kyrgyz' from https://www.nuget.org/packages/IronOcr.Languages.Kyrgyz/ to your Visual Studio project.<br />
            Alternatively download the "Kyrgyz.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.NorthernKurdish">
            <summary>
            Northern Kurdish  OCR language. Performs OCR, reading documents of the Northern Kurdish (Kurmanji, کورمانجی ,Kurmancî‎) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Northern Kurdish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.NorthernKurdish' from https://www.nuget.org/packages/IronOcr.Languages.NorthernKurdish/ to your Visual Studio project.<br />
            Alternatively download the "NorthernKurdish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.NorthernKurdishBest">
            <summary>
            Northern Kurdish  OCR language. Performs OCR, reading documents of the Northern Kurdish (Kurmanji, کورمانجی ,Kurmancî‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Northern Kurdish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.NorthernKurdish' from https://www.nuget.org/packages/IronOcr.Languages.NorthernKurdish/ to your Visual Studio project.<br />
            Alternatively download the "NorthernKurdish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.NorthernKurdishFast">
            <summary>
            Northern Kurdish  OCR language. Performs OCR, reading documents of the Northern Kurdish (Kurmanji, کورمانجی ,Kurmancî‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Northern Kurdish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.NorthernKurdish' from https://www.nuget.org/packages/IronOcr.Languages.NorthernKurdish/ to your Visual Studio project.<br />
            Alternatively download the "NorthernKurdish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Korean">
            <summary>
            Korean  OCR language. Performs OCR, reading documents of the Korean [한국어 (韓國語), 조선어 (朝鮮語)] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Korean uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Korean' from https://www.nuget.org/packages/IronOcr.Languages.Korean/ to your Visual Studio project.<br />
            Alternatively download the "Korean.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KoreanBest">
            <summary>
            Korean  OCR language. Performs OCR, reading documents of the Korean [한국어 (韓國語), 조선어 (朝鮮語)] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Korean uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Korean' from https://www.nuget.org/packages/IronOcr.Languages.Korean/ to your Visual Studio project.<br />
            Alternatively download the "Korean.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KoreanFast">
            <summary>
            Korean  OCR language. Performs OCR, reading documents of the Korean [한국어 (韓國語), 조선어 (朝鮮語)] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Korean uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Korean' from https://www.nuget.org/packages/IronOcr.Languages.Korean/ to your Visual Studio project.<br />
            Alternatively download the "Korean.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KoreanVertical">
            <summary>
            Korean Vertical  OCR language. Performs OCR, reading documents of the Korean Vertical [한국어 (韓國語), 조선어 (朝鮮語)] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Korean Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Korean' from https://www.nuget.org/packages/IronOcr.Languages.Korean/ to your Visual Studio project.<br />
            Alternatively download the "Korean.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KoreanVerticalBest">
            <summary>
            Korean Vertical  OCR language. Performs OCR, reading documents of the Korean Vertical [한국어 (韓國語), 조선어 (朝鮮語)] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Korean Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Korean' from https://www.nuget.org/packages/IronOcr.Languages.Korean/ to your Visual Studio project.<br />
            Alternatively download the "Korean.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KoreanVerticalFast">
            <summary>
            Korean Vertical  OCR language. Performs OCR, reading documents of the Korean Vertical [한국어 (韓國語), 조선어 (朝鮮語)] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Korean Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Korean' from https://www.nuget.org/packages/IronOcr.Languages.Korean/ to your Visual Studio project.<br />
            Alternatively download the "Korean.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Lao">
            <summary>
            Lao  OCR language. Performs OCR, reading documents of the Lao (ພາສາລາວ) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Lao uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Lao' from https://www.nuget.org/packages/IronOcr.Languages.Lao/ to your Visual Studio project.<br />
            Alternatively download the "Lao.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LaoBest">
            <summary>
            Lao  OCR language. Performs OCR, reading documents of the Lao (ພາສາລາວ) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Lao uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Lao' from https://www.nuget.org/packages/IronOcr.Languages.Lao/ to your Visual Studio project.<br />
            Alternatively download the "Lao.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LaoFast">
            <summary>
            Lao  OCR language. Performs OCR, reading documents of the Lao (ພາສາລາວ) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Lao uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Lao' from https://www.nuget.org/packages/IronOcr.Languages.Lao/ to your Visual Studio project.<br />
            Alternatively download the "Lao.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LaoAlphabet">
            <summary>
            Lao Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Lao Alphabet (ພາສາລາວ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Lao Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Lao' from https://www.nuget.org/packages/IronOcr.Languages.Lao/ to your Visual Studio project.<br />
            Alternatively download the "Lao.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LaoAlphabetBest">
            <summary>
            Lao Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Lao Alphabet (ພາສາລາວ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Lao Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Lao' from https://www.nuget.org/packages/IronOcr.Languages.Lao/ to your Visual Studio project.<br />
            Alternatively download the "Lao.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LaoAlphabetFast">
            <summary>
            Lao Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Lao Alphabet (ພາສາລາວ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Lao Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Lao' from https://www.nuget.org/packages/IronOcr.Languages.Lao/ to your Visual Studio project.<br />
            Alternatively download the "Lao.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Latin">
            <summary>
            Latin  OCR language. Performs OCR, reading documents of the Latin (latine, lingua latina) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Latin uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Latin' from https://www.nuget.org/packages/IronOcr.Languages.Latin/ to your Visual Studio project.<br />
            Alternatively download the "Latin.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LatinBest">
            <summary>
            Latin  OCR language. Performs OCR, reading documents of the Latin (latine, lingua latina) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Latin uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Latin' from https://www.nuget.org/packages/IronOcr.Languages.Latin/ to your Visual Studio project.<br />
            Alternatively download the "Latin.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LatinFast">
            <summary>
            Latin  OCR language. Performs OCR, reading documents of the Latin (latine, lingua latina) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Latin uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Latin' from https://www.nuget.org/packages/IronOcr.Languages.Latin/ to your Visual Studio project.<br />
            Alternatively download the "Latin.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LatinAlphabet">
            <summary>
            Latin Alphabetic Script  OCR dictionary. Reads the letters of the Latin / Romain / 'English' alphabet as is commonly used in English and other European languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Latin Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.LatinAlphabet' from https://www.nuget.org/packages/IronOcr.Languages.LatinAlphabet/ to your Visual Studio project.<br />
            Alternatively download the "LatinAlphabet.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LatinAlphabetBest">
            <summary>
            Latin Alphabetic Script  OCR dictionary. Reads the letters of the Latin / Romain / 'English' alphabet as is commonly used in English and other European languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Latin Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.LatinAlphabet' from https://www.nuget.org/packages/IronOcr.Languages.LatinAlphabet/ to your Visual Studio project.<br />
            Alternatively download the "LatinAlphabet.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LatinAlphabetFast">
            <summary>
            Latin Alphabetic Script  OCR dictionary. Reads the letters of the Latin / Romain / 'English' alphabet as is commonly used in English and other European languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Latin Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.LatinAlphabet' from https://www.nuget.org/packages/IronOcr.Languages.LatinAlphabet/ to your Visual Studio project.<br />
            Alternatively download the "LatinAlphabet.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Latvian">
            <summary>
            Latvian  OCR language. Performs OCR, reading documents of the Latvian (latviešu valoda) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Latvian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Latvian' from https://www.nuget.org/packages/IronOcr.Languages.Latvian/ to your Visual Studio project.<br />
            Alternatively download the "Latvian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LatvianBest">
            <summary>
            Latvian  OCR language. Performs OCR, reading documents of the Latvian (latviešu valoda) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Latvian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Latvian' from https://www.nuget.org/packages/IronOcr.Languages.Latvian/ to your Visual Studio project.<br />
            Alternatively download the "Latvian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LatvianFast">
            <summary>
            Latvian  OCR language. Performs OCR, reading documents of the Latvian (latviešu valoda) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Latvian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Latvian' from https://www.nuget.org/packages/IronOcr.Languages.Latvian/ to your Visual Studio project.<br />
            Alternatively download the "Latvian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Lithuanian">
            <summary>
            Lithuanian  OCR language. Performs OCR, reading documents of the Lithuanian (lietuvių kalba) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Lithuanian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Lithuanian' from https://www.nuget.org/packages/IronOcr.Languages.Lithuanian/ to your Visual Studio project.<br />
            Alternatively download the "Lithuanian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LithuanianBest">
            <summary>
            Lithuanian  OCR language. Performs OCR, reading documents of the Lithuanian (lietuvių kalba) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Lithuanian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Lithuanian' from https://www.nuget.org/packages/IronOcr.Languages.Lithuanian/ to your Visual Studio project.<br />
            Alternatively download the "Lithuanian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LithuanianFast">
            <summary>
            Lithuanian  OCR language. Performs OCR, reading documents of the Lithuanian (lietuvių kalba) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Lithuanian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Lithuanian' from https://www.nuget.org/packages/IronOcr.Languages.Lithuanian/ to your Visual Studio project.<br />
            Alternatively download the "Lithuanian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Luxembourgish">
            <summary>
            Luxembourgish  OCR language. Performs OCR, reading documents of the Luxembourgish (Lëtzebuergesch) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Luxembourgish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Luxembourgish' from https://www.nuget.org/packages/IronOcr.Languages.Luxembourgish/ to your Visual Studio project.<br />
            Alternatively download the "Luxembourgish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LuxembourgishBest">
            <summary>
            Luxembourgish  OCR language. Performs OCR, reading documents of the Luxembourgish (Lëtzebuergesch) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Luxembourgish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Luxembourgish' from https://www.nuget.org/packages/IronOcr.Languages.Luxembourgish/ to your Visual Studio project.<br />
            Alternatively download the "Luxembourgish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LuxembourgishFast">
            <summary>
            Luxembourgish  OCR language. Performs OCR, reading documents of the Luxembourgish (Lëtzebuergesch) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Luxembourgish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Luxembourgish' from https://www.nuget.org/packages/IronOcr.Languages.Luxembourgish/ to your Visual Studio project.<br />
            Alternatively download the "Luxembourgish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Malayalam">
            <summary>
            Malayalam  OCR language. Performs OCR, reading documents of the Malayalam (മലയാളം) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Malayalam uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Malayalam' from https://www.nuget.org/packages/IronOcr.Languages.Malayalam/ to your Visual Studio project.<br />
            Alternatively download the "Malayalam.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MalayalamBest">
            <summary>
            Malayalam  OCR language. Performs OCR, reading documents of the Malayalam (മലയാളം) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Malayalam uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Malayalam' from https://www.nuget.org/packages/IronOcr.Languages.Malayalam/ to your Visual Studio project.<br />
            Alternatively download the "Malayalam.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MalayalamFast">
            <summary>
            Malayalam  OCR language. Performs OCR, reading documents of the Malayalam (മലയാളം) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Malayalam uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Malayalam' from https://www.nuget.org/packages/IronOcr.Languages.Malayalam/ to your Visual Studio project.<br />
            Alternatively download the "Malayalam.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MalayalamAlphabet">
            <summary>
            Malayalam Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Malayalam Alphabet (മലയാളം) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Malayalam Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Malayalam' from https://www.nuget.org/packages/IronOcr.Languages.Malayalam/ to your Visual Studio project.<br />
            Alternatively download the "Malayalam.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MalayalamAlphabetBest">
            <summary>
            Malayalam Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Malayalam Alphabet (മലയാളം) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Malayalam Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Malayalam' from https://www.nuget.org/packages/IronOcr.Languages.Malayalam/ to your Visual Studio project.<br />
            Alternatively download the "Malayalam.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MalayalamAlphabetFast">
            <summary>
            Malayalam Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Malayalam Alphabet (മലയാളം) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Malayalam Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Malayalam' from https://www.nuget.org/packages/IronOcr.Languages.Malayalam/ to your Visual Studio project.<br />
            Alternatively download the "Malayalam.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Marathi">
            <summary>
            Marathi  OCR language. Performs OCR, reading documents of the Marathi (मराठी) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Marathi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Marathi' from https://www.nuget.org/packages/IronOcr.Languages.Marathi/ to your Visual Studio project.<br />
            Alternatively download the "Marathi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MarathiBest">
            <summary>
            Marathi  OCR language. Performs OCR, reading documents of the Marathi (मराठी) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Marathi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Marathi' from https://www.nuget.org/packages/IronOcr.Languages.Marathi/ to your Visual Studio project.<br />
            Alternatively download the "Marathi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MarathiFast">
            <summary>
            Marathi  OCR language. Performs OCR, reading documents of the Marathi (मराठी) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Marathi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Marathi' from https://www.nuget.org/packages/IronOcr.Languages.Marathi/ to your Visual Studio project.<br />
            Alternatively download the "Marathi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MICR">
            <summary>
            MICR  OCR language. Performs OCR, reading documents of the MICR (Magnetic Ink Character Recognition, MICR Cheque Encoding) language with an understanding of spelling and linguistic context. 
            <para>This MICR OCR language pack  uses only an OEM (shape recognition evolved from Tesseract 3) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.MICR' from https://www.nuget.org/packages/IronOcr.Languages.MICR/ to your Visual Studio project.<br />
            Alternatively download the "MICR.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Macedonian">
            <summary>
            Macedonian  OCR language. Performs OCR, reading documents of the Macedonian (македонски јазик) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Macedonian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Macedonian' from https://www.nuget.org/packages/IronOcr.Languages.Macedonian/ to your Visual Studio project.<br />
            Alternatively download the "Macedonian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MacedonianBest">
            <summary>
            Macedonian  OCR language. Performs OCR, reading documents of the Macedonian (македонски јазик) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Macedonian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Macedonian' from https://www.nuget.org/packages/IronOcr.Languages.Macedonian/ to your Visual Studio project.<br />
            Alternatively download the "Macedonian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MacedonianFast">
            <summary>
            Macedonian  OCR language. Performs OCR, reading documents of the Macedonian (македонски јазик) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Macedonian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Macedonian' from https://www.nuget.org/packages/IronOcr.Languages.Macedonian/ to your Visual Studio project.<br />
            Alternatively download the "Macedonian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Maltese">
            <summary>
            Maltese  OCR language. Performs OCR, reading documents of the Maltese (Malti) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Maltese uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Maltese' from https://www.nuget.org/packages/IronOcr.Languages.Maltese/ to your Visual Studio project.<br />
            Alternatively download the "Maltese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MalteseBest">
            <summary>
            Maltese  OCR language. Performs OCR, reading documents of the Maltese (Malti) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Maltese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Maltese' from https://www.nuget.org/packages/IronOcr.Languages.Maltese/ to your Visual Studio project.<br />
            Alternatively download the "Maltese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MalteseFast">
            <summary>
            Maltese  OCR language. Performs OCR, reading documents of the Maltese (Malti) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Maltese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Maltese' from https://www.nuget.org/packages/IronOcr.Languages.Maltese/ to your Visual Studio project.<br />
            Alternatively download the "Maltese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Mongolian">
            <summary>
            Mongolian  OCR language. Performs OCR, reading documents of the Mongolian (монгол) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Mongolian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Mongolian' from https://www.nuget.org/packages/IronOcr.Languages.Mongolian/ to your Visual Studio project.<br />
            Alternatively download the "Mongolian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MongolianBest">
            <summary>
            Mongolian  OCR language. Performs OCR, reading documents of the Mongolian (монгол) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Mongolian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Mongolian' from https://www.nuget.org/packages/IronOcr.Languages.Mongolian/ to your Visual Studio project.<br />
            Alternatively download the "Mongolian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MongolianFast">
            <summary>
            Mongolian  OCR language. Performs OCR, reading documents of the Mongolian (монгол) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Mongolian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Mongolian' from https://www.nuget.org/packages/IronOcr.Languages.Mongolian/ to your Visual Studio project.<br />
            Alternatively download the "Mongolian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Maori">
            <summary>
            Maori  OCR language. Performs OCR, reading documents of the Maori (te reo Māori) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Maori uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Maori' from https://www.nuget.org/packages/IronOcr.Languages.Maori/ to your Visual Studio project.<br />
            Alternatively download the "Maori.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MaoriBest">
            <summary>
            Maori  OCR language. Performs OCR, reading documents of the Maori (te reo Māori) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Maori uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Maori' from https://www.nuget.org/packages/IronOcr.Languages.Maori/ to your Visual Studio project.<br />
            Alternatively download the "Maori.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MaoriFast">
            <summary>
            Maori  OCR language. Performs OCR, reading documents of the Maori (te reo Māori) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Maori uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Maori' from https://www.nuget.org/packages/IronOcr.Languages.Maori/ to your Visual Studio project.<br />
            Alternatively download the "Maori.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Malay">
            <summary>
            Malay  OCR language. Performs OCR, reading documents of the Malay (bahasa Melayu, بهاس ملايو‎) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Malay uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Malay' from https://www.nuget.org/packages/IronOcr.Languages.Malay/ to your Visual Studio project.<br />
            Alternatively download the "Malay.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MalayBest">
            <summary>
            Malay  OCR language. Performs OCR, reading documents of the Malay (bahasa Melayu, بهاس ملايو‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Malay uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Malay' from https://www.nuget.org/packages/IronOcr.Languages.Malay/ to your Visual Studio project.<br />
            Alternatively download the "Malay.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MalayFast">
            <summary>
            Malay  OCR language. Performs OCR, reading documents of the Malay (bahasa Melayu, بهاس ملايو‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Malay uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Malay' from https://www.nuget.org/packages/IronOcr.Languages.Malay/ to your Visual Studio project.<br />
            Alternatively download the "Malay.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Myanmar">
            <summary>
            Myanmar  OCR language. Performs OCR, reading documents of the Myanmar (Burmese ,ဗမာစာ) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Myanmar uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Myanmar' from https://www.nuget.org/packages/IronOcr.Languages.Myanmar/ to your Visual Studio project.<br />
            Alternatively download the "Myanmar.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MyanmarBest">
            <summary>
            Myanmar  OCR language. Performs OCR, reading documents of the Myanmar (Burmese ,ဗမာစာ) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Myanmar uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Myanmar' from https://www.nuget.org/packages/IronOcr.Languages.Myanmar/ to your Visual Studio project.<br />
            Alternatively download the "Myanmar.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MyanmarFast">
            <summary>
            Myanmar  OCR language. Performs OCR, reading documents of the Myanmar (Burmese ,ဗမာစာ) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Myanmar uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Myanmar' from https://www.nuget.org/packages/IronOcr.Languages.Myanmar/ to your Visual Studio project.<br />
            Alternatively download the "Myanmar.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MyanmarAlphabet">
            <summary>
            Myanmar Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Myanmar Alphabet (Burmese ,ဗမာစာ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Myanmar Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Myanmar' from https://www.nuget.org/packages/IronOcr.Languages.Myanmar/ to your Visual Studio project.<br />
            Alternatively download the "Myanmar.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MyanmarAlphabetBest">
            <summary>
            Myanmar Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Myanmar Alphabet (Burmese ,ဗမာစာ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Myanmar Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Myanmar' from https://www.nuget.org/packages/IronOcr.Languages.Myanmar/ to your Visual Studio project.<br />
            Alternatively download the "Myanmar.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MyanmarAlphabetFast">
            <summary>
            Myanmar Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Myanmar Alphabet (Burmese ,ဗမာစာ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Myanmar Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Myanmar' from https://www.nuget.org/packages/IronOcr.Languages.Myanmar/ to your Visual Studio project.<br />
            Alternatively download the "Myanmar.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Nepali">
            <summary>
            Nepali  OCR language. Performs OCR, reading documents of the Nepali (नेपाली) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Nepali uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Nepali' from https://www.nuget.org/packages/IronOcr.Languages.Nepali/ to your Visual Studio project.<br />
            Alternatively download the "Nepali.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.NepaliBest">
            <summary>
            Nepali  OCR language. Performs OCR, reading documents of the Nepali (नेपाली) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Nepali uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Nepali' from https://www.nuget.org/packages/IronOcr.Languages.Nepali/ to your Visual Studio project.<br />
            Alternatively download the "Nepali.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.NepaliFast">
            <summary>
            Nepali  OCR language. Performs OCR, reading documents of the Nepali (नेपाली) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Nepali uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Nepali' from https://www.nuget.org/packages/IronOcr.Languages.Nepali/ to your Visual Studio project.<br />
            Alternatively download the "Nepali.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Dutch">
            <summary>
            Dutch  OCR language. Performs OCR, reading documents of the Dutch (Nederlands, Vlaams) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Dutch uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Dutch' from https://www.nuget.org/packages/IronOcr.Languages.Dutch/ to your Visual Studio project.<br />
            Alternatively download the "Dutch.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DutchBest">
            <summary>
            Dutch  OCR language. Performs OCR, reading documents of the Dutch (Nederlands, Vlaams) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Dutch uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Dutch' from https://www.nuget.org/packages/IronOcr.Languages.Dutch/ to your Visual Studio project.<br />
            Alternatively download the "Dutch.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DutchFast">
            <summary>
            Dutch  OCR language. Performs OCR, reading documents of the Dutch (Nederlands, Vlaams) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Dutch uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Dutch' from https://www.nuget.org/packages/IronOcr.Languages.Dutch/ to your Visual Studio project.<br />
            Alternatively download the "Dutch.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Norwegian">
            <summary>
            Norwegian  OCR language. Performs OCR, reading documents of the Norwegian (Norsk) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Norwegian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Norwegian' from https://www.nuget.org/packages/IronOcr.Languages.Norwegian/ to your Visual Studio project.<br />
            Alternatively download the "Norwegian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.NorwegianBest">
            <summary>
            Norwegian  OCR language. Performs OCR, reading documents of the Norwegian (Norsk) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Norwegian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Norwegian' from https://www.nuget.org/packages/IronOcr.Languages.Norwegian/ to your Visual Studio project.<br />
            Alternatively download the "Norwegian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.NorwegianFast">
            <summary>
            Norwegian  OCR language. Performs OCR, reading documents of the Norwegian (Norsk) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Norwegian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Norwegian' from https://www.nuget.org/packages/IronOcr.Languages.Norwegian/ to your Visual Studio project.<br />
            Alternatively download the "Norwegian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Occitan">
            <summary>
            Occitan  OCR language. Performs OCR, reading documents of the Occitan (occitan, lenga d'òc) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Occitan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Occitan' from https://www.nuget.org/packages/IronOcr.Languages.Occitan/ to your Visual Studio project.<br />
            Alternatively download the "Occitan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.OccitanBest">
            <summary>
            Occitan  OCR language. Performs OCR, reading documents of the Occitan (occitan, lenga d'òc) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Occitan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Occitan' from https://www.nuget.org/packages/IronOcr.Languages.Occitan/ to your Visual Studio project.<br />
            Alternatively download the "Occitan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.OccitanFast">
            <summary>
            Occitan  OCR language. Performs OCR, reading documents of the Occitan (occitan, lenga d'òc) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Occitan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Occitan' from https://www.nuget.org/packages/IronOcr.Languages.Occitan/ to your Visual Studio project.<br />
            Alternatively download the "Occitan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Oriya">
            <summary>
            Oriya  OCR language. Performs OCR, reading documents of the Oriya (ଓଡ଼ିଆ) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Oriya uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Oriya' from https://www.nuget.org/packages/IronOcr.Languages.Oriya/ to your Visual Studio project.<br />
            Alternatively download the "Oriya.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.OriyaBest">
            <summary>
            Oriya  OCR language. Performs OCR, reading documents of the Oriya (ଓଡ଼ିଆ) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Oriya uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Oriya' from https://www.nuget.org/packages/IronOcr.Languages.Oriya/ to your Visual Studio project.<br />
            Alternatively download the "Oriya.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.OriyaFast">
            <summary>
            Oriya  OCR language. Performs OCR, reading documents of the Oriya (ଓଡ଼ିଆ) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Oriya uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Oriya' from https://www.nuget.org/packages/IronOcr.Languages.Oriya/ to your Visual Studio project.<br />
            Alternatively download the "Oriya.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.OriyaAlphabet">
            <summary>
            Oriya Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Oriya Alphabet (ଓଡ଼ିଆ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Oriya Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Oriya' from https://www.nuget.org/packages/IronOcr.Languages.Oriya/ to your Visual Studio project.<br />
            Alternatively download the "Oriya.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.OriyaAlphabetBest">
            <summary>
            Oriya Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Oriya Alphabet (ଓଡ଼ିଆ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Oriya Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Oriya' from https://www.nuget.org/packages/IronOcr.Languages.Oriya/ to your Visual Studio project.<br />
            Alternatively download the "Oriya.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.OriyaAlphabetFast">
            <summary>
            Oriya Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Oriya Alphabet (ଓଡ଼ିଆ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Oriya Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Oriya' from https://www.nuget.org/packages/IronOcr.Languages.Oriya/ to your Visual Studio project.<br />
            Alternatively download the "Oriya.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Panjabi">
            <summary>
            Panjabi  OCR language. Performs OCR, reading documents of the Panjabi (ਪੰਜਾਬੀ, پنجابی‎) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Panjabi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Panjabi' from https://www.nuget.org/packages/IronOcr.Languages.Panjabi/ to your Visual Studio project.<br />
            Alternatively download the "Panjabi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PanjabiBest">
            <summary>
            Panjabi  OCR language. Performs OCR, reading documents of the Panjabi (ਪੰਜਾਬੀ, پنجابی‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Panjabi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Panjabi' from https://www.nuget.org/packages/IronOcr.Languages.Panjabi/ to your Visual Studio project.<br />
            Alternatively download the "Panjabi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PanjabiFast">
            <summary>
            Panjabi  OCR language. Performs OCR, reading documents of the Panjabi (ਪੰਜਾਬੀ, پنجابی‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Panjabi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Panjabi' from https://www.nuget.org/packages/IronOcr.Languages.Panjabi/ to your Visual Studio project.<br />
            Alternatively download the "Panjabi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Polish">
            <summary>
            Polish  OCR language. Performs OCR, reading documents of the Polish (język polski, polszczyzna) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Polish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Polish' from https://www.nuget.org/packages/IronOcr.Languages.Polish/ to your Visual Studio project.<br />
            Alternatively download the "Polish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PolishBest">
            <summary>
            Polish  OCR language. Performs OCR, reading documents of the Polish (język polski, polszczyzna) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Polish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Polish' from https://www.nuget.org/packages/IronOcr.Languages.Polish/ to your Visual Studio project.<br />
            Alternatively download the "Polish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PolishFast">
            <summary>
            Polish  OCR language. Performs OCR, reading documents of the Polish (język polski, polszczyzna) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Polish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Polish' from https://www.nuget.org/packages/IronOcr.Languages.Polish/ to your Visual Studio project.<br />
            Alternatively download the "Polish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Portuguese">
            <summary>
            Portuguese  OCR language. Performs OCR, reading documents of the Portuguese (português) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Portuguese uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Portuguese' from https://www.nuget.org/packages/IronOcr.Languages.Portuguese/ to your Visual Studio project.<br />
            Alternatively download the "Portuguese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PortugueseBest">
            <summary>
            Portuguese  OCR language. Performs OCR, reading documents of the Portuguese (português) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Portuguese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Portuguese' from https://www.nuget.org/packages/IronOcr.Languages.Portuguese/ to your Visual Studio project.<br />
            Alternatively download the "Portuguese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PortugueseFast">
            <summary>
            Portuguese  OCR language. Performs OCR, reading documents of the Portuguese (português) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Portuguese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Portuguese' from https://www.nuget.org/packages/IronOcr.Languages.Portuguese/ to your Visual Studio project.<br />
            Alternatively download the "Portuguese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Pashto">
            <summary>
            Pashto  OCR language. Performs OCR, reading documents of the Pashto (پښتو) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Pashto uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Pashto' from https://www.nuget.org/packages/IronOcr.Languages.Pashto/ to your Visual Studio project.<br />
            Alternatively download the "Pashto.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PashtoBest">
            <summary>
            Pashto  OCR language. Performs OCR, reading documents of the Pashto (پښتو) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Pashto uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Pashto' from https://www.nuget.org/packages/IronOcr.Languages.Pashto/ to your Visual Studio project.<br />
            Alternatively download the "Pashto.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PashtoFast">
            <summary>
            Pashto  OCR language. Performs OCR, reading documents of the Pashto (پښتو) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Pashto uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Pashto' from https://www.nuget.org/packages/IronOcr.Languages.Pashto/ to your Visual Studio project.<br />
            Alternatively download the "Pashto.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Quechua">
            <summary>
            Quechua  OCR language. Performs OCR, reading documents of the Quechua (Runa Simi, Kichwa) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Quechua uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Quechua' from https://www.nuget.org/packages/IronOcr.Languages.Quechua/ to your Visual Studio project.<br />
            Alternatively download the "Quechua.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.QuechuaBest">
            <summary>
            Quechua  OCR language. Performs OCR, reading documents of the Quechua (Runa Simi, Kichwa) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Quechua uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Quechua' from https://www.nuget.org/packages/IronOcr.Languages.Quechua/ to your Visual Studio project.<br />
            Alternatively download the "Quechua.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.QuechuaFast">
            <summary>
            Quechua  OCR language. Performs OCR, reading documents of the Quechua (Runa Simi, Kichwa) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Quechua uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Quechua' from https://www.nuget.org/packages/IronOcr.Languages.Quechua/ to your Visual Studio project.<br />
            Alternatively download the "Quechua.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Romanian">
            <summary>
            Romanian  OCR language. Performs OCR, reading documents of the Romanian (limba română) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Romanian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Romanian' from https://www.nuget.org/packages/IronOcr.Languages.Romanian/ to your Visual Studio project.<br />
            Alternatively download the "Romanian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.RomanianBest">
            <summary>
            Romanian  OCR language. Performs OCR, reading documents of the Romanian (limba română) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Romanian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Romanian' from https://www.nuget.org/packages/IronOcr.Languages.Romanian/ to your Visual Studio project.<br />
            Alternatively download the "Romanian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.RomanianFast">
            <summary>
            Romanian  OCR language. Performs OCR, reading documents of the Romanian (limba română) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Romanian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Romanian' from https://www.nuget.org/packages/IronOcr.Languages.Romanian/ to your Visual Studio project.<br />
            Alternatively download the "Romanian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Russian">
            <summary>
            Russian  OCR language. Performs OCR, reading documents of the Russian (русский язык) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Russian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Russian' from https://www.nuget.org/packages/IronOcr.Languages.Russian/ to your Visual Studio project.<br />
            Alternatively download the "Russian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.RussianBest">
            <summary>
            Russian  OCR language. Performs OCR, reading documents of the Russian (русский язык) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Russian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Russian' from https://www.nuget.org/packages/IronOcr.Languages.Russian/ to your Visual Studio project.<br />
            Alternatively download the "Russian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.RussianFast">
            <summary>
            Russian  OCR language. Performs OCR, reading documents of the Russian (русский язык) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Russian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Russian' from https://www.nuget.org/packages/IronOcr.Languages.Russian/ to your Visual Studio project.<br />
            Alternatively download the "Russian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Sanskrit">
            <summary>
            Sanskrit  OCR language. Performs OCR, reading documents of the Sanskrit (संस्कृतम्) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Sanskrit uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sanskrit' from https://www.nuget.org/packages/IronOcr.Languages.Sanskrit/ to your Visual Studio project.<br />
            Alternatively download the "Sanskrit.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SanskritBest">
            <summary>
            Sanskrit  OCR language. Performs OCR, reading documents of the Sanskrit (संस्कृतम्) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Sanskrit uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sanskrit' from https://www.nuget.org/packages/IronOcr.Languages.Sanskrit/ to your Visual Studio project.<br />
            Alternatively download the "Sanskrit.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SanskritFast">
            <summary>
            Sanskrit  OCR language. Performs OCR, reading documents of the Sanskrit (संस्कृतम्) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Sanskrit uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sanskrit' from https://www.nuget.org/packages/IronOcr.Languages.Sanskrit/ to your Visual Studio project.<br />
            Alternatively download the "Sanskrit.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Sinhala">
            <summary>
            Sinhala  OCR language. Performs OCR, reading documents of the Sinhala (සිංහල) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Sinhala uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sinhala' from https://www.nuget.org/packages/IronOcr.Languages.Sinhala/ to your Visual Studio project.<br />
            Alternatively download the "Sinhala.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SinhalaBest">
            <summary>
            Sinhala  OCR language. Performs OCR, reading documents of the Sinhala (සිංහල) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Sinhala uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sinhala' from https://www.nuget.org/packages/IronOcr.Languages.Sinhala/ to your Visual Studio project.<br />
            Alternatively download the "Sinhala.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SinhalaFast">
            <summary>
            Sinhala  OCR language. Performs OCR, reading documents of the Sinhala (සිංහල) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Sinhala uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sinhala' from https://www.nuget.org/packages/IronOcr.Languages.Sinhala/ to your Visual Studio project.<br />
            Alternatively download the "Sinhala.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SinhalaAlphabet">
            <summary>
            Sinhala Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Sinhala Alphabet (සිංහල) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Sinhala Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sinhala' from https://www.nuget.org/packages/IronOcr.Languages.Sinhala/ to your Visual Studio project.<br />
            Alternatively download the "Sinhala.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SinhalaAlphabetBest">
            <summary>
            Sinhala Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Sinhala Alphabet (සිංහල) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Sinhala Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sinhala' from https://www.nuget.org/packages/IronOcr.Languages.Sinhala/ to your Visual Studio project.<br />
            Alternatively download the "Sinhala.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SinhalaAlphabetFast">
            <summary>
            Sinhala Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Sinhala Alphabet (සිංහල) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Sinhala Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sinhala' from https://www.nuget.org/packages/IronOcr.Languages.Sinhala/ to your Visual Studio project.<br />
            Alternatively download the "Sinhala.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Slovak">
            <summary>
            Slovak  OCR language. Performs OCR, reading documents of the Slovak (slovenčina, slovenský jazyk) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Slovak uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Slovak' from https://www.nuget.org/packages/IronOcr.Languages.Slovak/ to your Visual Studio project.<br />
            Alternatively download the "Slovak.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SlovakBest">
            <summary>
            Slovak  OCR language. Performs OCR, reading documents of the Slovak (slovenčina, slovenský jazyk) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Slovak uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Slovak' from https://www.nuget.org/packages/IronOcr.Languages.Slovak/ to your Visual Studio project.<br />
            Alternatively download the "Slovak.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SlovakFast">
            <summary>
            Slovak  OCR language. Performs OCR, reading documents of the Slovak (slovenčina, slovenský jazyk) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Slovak uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Slovak' from https://www.nuget.org/packages/IronOcr.Languages.Slovak/ to your Visual Studio project.<br />
            Alternatively download the "Slovak.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SlovakFraktur">
            <summary>
            Slovak Fraktur  OCR language. Performs OCR, reading documents of the Slovak Fraktur (slovenčina, slovenský jazyk) language with an understanding of spelling and linguistic context. 
            <para>This Slovak Fraktur OCR language pack  uses only an OEM (shape recognition evolved from Tesseract 3) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Slovak' from https://www.nuget.org/packages/IronOcr.Languages.Slovak/ to your Visual Studio project.<br />
            Alternatively download the "Slovak.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Slovene">
            <summary>
            Slovene  OCR language. Performs OCR, reading documents of the Slovene (slovenski jezik, slovenščina) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Slovene uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Slovene' from https://www.nuget.org/packages/IronOcr.Languages.Slovene/ to your Visual Studio project.<br />
            Alternatively download the "Slovene.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SloveneBest">
            <summary>
            Slovene  OCR language. Performs OCR, reading documents of the Slovene (slovenski jezik, slovenščina) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Slovene uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Slovene' from https://www.nuget.org/packages/IronOcr.Languages.Slovene/ to your Visual Studio project.<br />
            Alternatively download the "Slovene.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SloveneFast">
            <summary>
            Slovene  OCR language. Performs OCR, reading documents of the Slovene (slovenski jezik, slovenščina) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Slovene uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Slovene' from https://www.nuget.org/packages/IronOcr.Languages.Slovene/ to your Visual Studio project.<br />
            Alternatively download the "Slovene.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Sindhi">
            <summary>
            Sindhi  OCR language. Performs OCR, reading documents of the Sindhi (सिन्धी, سنڌي، سندھی‎) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Sindhi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sindhi' from https://www.nuget.org/packages/IronOcr.Languages.Sindhi/ to your Visual Studio project.<br />
            Alternatively download the "Sindhi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SindhiBest">
            <summary>
            Sindhi  OCR language. Performs OCR, reading documents of the Sindhi (सिन्धी, سنڌي، سندھی‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Sindhi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sindhi' from https://www.nuget.org/packages/IronOcr.Languages.Sindhi/ to your Visual Studio project.<br />
            Alternatively download the "Sindhi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SindhiFast">
            <summary>
            Sindhi  OCR language. Performs OCR, reading documents of the Sindhi (सिन्धी, سنڌي، سندھی‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Sindhi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sindhi' from https://www.nuget.org/packages/IronOcr.Languages.Sindhi/ to your Visual Studio project.<br />
            Alternatively download the "Sindhi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Spanish">
            <summary>
            Spanish  OCR language. Performs OCR, reading documents of the Spanish (español, castellano) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Spanish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Spanish' from https://www.nuget.org/packages/IronOcr.Languages.Spanish/ to your Visual Studio project.<br />
            Alternatively download the "Spanish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SpanishBest">
            <summary>
            Spanish  OCR language. Performs OCR, reading documents of the Spanish (español, castellano) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Spanish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Spanish' from https://www.nuget.org/packages/IronOcr.Languages.Spanish/ to your Visual Studio project.<br />
            Alternatively download the "Spanish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SpanishFast">
            <summary>
            Spanish  OCR language. Performs OCR, reading documents of the Spanish (español, castellano) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Spanish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Spanish' from https://www.nuget.org/packages/IronOcr.Languages.Spanish/ to your Visual Studio project.<br />
            Alternatively download the "Spanish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SpanishOld">
            <summary>
            Spanish Old  OCR language. Performs OCR, reading documents of the Spanish Old (español, castellano) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Spanish Old uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Spanish' from https://www.nuget.org/packages/IronOcr.Languages.Spanish/ to your Visual Studio project.<br />
            Alternatively download the "Spanish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SpanishOldBest">
            <summary>
            Spanish Old  OCR language. Performs OCR, reading documents of the Spanish Old (español, castellano) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Spanish Old uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Spanish' from https://www.nuget.org/packages/IronOcr.Languages.Spanish/ to your Visual Studio project.<br />
            Alternatively download the "Spanish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SpanishOldFast">
            <summary>
            Spanish Old  OCR language. Performs OCR, reading documents of the Spanish Old (español, castellano) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Spanish Old uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Spanish' from https://www.nuget.org/packages/IronOcr.Languages.Spanish/ to your Visual Studio project.<br />
            Alternatively download the "Spanish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Albanian">
            <summary>
            Albanian  OCR language. Performs OCR, reading documents of the Albanian (gjuha shqipe) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Albanian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Albanian' from https://www.nuget.org/packages/IronOcr.Languages.Albanian/ to your Visual Studio project.<br />
            Alternatively download the "Albanian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AlbanianBest">
            <summary>
            Albanian  OCR language. Performs OCR, reading documents of the Albanian (gjuha shqipe) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Albanian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Albanian' from https://www.nuget.org/packages/IronOcr.Languages.Albanian/ to your Visual Studio project.<br />
            Alternatively download the "Albanian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AlbanianFast">
            <summary>
            Albanian  OCR language. Performs OCR, reading documents of the Albanian (gjuha shqipe) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Albanian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Albanian' from https://www.nuget.org/packages/IronOcr.Languages.Albanian/ to your Visual Studio project.<br />
            Alternatively download the "Albanian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Serbian">
            <summary>
            Serbian  OCR language. Performs OCR, reading documents of the Serbian (српски језик) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Serbian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Serbian' from https://www.nuget.org/packages/IronOcr.Languages.Serbian/ to your Visual Studio project.<br />
            Alternatively download the "Serbian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SerbianBest">
            <summary>
            Serbian  OCR language. Performs OCR, reading documents of the Serbian (српски језик) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Serbian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Serbian' from https://www.nuget.org/packages/IronOcr.Languages.Serbian/ to your Visual Studio project.<br />
            Alternatively download the "Serbian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SerbianFast">
            <summary>
            Serbian  OCR language. Performs OCR, reading documents of the Serbian (српски језик) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Serbian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Serbian' from https://www.nuget.org/packages/IronOcr.Languages.Serbian/ to your Visual Studio project.<br />
            Alternatively download the "Serbian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SerbianLatin">
            <summary>
            Serbian Latin  OCR language. Performs OCR, reading documents of the Serbian (српски језик) language , using the Latin alphabet (abc...), with an understanding of spelling and linguistic context. 
            <para>This Default variant of Serbian Latin uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Serbian' from https://www.nuget.org/packages/IronOcr.Languages.Serbian/ to your Visual Studio project.<br />
            Alternatively download the "Serbian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SerbianLatinBest">
            <summary>
            Serbian Latin  OCR language. Performs OCR, reading documents of the Serbian (српски језик) language , using the Latin alphabet (abc...), with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Serbian Latin uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Serbian' from https://www.nuget.org/packages/IronOcr.Languages.Serbian/ to your Visual Studio project.<br />
            Alternatively download the "Serbian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SerbianLatinFast">
            <summary>
            Serbian Latin  OCR language. Performs OCR, reading documents of the Serbian (српски језик) language , using the Latin alphabet (abc...), with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Serbian Latin uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Serbian' from https://www.nuget.org/packages/IronOcr.Languages.Serbian/ to your Visual Studio project.<br />
            Alternatively download the "Serbian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Sundanese">
            <summary>
            Sundanese  OCR language. Performs OCR, reading documents of the Sundanese (Basa Sunda) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Sundanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sundanese' from https://www.nuget.org/packages/IronOcr.Languages.Sundanese/ to your Visual Studio project.<br />
            Alternatively download the "Sundanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SundaneseBest">
            <summary>
            Sundanese  OCR language. Performs OCR, reading documents of the Sundanese (Basa Sunda) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Sundanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sundanese' from https://www.nuget.org/packages/IronOcr.Languages.Sundanese/ to your Visual Studio project.<br />
            Alternatively download the "Sundanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SundaneseFast">
            <summary>
            Sundanese  OCR language. Performs OCR, reading documents of the Sundanese (Basa Sunda) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Sundanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sundanese' from https://www.nuget.org/packages/IronOcr.Languages.Sundanese/ to your Visual Studio project.<br />
            Alternatively download the "Sundanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Swahili">
            <summary>
            Swahili  OCR language. Performs OCR, reading documents of the Swahili (Kiswahili) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Swahili uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Swahili' from https://www.nuget.org/packages/IronOcr.Languages.Swahili/ to your Visual Studio project.<br />
            Alternatively download the "Swahili.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SwahiliBest">
            <summary>
            Swahili  OCR language. Performs OCR, reading documents of the Swahili (Kiswahili) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Swahili uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Swahili' from https://www.nuget.org/packages/IronOcr.Languages.Swahili/ to your Visual Studio project.<br />
            Alternatively download the "Swahili.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SwahiliFast">
            <summary>
            Swahili  OCR language. Performs OCR, reading documents of the Swahili (Kiswahili) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Swahili uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Swahili' from https://www.nuget.org/packages/IronOcr.Languages.Swahili/ to your Visual Studio project.<br />
            Alternatively download the "Swahili.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Swedish">
            <summary>
            Swedish  OCR language. Performs OCR, reading documents of the Swedish (Svenska) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Swedish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Swedish' from https://www.nuget.org/packages/IronOcr.Languages.Swedish/ to your Visual Studio project.<br />
            Alternatively download the "Swedish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SwedishBest">
            <summary>
            Swedish  OCR language. Performs OCR, reading documents of the Swedish (Svenska) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Swedish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Swedish' from https://www.nuget.org/packages/IronOcr.Languages.Swedish/ to your Visual Studio project.<br />
            Alternatively download the "Swedish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SwedishFast">
            <summary>
            Swedish  OCR language. Performs OCR, reading documents of the Swedish (Svenska) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Swedish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Swedish' from https://www.nuget.org/packages/IronOcr.Languages.Swedish/ to your Visual Studio project.<br />
            Alternatively download the "Swedish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Syriac">
            <summary>
            Syriac  OCR language. Performs OCR, reading documents of the Syriac (Syrian, Syriac Aramaic,ܠܫܢܐ ܣܘܪܝܝܐ‎, Leššānā Suryāyā) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Syriac uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Syriac' from https://www.nuget.org/packages/IronOcr.Languages.Syriac/ to your Visual Studio project.<br />
            Alternatively download the "Syriac.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SyriacBest">
            <summary>
            Syriac  OCR language. Performs OCR, reading documents of the Syriac (Syrian, Syriac Aramaic,ܠܫܢܐ ܣܘܪܝܝܐ‎, Leššānā Suryāyā) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Syriac uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Syriac' from https://www.nuget.org/packages/IronOcr.Languages.Syriac/ to your Visual Studio project.<br />
            Alternatively download the "Syriac.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SyriacFast">
            <summary>
            Syriac  OCR language. Performs OCR, reading documents of the Syriac (Syrian, Syriac Aramaic,ܠܫܢܐ ܣܘܪܝܝܐ‎, Leššānā Suryāyā) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Syriac uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Syriac' from https://www.nuget.org/packages/IronOcr.Languages.Syriac/ to your Visual Studio project.<br />
            Alternatively download the "Syriac.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SyriacAlphabet">
            <summary>
            Syriac Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Syriac Alphabet (Syrian, Syriac Aramaic,ܠܫܢܐ ܣܘܪܝܝܐ‎, Leššānā Suryāyā) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Syriac Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Syriac' from https://www.nuget.org/packages/IronOcr.Languages.Syriac/ to your Visual Studio project.<br />
            Alternatively download the "Syriac.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SyriacAlphabetBest">
            <summary>
            Syriac Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Syriac Alphabet (Syrian, Syriac Aramaic,ܠܫܢܐ ܣܘܪܝܝܐ‎, Leššānā Suryāyā) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Syriac Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Syriac' from https://www.nuget.org/packages/IronOcr.Languages.Syriac/ to your Visual Studio project.<br />
            Alternatively download the "Syriac.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SyriacAlphabetFast">
            <summary>
            Syriac Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Syriac Alphabet (Syrian, Syriac Aramaic,ܠܫܢܐ ܣܘܪܝܝܐ‎, Leššānā Suryāyā) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Syriac Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Syriac' from https://www.nuget.org/packages/IronOcr.Languages.Syriac/ to your Visual Studio project.<br />
            Alternatively download the "Syriac.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Tamil">
            <summary>
            Tamil  OCR language. Performs OCR, reading documents of the Tamil (தமிழ்) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Tamil uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tamil' from https://www.nuget.org/packages/IronOcr.Languages.Tamil/ to your Visual Studio project.<br />
            Alternatively download the "Tamil.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TamilBest">
            <summary>
            Tamil  OCR language. Performs OCR, reading documents of the Tamil (தமிழ்) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Tamil uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tamil' from https://www.nuget.org/packages/IronOcr.Languages.Tamil/ to your Visual Studio project.<br />
            Alternatively download the "Tamil.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TamilFast">
            <summary>
            Tamil  OCR language. Performs OCR, reading documents of the Tamil (தமிழ்) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Tamil uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tamil' from https://www.nuget.org/packages/IronOcr.Languages.Tamil/ to your Visual Studio project.<br />
            Alternatively download the "Tamil.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TamilAlphabet">
            <summary>
            Tamil Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Tamil Alphabet (தமிழ்) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Tamil Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tamil' from https://www.nuget.org/packages/IronOcr.Languages.Tamil/ to your Visual Studio project.<br />
            Alternatively download the "Tamil.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TamilAlphabetBest">
            <summary>
            Tamil Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Tamil Alphabet (தமிழ்) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Tamil Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tamil' from https://www.nuget.org/packages/IronOcr.Languages.Tamil/ to your Visual Studio project.<br />
            Alternatively download the "Tamil.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TamilAlphabetFast">
            <summary>
            Tamil Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Tamil Alphabet (தமிழ்) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Tamil Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tamil' from https://www.nuget.org/packages/IronOcr.Languages.Tamil/ to your Visual Studio project.<br />
            Alternatively download the "Tamil.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Tatar">
            <summary>
            Tatar  OCR language. Performs OCR, reading documents of the Tatar (татар теле, tatar tele) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Tatar uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tatar' from https://www.nuget.org/packages/IronOcr.Languages.Tatar/ to your Visual Studio project.<br />
            Alternatively download the "Tatar.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TatarBest">
            <summary>
            Tatar  OCR language. Performs OCR, reading documents of the Tatar (татар теле, tatar tele) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Tatar uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tatar' from https://www.nuget.org/packages/IronOcr.Languages.Tatar/ to your Visual Studio project.<br />
            Alternatively download the "Tatar.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TatarFast">
            <summary>
            Tatar  OCR language. Performs OCR, reading documents of the Tatar (татар теле, tatar tele) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Tatar uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tatar' from https://www.nuget.org/packages/IronOcr.Languages.Tatar/ to your Visual Studio project.<br />
            Alternatively download the "Tatar.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Telugu">
            <summary>
            Telugu  OCR language. Performs OCR, reading documents of the Telugu (తెలుగు) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Telugu uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Telugu' from https://www.nuget.org/packages/IronOcr.Languages.Telugu/ to your Visual Studio project.<br />
            Alternatively download the "Telugu.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TeluguBest">
            <summary>
            Telugu  OCR language. Performs OCR, reading documents of the Telugu (తెలుగు) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Telugu uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Telugu' from https://www.nuget.org/packages/IronOcr.Languages.Telugu/ to your Visual Studio project.<br />
            Alternatively download the "Telugu.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TeluguFast">
            <summary>
            Telugu  OCR language. Performs OCR, reading documents of the Telugu (తెలుగు) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Telugu uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Telugu' from https://www.nuget.org/packages/IronOcr.Languages.Telugu/ to your Visual Studio project.<br />
            Alternatively download the "Telugu.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TeluguAlphabet">
            <summary>
            Telugu Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Telugu Alphabet (తెలుగు) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Telugu Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Telugu' from https://www.nuget.org/packages/IronOcr.Languages.Telugu/ to your Visual Studio project.<br />
            Alternatively download the "Telugu.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TeluguAlphabetBest">
            <summary>
            Telugu Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Telugu Alphabet (తెలుగు) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Telugu Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Telugu' from https://www.nuget.org/packages/IronOcr.Languages.Telugu/ to your Visual Studio project.<br />
            Alternatively download the "Telugu.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TeluguAlphabetFast">
            <summary>
            Telugu Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Telugu Alphabet (తెలుగు) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Telugu Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Telugu' from https://www.nuget.org/packages/IronOcr.Languages.Telugu/ to your Visual Studio project.<br />
            Alternatively download the "Telugu.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Tajik">
            <summary>
            Tajik  OCR language. Performs OCR, reading documents of the Tajik (тоҷикӣ, toğikī, تاجیکی‎) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Tajik uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tajik' from https://www.nuget.org/packages/IronOcr.Languages.Tajik/ to your Visual Studio project.<br />
            Alternatively download the "Tajik.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TajikBest">
            <summary>
            Tajik  OCR language. Performs OCR, reading documents of the Tajik (тоҷикӣ, toğikī, تاجیکی‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Tajik uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tajik' from https://www.nuget.org/packages/IronOcr.Languages.Tajik/ to your Visual Studio project.<br />
            Alternatively download the "Tajik.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TajikFast">
            <summary>
            Tajik  OCR language. Performs OCR, reading documents of the Tajik (тоҷикӣ, toğikī, تاجیکی‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Tajik uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tajik' from https://www.nuget.org/packages/IronOcr.Languages.Tajik/ to your Visual Studio project.<br />
            Alternatively download the "Tajik.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Tagalog">
            <summary>
            Tagalog  OCR language. Performs OCR, reading documents of the Tagalog (Wikang Tagalog, ᜏᜒᜃᜅ᜔ ᜆᜄᜎᜓᜄ᜔) language with an understanding of spelling and linguistic context. 
            <para>This Tagalog OCR language pack  uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tagalog' from https://www.nuget.org/packages/IronOcr.Languages.Tagalog/ to your Visual Studio project.<br />
            Alternatively download the "Tagalog.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Thai">
            <summary>
            Thai  OCR language. Performs OCR, reading documents of the Thai (ไทย) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Thai uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Thai' from https://www.nuget.org/packages/IronOcr.Languages.Thai/ to your Visual Studio project.<br />
            Alternatively download the "Thai.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ThaiBest">
            <summary>
            Thai  OCR language. Performs OCR, reading documents of the Thai (ไทย) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Thai uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Thai' from https://www.nuget.org/packages/IronOcr.Languages.Thai/ to your Visual Studio project.<br />
            Alternatively download the "Thai.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ThaiFast">
            <summary>
            Thai  OCR language. Performs OCR, reading documents of the Thai (ไทย) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Thai uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Thai' from https://www.nuget.org/packages/IronOcr.Languages.Thai/ to your Visual Studio project.<br />
            Alternatively download the "Thai.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ThaanaAlphabet">
            <summary>
            Thaana Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Thaana Alphabet (Taana , Tāna , ތާނަ‎) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Thaana Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Thaana' from https://www.nuget.org/packages/IronOcr.Languages.Thaana/ to your Visual Studio project.<br />
            Alternatively download the "Thaana.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ThaanaAlphabetBest">
            <summary>
            Thaana Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Thaana Alphabet (Taana , Tāna , ތާނަ‎) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Thaana Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Thaana' from https://www.nuget.org/packages/IronOcr.Languages.Thaana/ to your Visual Studio project.<br />
            Alternatively download the "Thaana.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ThaanaAlphabetFast">
            <summary>
            Thaana Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Thaana Alphabet (Taana , Tāna , ތާނަ‎) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Thaana Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Thaana' from https://www.nuget.org/packages/IronOcr.Languages.Thaana/ to your Visual Studio project.<br />
            Alternatively download the "Thaana.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ThaiAlphabet">
            <summary>
            Thai Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Thai Alphabet (ไทย) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Thai Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Thai' from https://www.nuget.org/packages/IronOcr.Languages.Thai/ to your Visual Studio project.<br />
            Alternatively download the "Thai.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ThaiAlphabetBest">
            <summary>
            Thai Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Thai Alphabet (ไทย) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Thai Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Thai' from https://www.nuget.org/packages/IronOcr.Languages.Thai/ to your Visual Studio project.<br />
            Alternatively download the "Thai.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ThaiAlphabetFast">
            <summary>
            Thai Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Thai Alphabet (ไทย) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Thai Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Thai' from https://www.nuget.org/packages/IronOcr.Languages.Thai/ to your Visual Studio project.<br />
            Alternatively download the "Thai.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TibetanAlphabet">
            <summary>
            Tibetan Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Tibetan Alphabet (Tibetan Standard, Tibetan, Central ཡིག་) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Tibetan Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tibetan' from https://www.nuget.org/packages/IronOcr.Languages.Tibetan/ to your Visual Studio project.<br />
            Alternatively download the "Tibetan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TibetanAlphabetBest">
            <summary>
            Tibetan Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Tibetan Alphabet (Tibetan Standard, Tibetan, Central ཡིག་) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Tibetan Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tibetan' from https://www.nuget.org/packages/IronOcr.Languages.Tibetan/ to your Visual Studio project.<br />
            Alternatively download the "Tibetan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TibetanAlphabetFast">
            <summary>
            Tibetan Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Tibetan Alphabet (Tibetan Standard, Tibetan, Central ཡིག་) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Tibetan Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tibetan' from https://www.nuget.org/packages/IronOcr.Languages.Tibetan/ to your Visual Studio project.<br />
            Alternatively download the "Tibetan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Tigrinya">
            <summary>
            Tigrinya  OCR language. Performs OCR, reading documents of the Tigrinya (ትግርኛ) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Tigrinya uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tigrinya' from https://www.nuget.org/packages/IronOcr.Languages.Tigrinya/ to your Visual Studio project.<br />
            Alternatively download the "Tigrinya.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TigrinyaBest">
            <summary>
            Tigrinya  OCR language. Performs OCR, reading documents of the Tigrinya (ትግርኛ) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Tigrinya uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tigrinya' from https://www.nuget.org/packages/IronOcr.Languages.Tigrinya/ to your Visual Studio project.<br />
            Alternatively download the "Tigrinya.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TigrinyaFast">
            <summary>
            Tigrinya  OCR language. Performs OCR, reading documents of the Tigrinya (ትግርኛ) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Tigrinya uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tigrinya' from https://www.nuget.org/packages/IronOcr.Languages.Tigrinya/ to your Visual Studio project.<br />
            Alternatively download the "Tigrinya.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Tonga">
            <summary>
            Tonga  OCR language. Performs OCR, reading documents of the Tonga (faka Tonga) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Tonga uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tonga' from https://www.nuget.org/packages/IronOcr.Languages.Tonga/ to your Visual Studio project.<br />
            Alternatively download the "Tonga.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TongaBest">
            <summary>
            Tonga  OCR language. Performs OCR, reading documents of the Tonga (faka Tonga) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Tonga uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tonga' from https://www.nuget.org/packages/IronOcr.Languages.Tonga/ to your Visual Studio project.<br />
            Alternatively download the "Tonga.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TongaFast">
            <summary>
            Tonga  OCR language. Performs OCR, reading documents of the Tonga (faka Tonga) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Tonga uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tonga' from https://www.nuget.org/packages/IronOcr.Languages.Tonga/ to your Visual Studio project.<br />
            Alternatively download the "Tonga.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Turkish">
            <summary>
            Turkish  OCR language. Performs OCR, reading documents of the Turkish (Türkçe) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Turkish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Turkish' from https://www.nuget.org/packages/IronOcr.Languages.Turkish/ to your Visual Studio project.<br />
            Alternatively download the "Turkish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TurkishBest">
            <summary>
            Turkish  OCR language. Performs OCR, reading documents of the Turkish (Türkçe) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Turkish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Turkish' from https://www.nuget.org/packages/IronOcr.Languages.Turkish/ to your Visual Studio project.<br />
            Alternatively download the "Turkish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TurkishFast">
            <summary>
            Turkish  OCR language. Performs OCR, reading documents of the Turkish (Türkçe) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Turkish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Turkish' from https://www.nuget.org/packages/IronOcr.Languages.Turkish/ to your Visual Studio project.<br />
            Alternatively download the "Turkish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Uyghur">
            <summary>
            Uyghur  OCR language. Performs OCR, reading documents of the Uyghur (Uyƣurqə, ئۇيغۇرچە‎) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Uyghur uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Uyghur' from https://www.nuget.org/packages/IronOcr.Languages.Uyghur/ to your Visual Studio project.<br />
            Alternatively download the "Uyghur.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UyghurBest">
            <summary>
            Uyghur  OCR language. Performs OCR, reading documents of the Uyghur (Uyƣurqə, ئۇيغۇرچە‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Uyghur uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Uyghur' from https://www.nuget.org/packages/IronOcr.Languages.Uyghur/ to your Visual Studio project.<br />
            Alternatively download the "Uyghur.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UyghurFast">
            <summary>
            Uyghur  OCR language. Performs OCR, reading documents of the Uyghur (Uyƣurqə, ئۇيغۇرچە‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Uyghur uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Uyghur' from https://www.nuget.org/packages/IronOcr.Languages.Uyghur/ to your Visual Studio project.<br />
            Alternatively download the "Uyghur.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Ukrainian">
            <summary>
            Ukrainian  OCR language. Performs OCR, reading documents of the Ukrainian (українська мова) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Ukrainian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Ukrainian' from https://www.nuget.org/packages/IronOcr.Languages.Ukrainian/ to your Visual Studio project.<br />
            Alternatively download the "Ukrainian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UkrainianBest">
            <summary>
            Ukrainian  OCR language. Performs OCR, reading documents of the Ukrainian (українська мова) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Ukrainian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Ukrainian' from https://www.nuget.org/packages/IronOcr.Languages.Ukrainian/ to your Visual Studio project.<br />
            Alternatively download the "Ukrainian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UkrainianFast">
            <summary>
            Ukrainian  OCR language. Performs OCR, reading documents of the Ukrainian (українська мова) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Ukrainian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Ukrainian' from https://www.nuget.org/packages/IronOcr.Languages.Ukrainian/ to your Visual Studio project.<br />
            Alternatively download the "Ukrainian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Urdu">
            <summary>
            Urdu  OCR language. Performs OCR, reading documents of the Urdu (اردو) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Urdu uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Urdu' from https://www.nuget.org/packages/IronOcr.Languages.Urdu/ to your Visual Studio project.<br />
            Alternatively download the "Urdu.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UrduBest">
            <summary>
            Urdu  OCR language. Performs OCR, reading documents of the Urdu (اردو) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Urdu uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Urdu' from https://www.nuget.org/packages/IronOcr.Languages.Urdu/ to your Visual Studio project.<br />
            Alternatively download the "Urdu.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UrduFast">
            <summary>
            Urdu  OCR language. Performs OCR, reading documents of the Urdu (اردو) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Urdu uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Urdu' from https://www.nuget.org/packages/IronOcr.Languages.Urdu/ to your Visual Studio project.<br />
            Alternatively download the "Urdu.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Uzbek">
            <summary>
            Uzbek  OCR language. Performs OCR, reading documents of the Uzbek (O‘zbek, Ўзбек, أۇزبېك‎) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Uzbek uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Uzbek' from https://www.nuget.org/packages/IronOcr.Languages.Uzbek/ to your Visual Studio project.<br />
            Alternatively download the "Uzbek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UzbekBest">
            <summary>
            Uzbek  OCR language. Performs OCR, reading documents of the Uzbek (O‘zbek, Ўзбек, أۇزبېك‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Uzbek uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Uzbek' from https://www.nuget.org/packages/IronOcr.Languages.Uzbek/ to your Visual Studio project.<br />
            Alternatively download the "Uzbek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UzbekFast">
            <summary>
            Uzbek  OCR language. Performs OCR, reading documents of the Uzbek (O‘zbek, Ўзбек, أۇزبېك‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Uzbek uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Uzbek' from https://www.nuget.org/packages/IronOcr.Languages.Uzbek/ to your Visual Studio project.<br />
            Alternatively download the "Uzbek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UzbekCyrillic">
            <summary>
            Uzbek Cyrillic  OCR language. Performs OCR, reading documents of the Uzbek (O‘zbek, Ўзбек, أۇزبېك‎) language ,using the Cyrillic alphabet, with an understanding of spelling and linguistic context. 
            <para>This Default variant of Uzbek Cyrillic uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Uzbek' from https://www.nuget.org/packages/IronOcr.Languages.Uzbek/ to your Visual Studio project.<br />
            Alternatively download the "Uzbek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UzbekCyrillicBest">
            <summary>
            Uzbek Cyrillic  OCR language. Performs OCR, reading documents of the Uzbek (O‘zbek, Ўзбек, أۇزبېك‎) language ,using the Cyrillic alphabet, with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Uzbek Cyrillic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Uzbek' from https://www.nuget.org/packages/IronOcr.Languages.Uzbek/ to your Visual Studio project.<br />
            Alternatively download the "Uzbek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UzbekCyrillicFast">
            <summary>
            Uzbek Cyrillic  OCR language. Performs OCR, reading documents of the Uzbek (O‘zbek, Ўзбек, أۇزبېك‎) language ,using the Cyrillic alphabet, with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Uzbek Cyrillic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Uzbek' from https://www.nuget.org/packages/IronOcr.Languages.Uzbek/ to your Visual Studio project.<br />
            Alternatively download the "Uzbek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Vietnamese">
            <summary>
            Vietnamese  OCR language. Performs OCR, reading documents of the Vietnamese (Tiếng Việt) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Vietnamese uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Vietnamese' from https://www.nuget.org/packages/IronOcr.Languages.Vietnamese/ to your Visual Studio project.<br />
            Alternatively download the "Vietnamese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.VietnameseBest">
            <summary>
            Vietnamese  OCR language. Performs OCR, reading documents of the Vietnamese (Tiếng Việt) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Vietnamese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Vietnamese' from https://www.nuget.org/packages/IronOcr.Languages.Vietnamese/ to your Visual Studio project.<br />
            Alternatively download the "Vietnamese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.VietnameseFast">
            <summary>
            Vietnamese  OCR language. Performs OCR, reading documents of the Vietnamese (Tiếng Việt) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Vietnamese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Vietnamese' from https://www.nuget.org/packages/IronOcr.Languages.Vietnamese/ to your Visual Studio project.<br />
            Alternatively download the "Vietnamese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.VietnameseAlphabet">
            <summary>
            Vietnamese Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Vietnamese Alphabet (Tiếng Việt) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Vietnamese Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Vietnamese' from https://www.nuget.org/packages/IronOcr.Languages.Vietnamese/ to your Visual Studio project.<br />
            Alternatively download the "Vietnamese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.VietnameseAlphabetBest">
            <summary>
            Vietnamese Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Vietnamese Alphabet (Tiếng Việt) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Vietnamese Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Vietnamese' from https://www.nuget.org/packages/IronOcr.Languages.Vietnamese/ to your Visual Studio project.<br />
            Alternatively download the "Vietnamese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.VietnameseAlphabetFast">
            <summary>
            Vietnamese Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Vietnamese Alphabet (Tiếng Việt) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Vietnamese Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Vietnamese' from https://www.nuget.org/packages/IronOcr.Languages.Vietnamese/ to your Visual Studio project.<br />
            Alternatively download the "Vietnamese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Yiddish">
            <summary>
            Yiddish  OCR language. Performs OCR, reading documents of the Yiddish (ייִדיש) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Yiddish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Yiddish' from https://www.nuget.org/packages/IronOcr.Languages.Yiddish/ to your Visual Studio project.<br />
            Alternatively download the "Yiddish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.YiddishBest">
            <summary>
            Yiddish  OCR language. Performs OCR, reading documents of the Yiddish (ייִדיש) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Yiddish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Yiddish' from https://www.nuget.org/packages/IronOcr.Languages.Yiddish/ to your Visual Studio project.<br />
            Alternatively download the "Yiddish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.YiddishFast">
            <summary>
            Yiddish  OCR language. Performs OCR, reading documents of the Yiddish (ייִדיש) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Yiddish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Yiddish' from https://www.nuget.org/packages/IronOcr.Languages.Yiddish/ to your Visual Studio project.<br />
            Alternatively download the "Yiddish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Yoruba">
            <summary>
            Yoruba  OCR language. Performs OCR, reading documents of the Yoruba (Yorùbá) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Yoruba uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Yoruba' from https://www.nuget.org/packages/IronOcr.Languages.Yoruba/ to your Visual Studio project.<br />
            Alternatively download the "Yoruba.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.YorubaBest">
            <summary>
            Yoruba  OCR language. Performs OCR, reading documents of the Yoruba (Yorùbá) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Yoruba uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Yoruba' from https://www.nuget.org/packages/IronOcr.Languages.Yoruba/ to your Visual Studio project.<br />
            Alternatively download the "Yoruba.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.YorubaFast">
            <summary>
            Yoruba  OCR language. Performs OCR, reading documents of the Yoruba (Yorùbá) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Yoruba uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Yoruba' from https://www.nuget.org/packages/IronOcr.Languages.Yoruba/ to your Visual Studio project.<br />
            Alternatively download the "Yoruba.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Custom">
            <summary>
             A custom .traineddata language file is in use.  Use the <see cref="M:IronOcr.IronTesseract.UseCustomTesseractLanguageFile(System.String)" /> method to achieve this state.
            </summary>
        </member>
        <member name="T:IronOcr.OcrInput">
            <summary>
                <see cref="T:IronOcr.OcrInput" /> provides a robust class for preparing one or more Image Files, PDFs, IronSoftware.Drawing.AnyBitmap, SixLabors.ImageSharp.Image, System.Drawing.Bitmap, other famous image library Objects, Streams and Binary Image data for OCR.
            Instances of <see cref="T:IronOcr.OcrInput" />  can be read by the <see cref="T:IronOcr.IronTesseract" /> class.
            <para>We recognise that much of the quality of  OCR results depends on preparing images to be read.  This class allows developers to enhance their scanned documents provide faster, more accurate OCR results using filters such as: <see cref="M:IronOcr.OcrInput.EnhanceResolution(System.Int32)" />, <see cref="M:IronOcr.OcrInput.DeNoise(System.Boolean)" />, <see cref="M:IronOcr.OcrInput.ToGrayScale" />, <see cref="M:IronOcr.OcrInput.Deskew(IronOcr.OcrLanguage,System.Int32,IronOcr.OrientationConfidence)" />,  <see cref="M:IronOcr.OcrInput.Rotate(System.Double)" /> and  <see cref="M:IronOcr.OcrInput.Sharpen" />.</para><para>Supports for multi-paged OCR input. </para></summary>
        </member>
        <member name="P:IronOcr.OcrInput.SkipDisposal">
            <summary>
            Skips disposal to ensure pix memory still being used by other OcrInput objects is still valid
            </summary>
            <remarks>Set to True when making an internal copy of another OcrInput object which shares PixPlus with this object</remarks>
            <seealso cref="M:IronOcr.OcrInput.Split" />
        </member>
        <member name="F:IronOcr.OcrInput.TargetDPI">
            <summary>
            The resolution that low resolution images will be enhanced to. To disable upscaling, set this to 0 (will affect read quality).
            <para>TargetDPI also determines the resolution at which PDF documents will be sampled.</para></summary>
        </member>
        <member name="T:IronOcr.OcrInput.ImageType">
            <summary>
            Type of Image to save as.
            Common examples are <see cref="F:IronOcr.OcrInput.ImageType.PNG" />, <see cref="F:IronOcr.OcrInput.ImageType.JPG" />, and <see cref="F:IronOcr.OcrInput.ImageType.GIF" />.
            </summary>
        </member>
        <member name="F:IronOcr.OcrInput.ImageType.PNG">
            <summary>
            PNG is short for Portable Network Graphic, a type of raster image file.
            </summary>
        </member>
        <member name="F:IronOcr.OcrInput.ImageType.JPG">
            <summary>
            JPG is a digital image format which contains compressed image data.
            </summary>
        </member>
        <member name="F:IronOcr.OcrInput.ImageType.GIF">
            <summary>
            GIF stands for Graphics Interchange Format. GIF is a raster file format designed for relatively basic images that appear mainly on the internet. Each file can support up to 8 bits per pixel and can contain 256 indexed colors.
            </summary>
        </member>
        <member name="F:IronOcr.OcrInput.ImageType.TIFF">
            <summary>
            TIFF stands for Tag Image File Format, TIFF is a file used to store raster graphics and image information.
            </summary>
        </member>
        <member name="F:IronOcr.OcrInput.ImageType.BMP">
            <summary>
            A BMP file contains uncompressed data, making it ideal for storing and displaying high-quality digital images.
            </summary>
        </member>
        <member name="P:IronOcr.OcrInput.Title">
            <summary>
            A title for the OcrInput document. This is relevant as it becomes metadata when exporting searchable PDFs and HOCR files from <see cref="T:IronOcr.IronTesseract" /> results.
            <para>See <see cref="M:IronOcr.OcrResult.SaveAsSearchablePdf(System.String)" /> and <see cref="M:IronOcr.OcrResult.SaveAsHocrFile(System.String)" /></para></summary>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Object[])">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object to which images and PDF pages may be added.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Inputs">Any number of images as File Paths, Streams, Byte Arrays, <see cref="T:IronSoftware.Drawing.AnyBitmap" /> and <see cref="T:SixLabors.ImageSharp.Image" />.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.String)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with an Image file or PDF document.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="FilePath">Path to an Image or PDF file.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with an Image file.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="FilePath">Path to an Image or PDF file.</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Optional target DPI for the input content</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with multiple Image files.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="FilePaths">An IEnumerable of paths to  Image or PDF files.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{System.String},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with multiple Image files with a common ContentArea.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="FilePaths">An IEnumerable of paths to  Image or PDF files.</param>
            <param name="ContentArea">Specifies a region of each image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Byte[])">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with an Image file as binary data.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Bytes">Bytes of an Image or PDF file.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Byte[],IronSoftware.Drawing.CropRectangle)">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with an Image file as binary data.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Bytes">Bytes of an Image or PDF file.</param>
            <param name="ContentArea">Specifies a region of each image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{System.Byte[]})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with the binary data of multiple Images with a common ContentArea.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Bytes">An IEnumerable of  byte arrays containing Image or PDF files.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{System.Byte[]},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with the binary data of multiple Images with a common ContentArea.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Bytes">An IEnumerable of  byte arrays containing Image or PDF files.</param>
            <param name="ContentArea">Specifies a region of each image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.IO.Stream)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with  image data as a Stream.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Stream">Steam containing an Image or PDF file.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.IO.Stream,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with  image data as a Stream.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Stream">Steam containing an Image or PDF file.</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{System.IO.Stream})">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with multiple images as Streams.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Streams">Steam containing an Image or PDF file.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{System.IO.Stream},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with multiple images as Streams sharing a common ContentArea.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Streams">Steam containing an Image or PDF file.</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(IronSoftware.Drawing.AnyBitmap)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with a <see cref="T:IronSoftware.Drawing.AnyBitmap" />.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Bitmap">A <see cref="T:IronSoftware.Drawing.AnyBitmap" />.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(IronSoftware.Drawing.AnyBitmap,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with a <see cref="T:IronSoftware.Drawing.AnyBitmap" />.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Bitmap">A <see cref="T:IronSoftware.Drawing.AnyBitmap" />.</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{IronSoftware.Drawing.AnyBitmap})">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with multiple <see cref="T:IronSoftware.Drawing.AnyBitmap" />.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Bitmaps">An IEnumerable of <see cref="T:IronSoftware.Drawing.AnyBitmap" />.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{IronSoftware.Drawing.AnyBitmap},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with multiple <see cref="T:IronSoftware.Drawing.AnyBitmap" /> sharing a common ContentArea.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Bitmaps">An IEnumerable of <see cref="T:IronSoftware.Drawing.AnyBitmap" />.</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(SixLabors.ImageSharp.Image)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with a <see cref="T:SixLabors.ImageSharp.Image" />.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Image">
                <see cref="T:SixLabors.ImageSharp.Image" />
            </param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(SixLabors.ImageSharp.Image,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with a specified region of a <see cref="T:SixLabors.ImageSharp.Image" />.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Image">
                <see cref="T:SixLabors.ImageSharp.Image" />
            </param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{SixLabors.ImageSharp.Image})">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with any number of <see cref="T:SixLabors.ImageSharp.Image" />.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Images">Any Number of <see cref="T:SixLabors.ImageSharp.Image" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{SixLabors.ImageSharp.Image},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with any number of <see cref="T:SixLabors.ImageSharp.Image" /> Image sharing a common ContentArea.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Images">Any Number of <see cref="T:SixLabors.ImageSharp.Image" /></param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(IronSoftware.Drawing.CropRectangle,System.Object[])">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with one or more images sharing a common crop area.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts any number of images as File Paths, Streams, Byte Arrays, <see cref="T:IronSoftware.Drawing.AnyBitmap" />, <see cref="T:SixLabors.ImageSharp.Image" />, System.Drawing.Bitmap, or System.Drawing.Image. Each will become a <see cref="T:IronOcr.OcrInput.Page" />. </para></summary>
            <param name="Inputs">Any number of images as File Paths, Streams, Byte Arrays, <see cref="T:SixLabors.ImageSharp.Image" />, System.Drawing.Bitmap, or System.Drawing.Image.</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdf(System.String,System.Int32,System.String)">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with a PDF.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfPath">File path to the PDF</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdf(System.String,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with a PDF.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfPath">File path to the PDF</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdfPages(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with multiple pages from a PDF.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfPath">File path to the PDF</param>
            <param name="Pages">List which pages of the PDF will be read.  Zero based (first page is number 0)</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdfPage(System.String,System.Int32,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with a single page of a PDF.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfPath">File path to the PDF</param>
            <param name="Page">Which page of the PDF to read.  Zero based (first page is number 0)</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdf(System.Byte[],System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with a PDF as binary data.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfBytes">The PDF document as binary data in memory.</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdfPages(System.Byte[],System.Collections.Generic.IEnumerable{System.Int32},System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with multiple pages from a PDF as binary data.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfBytes">The PDF document as binary data in memory.</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Pages">List which pages of the PDF which will be read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdfPage(System.Byte[],System.Int32,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with a single page from a PDF as binary data.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfBytes">The PDF document as binary data in memory.</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Page">The page number within the PDF to read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdf(System.IO.Stream,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with a PDF as a Stream.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfStream">The PDF document as a <see cref="T:System.IO.Stream" />.</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdfPages(System.IO.Stream,System.Collections.Generic.IEnumerable{System.Int32},System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with multiple selected pages from a PDF as a Stream.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfStream">The PDF document as a <see cref="T:System.IO.Stream" />.</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Pages">The pages of the PDF to read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdfPage(System.IO.Stream,System.Int32,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with a single page from a PDF as a Stream.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfStream">The PDF document as a <see cref="T:System.IO.Stream" />.</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Page">The page number within the PDF to read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdf(System.String,System.Int32,System.String)">
            <summary>
            Adds all pages of a PDF document to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfPath">String file path to the PDF</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdf(System.String,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Adds all pages of a PDF document to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfPath">String file path to the PDF</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdfPage(System.String,System.Int32,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Adds one page of a PDF document to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfPath">String file path to the PDF</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Page">The page number within the PDF to read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdfPages(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Adds selected pages from a PDF document into this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfPath">String file path to the PDF</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Pages,,">The page numbers  within the PDF to read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdf(System.IO.Stream,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Adds all pages of a PDF document to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfStream">
                <see cref="T:System.IO.Stream" />  containing a PDF</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdfPage(System.IO.Stream,System.Int32,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Adds one page of a PDF document to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfStream">
                <see cref="T:System.IO.Stream" />  containing a PDF</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Page">The page number within the PDF to read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdfPages(System.IO.Stream,System.Collections.Generic.IEnumerable{System.Int32},System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Adds selected pages of a PDF document to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfStream">
                <see cref="T:System.IO.Stream" />  containing a PDF</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Pages">The page numbers within the PDF to read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdf(System.Byte[],System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Adds all pages of a PDF document to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfBytes">Binary data of a PDF file</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdfPage(System.Byte[],System.Int32,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Adds one page of a PDF document to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfBytes">Binary data of a PDF file</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Page">The page number within the PDF to read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdfPages(System.Byte[],System.Collections.Generic.IEnumerable{System.Int32},System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Adds selected pages of a PDF document to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfBytes">Binary data of a PDF file</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Pages">The page numbers within the PDF to read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.SaveAsImages(System.String,IronOcr.OcrInput.ImageType)">
            <summary>
            Exports an <see cref="T:IronOcr.OcrInput" /> object as Images
            </summary>
            <param name="Prefix">Will save images at {Prefix}_(page_number).{Extension}. May include a fully qualified file path.</param>
            <param name="Extension">Output file extension in lower-case.</param>
            <returns>Array of saved image file names. Can be multiple if <see cref="T:IronOcr.OcrInput" /> used has multiple pages.</returns>
            <exception cref="T:System.Exception">Throws an exception if there are no pages. See <see cref="T:IronOcr.OcrInput.Page" /></exception>
        </member>
        <member name="M:IronOcr.OcrInput.HighlightTextAndSaveAsImages(IronOcr.IronTesseract,System.String,IronOcr.ResultHighlightType)">
            <summary>
                <para>Based on the <see cref="T:IronOcr.ResultHighlightType" />, will draw red boxes around characters/words/lines/paragraphs detected, and save to a PNG image.</para>
                <para>For best results, perform all filters before calling.</para>
            </summary>
            <param name="tesseract">IronTesseract instance used to scan the OcrInput.</param>
            <param name="filename">File will be saved as : 'filename_page_0.png'. You may use an absolute or relative path.</param>
            <param name="type">Choose whether each box represents a character, word, line, paragraph.</param>
        </member>
        <member name="M:IronOcr.OcrInput.StampCropRectangleAndSaveAs(IronSoftware.Drawing.CropRectangle,IronSoftware.Drawing.Color,System.String,IronOcr.OcrInput.ImageType)">
            <summary>
            Saves a copy of the image with a rectangle applied and to visualize and debug where CropRectangle will be applied when using <see cref="T:IronSoftware.Drawing.CropRectangle" /> on your image.
            </summary>
            <param name="cropRectangle">Use a <see cref="T:IronSoftware.Drawing.CropRectangle" /> to debug the area that will be scanned on an image.</param>
            <param name="rectangleColor">Color of rectangle drawn. Red is recommended for easy contrast.</param>
            <param name="Prefix">Will save images at {Prefix}_(page_number).{Extension}. May include a fully qualified file path.</param>
            <param name="extension">Output file extension in lower-case.</param>
            <returns>Array of saved image file names. Can be multiple if <see cref="T:IronOcr.OcrInput" /> used has multiple pages.</returns>
            <exception cref="T:System.Exception">Throws an exception if there are no pages. See <see cref="T:IronOcr.OcrInput.Page" /></exception>
        </member>
        <member name="M:IronOcr.OcrInput.Dispose(System.Boolean)">
            <summary>
            OcrInput is IDisposable.  For best practice and to avoid memory leaks, remember to dispose, or initialize instances with a "using" statement.
            </summary>
        </member>
        <member name="M:IronOcr.OcrInput.Dispose">
            <summary>
            OcrInput is IDisposable.  For best practice and to avoid memory leaks, remember to dispose, or initialize instances with a "using" statement.
            </summary>
        </member>
        <member name="M:IronOcr.OcrInput.Finalize">
            <summary>
            OcrInput has a safe finaliser that cleans up undisposed native images in memory.
            </summary>
        </member>
        <member name="M:IronOcr.OcrInput.ApplyMultipleFilters(IronOcr.OcrFilters,System.Double,System.Int32,System.Int32,System.Int32,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Apply multiple imaging filters using the specified paramaeters
            </summary>
            <param name="filters">Filters to apply</param>
            <param name="Rotation">Rotation amount. Required when using the Rotation filter. <see cref="F:IronOcr.OcrFilters.Rotate" /></param>
            <param name="MaxDeskewAngle">Optional MaxDeskewAngle amount when using the Deskew filter. Defaults to 45 degrees.<see cref="F:IronOcr.OcrFilters.Deskew" /></param>
            <param name="MaxWidth">Maximum width. Required when using the Scale filter. <see cref="F:IronOcr.OcrFilters.Scale" /></param>
            <param name="MaxHeight">Maximum height. Required when using the Scale filter. <see cref="F:IronOcr.OcrFilters.Scale" /></param>
            <param name="Use3x3">Optional morphology when using the Despeckle (DeNoise), Dilate, or Erode filter. <see cref="F:IronOcr.OcrFilters.DeNoise" />, <see cref="F:IronOcr.OcrFilters.Dilate" />, or <see cref="F:IronOcr.OcrFilters.Erode" /></param>
            <param name="thresholdLimit">Optional Threshold limit (0.0-1.0) to consider for binarization when using the Bradley Adaptive Threshold.</param>
            <exception cref="T:System.ArgumentOutOfRangeException" />
            <remarks>This method serves as an alternative way to apply multiple filters. Filters are applied in what is typically the optimal order.</remarks>
        </member>
        <member name="M:IronOcr.OcrInput.Rotate(System.Double)">
            <summary>
            Rotates images by a number of degrees clockwise. For anti-clockwise, use negative numbers. Also see <see cref="M:IronOcr.OcrInput.Deskew(System.Int32)" /></summary>
            <param name="Degrees">A number of clockwise degrees.</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Binarize">
            <summary>
            This image filter turns every pixel black or white with no middle ground. May Improve OCR performance cases of very low contrast of text to background.
            </summary>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.ToGrayScale">
            <summary>
            This image filter turns every pixel into a shade of grayscale. Unlikely to improve OCR accuracy but may improve speed.
            </summary>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Sharpen">
            <summary>
            Sharpens blurred OCR Documents.  Applies a Gaussian sharpening filter to image.
            </summary>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.ReplaceColor(IronSoftware.Drawing.Color,IronSoftware.Drawing.Color,System.Int32)">
            <summary>
            Replace current color to new color in Image
            </summary>
            <param name="currentColor">Current <see cref="T:IronSoftware.Drawing.Color" /></param>
            <param name="newColor">New <see cref="T:IronSoftware.Drawing.Color" /></param>
            <param name="tolerance">Tolerance Value</param>
            <returns />
        </member>
        <member name="M:IronOcr.OcrInput.Contrast(System.Single)">
            <summary>
            Increases contrast automatically. This filter often improves OCR speed and accuracy in low contrast scans. Flattens Alpha channels to white.
            </summary>
            <param name="amount">
            Amount which is used to adjust contrast. A value of 0 will create an image that is completely gray. A value of 1 leaves the input unchanged.
            <para>Amount values greater than 0 increase contrast making light areas lighter and dark areas darker.</para><para>Amount values less than 0 decrease contrast - decreasing variety of contrast.</para></param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.DeNoise(System.Boolean)">
            <summary>
            Removes digital noise.  This filter should only be used where noise is expected. Flattens Alpha channels to white.
            </summary>
            <param name="use3x3">2x2 is default morphology</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
            <seealso cref="M:IronOcr.OcrInput.Despeckle(System.Boolean)" />
        </member>
        <member name="M:IronOcr.OcrInput.Despeckle(System.Boolean)">
            <summary>
            DeSpeckle as an alias of DeNoise.
            <para>Alias of <see cref="M:IronOcr.OcrInput.DeNoise(System.Boolean)" /> to make this method easily to find in Intensense.</para></summary>
            <param name="use3x3">2x2 is default morphology</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Invert(System.Boolean)">
            <summary>
            Inverts every color. E.g. White becomes black : black becomes white.
            </summary>
            <param name="GrayScale">Optionally remove all color channels and return a GrayScale image.</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Dilate(System.Boolean)">
            <summary>
            Advanced Morphology. Dilation is the opposite of Erosion, instead of shrinking it expands the foreground object.
            <para>Opposite of <see cref="M:IronOcr.OcrInput.Erode(System.Boolean)" />.</para></summary>
            <param name="use3x3">2x2 is default morphology</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Erode(System.Boolean)">
            <summary>
            Advanced Morphology. Erosion is the morphological operation used to diminish the size of the foreground object.
            <para>Opposite of <see cref="M:IronOcr.OcrInput.Erode(System.Boolean)" />.</para></summary>
            <param name="use3x3">2x2 is default morphology</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Open(System.Boolean)">
            <summary>
            Advanced Morphology. 
            <para>Opening is just another name of erosion followed by dilation. It is useful in removing noise.</para></summary>
            <param name="use3x3">2x2 is default morphology</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Close(System.Boolean)">
            <summary>
            Advanced Morphology.
            <para>Closing is reverse of Opening, Dilation followed by Erosion. It is useful in closing small holes inside the foreground objects.</para></summary>
            <param name="use3x3">2x2 is default morphology</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.HoughTransformStraighten(System.Int32)">
            <summary>
            Uses a Hough Transform to rotate and image to the nearest 90 degrees of straightness. This is very useful for OCR because Tesseract tolerance for skewed scans can be as low as 5 degrees.
            <para>A Synonym of <see cref="M:IronOcr.OcrInput.Deskew(System.Int32)" /></para></summary>
            <param name="MaxDeskewAngle">Maximum angle of skew to correct for. Higher values can lead to more opportunity for correction, but may be slower and more prone to error including upside down pages.</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
            <seealso cref="P:IronOcr.OcrResult.Page.Rotation" />
        </member>
        <member name="M:IronOcr.OcrInput.Deskew(System.Int32)">
            <summary>
            Rotates an image so it is the right way up and orthogonal. This is very useful for OCR because Tesseract tolerance for skewed scans can be as low as 5 degrees.
            <para>This also helps when producing searchable PDF documents from IronTesseract because the pages will likely all be the right way up.</para><para>This version uses only  Hough transform to make minor correction. Example:  pages that where  put in a scanner at a slight angle.</para></summary>
            <param name="MaxDeskewAngle">Maximum angle of skew to correct for. Higher values can lead to more opportunity for correction, but may be slower and more prone to error including upside down pages.</param>
            <returns>Returns a boolean result of whether or not IronOCR was able to detect image orientation. True = Deskew was applied. False = Failed to detect image orientation and image remains unchanged.</returns>
            <seealso cref="P:IronOcr.OcrResult.Page.Rotation" />
        </member>
        <member name="M:IronOcr.OcrInput.OrientPagesWithOSD(IronOcr.OcrLanguage,IronOcr.OrientationConfidence)">
            <summary>
            Uses Tesseract "Orientation &amp; Script Detection: to turn OcrInput pages the right way up in multiples of 90 degress.
            </summary>
            <param name="CharacterDetectionLanguage">An <see cref="T:IronOcr.OcrLanguage" /> used to help detect letters and numbers to straighten pages.  If you wish to use multiple languages please use the <see cref="M:IronOcr.OcrInput.Deskew(IronOcr.IronTesseract,System.Int32,IronOcr.OrientationConfidence)" /> overload.</param>
            <param name="Confidence">Optional <see cref="T:IronOcr.OrientationConfidence" /> class used to control and measure OSD by way of confidence thresholds.</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
            <seealso cref="P:IronOcr.OcrResult.Page.Rotation" />
        </member>
        <member name="M:IronOcr.OcrInput.OrientPagesWithOSD(IronOcr.IronTesseract,IronOcr.OrientationConfidence)">
            <param name="TesseractInstance">Reads <see cref="T:IronOcr.OcrLanguage" /> settings from your <see cref="T:IronOcr.IronTesseract" /> instance to help detect letters and numbers to straighten pages.  If you wish to use multiple languages please use the <see cref="M:IronOcr.OcrInput.Deskew(IronOcr.IronTesseract,System.Int32,IronOcr.OrientationConfidence)" /> overload.</param>
            <param name="Confidence">Optional <see cref="T:IronOcr.OrientationConfidence" /> class used to control and measure OSD by way of confidence thresholds.</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
            <seealso cref="P:IronOcr.OcrResult.Page.Rotation" />
        </member>
        <member name="M:IronOcr.OcrInput.Scale(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Scales the OCRInput pages up in size.
            </summary>
            <param name="MaxHeight">Maximum height in pixels.</param>
            <param name="MaxWidth">Maximum width in pixels.</param>
            <param name="ScaleCropArea">Should associated crop areas also be scaled proportionally (recommended true)</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.WithTitle(System.String)">
            <summary>
            Adds a Title to the OcrInput Document.  This title will be used when calling <see cref="M:IronOcr.OcrResult.SaveAsHocrFile(System.String)" /> and <see cref="M:IronOcr.OcrResult.SaveAsSearchablePdf(System.String)" /></summary>
            <param name="Title">The document title as a string.</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Scale(System.Int32,System.Boolean)">
            <summary>
            Scales OCRInput pages proportionally.
            </summary>
            <param name="Percentage">The percentage scale.  100 = no effect.</param>
            <param name="ScaleCropArea">Should associated crop areas also be scaled proportionally (recommended true)</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.EnhanceResolution(System.Int32)">
            <summary>
            Enhances the resolution of low quality images.  This filter is not often needed because <see cref="F:IronOcr.OcrInput.TargetDPI" /> will automatically catch and resolve low resolution inputs.
            <para>May not work for all images if their metadata is corrupted.</para></summary>
            <param name="TargetDPI">The target DPI to resample to.</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.AdaptiveThreshold(System.Nullable{System.Single})">
            <summary>
            Applies Bradley Adaptive Threshold to the image.
            <para>Adaptive thresholding is the method where the threshold value is calculated for smaller regions and therefore, there will be different threshold values for different regions.</para></summary>
            <param name="thresholdLimit">
            Threshold limit (0.0-1.0) to consider for binarization.
            <para>0.0 to consider threshold is completely white</para><para>1.0 to consider threshold is completely black</para></param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Deskew(System.Int32,System.Boolean)">
            <exclude />
        </member>
        <member name="M:IronOcr.OcrInput.Deskew(IronOcr.OcrLanguage,System.Int32,IronOcr.OrientationConfidence)">
            <exclude />
        </member>
        <member name="M:IronOcr.OcrInput.Deskew(IronOcr.IronTesseract,System.Int32,IronOcr.OrientationConfidence)">
            <exclude />
        </member>
        <member name="M:IronOcr.OcrInput.DeepCleanBackgroundNoise">
            <summary>
            Heavy background noise removal.  Only use this filter in case extreme document background noise is known, because this filter will also risk reducing OCR accuracy of clean documents, and is very CPU expensive.
            </summary>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.FindTextRegion(System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Use computer vision to detect regions which contain text elements on each page
            </summary>
            <param name="Scale">(Only used during text region detection) Resolution scale factor. Image width and height will be multiplied by this value.</param>
            <param name="DilationAmount">(Only used during text region detection) Dilation amount, in pixels. Text areas width and height will be increased by this value.</param>
            <param name="Binarize">(Only used during text region detection) True to convert the image to black and white, False otherwise</param>
            <param name="Invert">(Only used during text region detection) True to invert image colors when binarizing, False otherwise</param>
        </member>
        <member name="M:IronOcr.OcrInput.FindMultipleTextRegions(System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Use computer vision to detect areas which contain text elements and divide the input into separate images based on text regions.
            </summary>
            <returns>List of rectangles which contain text elements</returns>
            <param name="Scale">(Only used during text region detection) Resolution scale factor. Image width and height will be multiplied by this value.</param>
            <param name="DilationAmount">(Only used during text region detection) Dilation amount, in pixels. Text areas width and height will be increased by this value.</param>
            <param name="Binarize">(Only used during text region detection) True to convert the image to black and white, False otherwise</param>
            <param name="Invert">(Only used during text region detection) True to invert image colors during binarization, False otherwise</param>
            <remarks>Useful for generating several OCR results from a single image/page</remarks>
        </member>
        <member name="M:IronOcr.OcrInput.PageCount">
            <summary>
            The number of <see cref="T:IronOcr.OcrInput.Page" />s currently present in this <see cref="T:IronOcr.OcrInput" /></summary>
            <returns />
        </member>
        <member name="P:IronOcr.OcrInput.Pages">
            <summary>
            Access to every <see cref="T:IronOcr.OcrInput.Page" /> within this <see cref="T:IronOcr.OcrInput" /></summary>
        </member>
        <member name="T:IronOcr.OcrInput.Page">
            <summary>
            A full page (one image) within an <see cref="T:IronOcr.OcrInput" /> object.
            </summary>
        </member>
        <member name="P:IronOcr.OcrInput.Page.Width">
            <summary>
            Width in Pixels
            </summary>
        </member>
        <member name="P:IronOcr.OcrInput.Page.HorizontalDPI">
            <summary>
            Resolution in DPI on X axis
            </summary>
        </member>
        <member name="P:IronOcr.OcrInput.Page.VerticalDPI">
            <summary>
            Resolution in DPI on Y axis
            </summary>
        </member>
        <member name="P:IronOcr.OcrInput.Page.Height">
            <summary>
            Height in Pixels
            </summary>
        </member>
        <member name="P:IronOcr.OcrInput.Page.Index">
            <summary>
            Zero based page number
            </summary>
        </member>
        <member name="M:IronOcr.OcrInput.Page.Remove">
            <summary>
            Removes a page from this <see cref="T:IronOcr.OcrInput" /></summary>
        </member>
        <member name="P:IronOcr.OcrInput.Page.ContentArea">
            <summary>
             Crop area of this page.  If not null, text will only be read from within the ContentArea rectangle.
            </summary>
        </member>
        <member name="M:IronOcr.OcrInput.Page.ToBitmap">
            <summary>
            Outputs this page as a <see cref="T:IronSoftware.Drawing.AnyBitmap" /></summary>
            <returns>A native bitmap image.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Page.DrawRectangleOnPage(IronSoftware.Drawing.CropRectangle,IronSoftware.Drawing.Color)">
            <summary>
            Draw a Rectangle on a <see cref="T:IronOcr.OcrInput.Page" />.
            </summary>
            <param name="CropRect">Crop Rectangle</param>
            <param name="rectangleColor">Color for pen of rectangle border</param>
            <returns>Bitmap</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Page.GetCropRectangleImage">
            <summary>
            Draw a Rectangle on a <see cref="T:IronOcr.OcrInput.Page" />.
            </summary>
            <returns>Bitmap</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Page.GetTextRegions(System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Use computer vision to detect areas which contain text elements and return a list of rectangles.
            </summary>
            <returns>List of rectangles which contain text elements</returns>
            <param name="Scale">(Only used during text region detection) Resolution scale factor. Image width and height will be multiplied by this value.</param>
            <param name="DilationAmount">(Only used during text region detection) Dilation amount, in pixels. Text areas width and height will be increased by this value.</param>
            <param name="Binarize">(Only used during text region detection) True to convert the image to black and white, False otherwise</param>
            <param name="Invert">(Only used during text region detection) True to invert image colors when binarizing, False otherwise</param>
            <remarks>Useful for generating several OCR results from a single image/page</remarks>
        </member>
        <member name="M:IronOcr.OcrInput.Page.FindTextRegion(System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Use computer vision to detect regions which contain text elements and instruct Tesseract to only search for text within the area in which text was detected.
            </summary>
            <param name="Scale">(Only used during text region detection) Resolution scale factor. Image width and height will be multiplied by this value.</param>
            <param name="DilationAmount">(Only used during text region detection) Dilation amount, in pixels. Text areas width and height will be increased by this value.</param>
            <param name="Binarize">(Only used during text region detection) True to convert the image to black and white, False otherwise</param>
            <param name="Invert">(Only used during text region detection) True to invert image colors when binarizing, False otherwise</param>
            <returns>Rectangle which contains text elements</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Page.FindMultipleTextRegions(System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Use computer vision to detect areas which contain text elements and divide the page into separate images based on text regions.
            </summary>
            <returns>List of rectangles which contain text elements</returns>
            <param name="Scale">(Only used during text region detection) Resolution scale factor. Image width and height will be multiplied by this value.</param>
            <param name="DilationAmount">(Only used during text region detection) Dilation amount, in pixels. Text areas width and height will be increased by this value.</param>
            <param name="Binarize">(Only used during text region detection) True to convert the image to black and white, False otherwise</param>
            <param name="Invert">(Only used during text region detection) True to invert image colors when binarizing, False otherwise</param>
            <returns>A list of pages - one for each text region</returns>
            <remarks>Useful for generating several OCR results from a single image/page</remarks>
        </member>
        <member name="M:IronOcr.OcrInput.Page.SaveAsImage(System.String)">
            <summary>
            Saves this page as a Bitmap file to a specified path.
            <param name="Path">A file path.</param></summary>
        </member>
        <member name="M:IronOcr.OcrInput.Page.SaveAsImage(System.String,IronSoftware.Drawing.AnyBitmap.ImageFormat)">
            <summary>
            Saves this page as an image file of specified format.
            <param name="Path">A file path.</param><param name="Format">The desired image file format.</param></summary>
        </member>
        <member name="M:IronOcr.OcrInput.PdfiumApi.PdfToImage(System.IO.Stream,System.Double,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Remember to dispose me
            </summary>
        </member>
        <member name="M:IronOcr.OcrInput.Split">
            <summary>
            JM: for parallel processing 12-2021
            </summary>
            <remarks>The resources used by these objects will NOT be disposed - please dispose the original object</remarks>
        </member>
        <member name="M:IronOcr.OcrInput.AddRange(IronOcr.OcrInput)">
            <summary>
            Combines 2 instances of <see cref="T:IronOcr.OcrInput" />, appending pages to the end of this OcrInput document.
            </summary>
            <param name="Range">An Ocr Input to be appended to this instance.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddRange(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Adds an IEnumerable of Images to  this <see cref="T:IronOcr.OcrInput" />.
            <para>Supports FilePaths, SixLabors.ImageSharp.Image, IronSoftware.Drawing.AnyBitmap, Streams &amp; ByteArray.</para></summary>
            <param name="Images">Adds an IEnumerable of objects representing images. Supports FilePaths, SixLabors.ImageSharp.Image, IronSoftware.Drawing.AnyBitmap, Streams &amp; byte[].</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddRange(System.Collections.Generic.IEnumerable{System.Object},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds an IEnumerable of Images to this <see cref="T:IronOcr.OcrInput" />.
            <para>Supports FilePaths, SixLabors.ImageSharp.Image, IronSoftware.Drawing.AnyBitmap, Streams &amp; ByteArray.</para></summary>
            <param name="Images">Adds an IEnumerable of objects representing images. Supports FilePaths, SixLabors.ImageSharp.Image, IronSoftware.Drawing.AnyBitmap, Streams &amp; byte[].</param>
            <param name="ContentArea">Specifies a region of the images to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(SixLabors.ImageSharp.Image)">
            <summary>
            Adds a SixLabors.ImageSharp.Image to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="Image">A managed Image object.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(SixLabors.ImageSharp.Image,IronSoftware.Drawing.CropRectangle[])">
            <summary>
            Adds a SixLabors.ImageSharp.Image to this <see cref="T:IronOcr.OcrInput" /> with many content area regions. If an empty array is supplied, will use whole image instead.
            <p>Note: Output PDF of SaveAsSearchablePdf when using multiple Crop Rectangles will generate one page per Rectangle/&gt;</p></summary>
            <param name="Image">A managed Image object.</param>
            <param name="Rectangles">Array of crop rectangles of various content regions.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(IronSoftware.Drawing.AnyBitmap,IronSoftware.Drawing.CropRectangle[])">
            <summary>
            Adds a <see cref="T:IronSoftware.Drawing.AnyBitmap" /> to this <see cref="T:IronOcr.OcrInput" /> with many content area regions. If an empty array is supplied, will use whole image instead.
            <p>Note: Output PDF of SaveAsSearchablePdf when using multiple Crop Rectangles will generate one page per Rectangle/&gt;</p></summary>
            <param name="Bitmap">A managed <see cref="T:IronSoftware.Drawing.AnyBitmap" /> object.</param>
            <param name="Rectangles">Array of crop rectangles of various content regions.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(SixLabors.ImageSharp.Image,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a SixLabors.ImageSharp.Image to this <see cref="T:IronOcr.OcrInput" />.
            Adds a <see cref="T:SixLabors.ImageSharp.Image" /> to  this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="Image">A managed Image object.</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(IronSoftware.Drawing.AnyBitmap)">
            <summary>
            Adds a <see cref="T:IronSoftware.Drawing.AnyBitmap" /> to  this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="Bitmap">A managed <see cref="T:IronSoftware.Drawing.AnyBitmap" /> object.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(IronSoftware.Drawing.AnyBitmap,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a <see cref="T:IronSoftware.Drawing.AnyBitmap" /> to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="Bitmap">A managed <see cref="T:IronSoftware.Drawing.AnyBitmap" /> object.</param>
            <param name="ContentArea">Optionally specifies a region of the bitmap to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(System.String)">
            <summary>
            Adds an image file to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="ImagePath">File path to an image file.  Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(System.String,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds an image file to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="ImagePath">File path to an image file.  Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(System.IO.Stream)">
            <summary>
            Adds a <see cref="T:System.IO.Stream" /> containing the raw data of an image to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="ImageStream">A Stream containing an image.  Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(System.IO.Stream,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a <see cref="T:System.IO.Stream" /> containing the raw data of an image to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="ImageStream">A Stream containing an image.  Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(System.Byte[])">
            <summary>
            Adds a byte array containing the binary data of an image to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="ImageBytes">A byte[] containing an image.  Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(System.Byte[],IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a byte array containing the binary data of an image to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="ImageBytes">A byte[] containing an image.  Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddMultiFrameTiff(System.String)">
            <summary>
            Adds a Multi-frame TIFF file to the OcrInput document.
            <para>Each Frame will become a page of this OcrInput</para></summary>
            <param name="ImagePath">A file path to a TIFF image.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddMultiFrameTiff(System.String,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a Multi-frame TIFF file to the OcrInput document.
            <para>Each Frame will become a page of this OcrInput</para></summary>
            <param name="ImagePath">A file path to a TIFF image.</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddMultiFrameTiff(System.IO.Stream)">
            <summary>
            Adds a Stream containing the binary data of a TIFF image with multiple pages to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="TiffStream">A <see cref="T:System.IO.Stream" /> containing a TIFF file .</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddMultiFrameTiff(System.IO.Stream,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a Stream containing the binary data of a TIFF image with multiple pages to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="TiffStream">A <see cref="T:System.IO.Stream" /> containing a TIFF file .</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddMultiFrameTiff(System.Byte[])">
            <summary>
            Adds a byte[] containing the binary data of a TIFF image with multiple pages to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="TiffBytes">A byte[] containing a TIFF file.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddMultiFrameTiff(System.Byte[],IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a byte[] containing the binary data of a TIFF image with multiple pages to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="TiffBytes">A byte[] containing a TIFF file.</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddFrameFromTiff(System.String,System.Int32,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a single frame (a page) from a Multi-frame TIFF file to the OcrInput document.  The Tiff may be input as a file, byte array or stream.
            <para>Each Frame will become a page of this OcrInput</para></summary>
            <param name="TiffPath">A file path to a TIFF image.</param>
            <param name="FrameIndex">Zero based frame number.</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddFrameFromTiff(System.Byte[],System.Int32,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a single frame (a page) from a Multi-frame TIFF file to the OcrInput document.  The Tiff may be input as a file, byte array or stream.
            <para>Each Frame will become a page of this OcrInput</para></summary>
            <param name="TiffBytes">A byte[] containing a TIFF file.</param>
            <param name="FrameIndex">Zero based frame number.</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddFrameFromTiff(System.IO.Stream,System.Int32,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a single frame (a page) from a Multi-frame TIFF file to the OcrInput document.  The Tiff may be input as a file, byte array or stream.
            <para>Each Frame will become a page of this OcrInput</para></summary>
            <param name="TiffStream">A Stream containing a TIFF file.</param>
            <param name="FrameIndex">Zero based frame number.</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(System.String,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds an image to this this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="imageFilePath">File path to an image file.  Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
            <param name="ContentArea">Area of the image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(System.Collections.Generic.IEnumerable{System.String},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds images to this this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="imageFilePaths">IEnumerable of image file paths.  Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
            <param name="ContentArea">Area of the every image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(System.IO.Stream,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a <see cref="T:System.IO.Stream" /> containing the raw data of an image to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="sourceStream">A Stream containing an image. Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
            <param name="ContentArea">Area of the image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(System.Collections.Generic.IEnumerable{System.IO.Stream},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds an IEnumerable of <see cref="T:System.IO.Stream" /> of image raw data to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="sourceStreams">A IEnumerable of Streams containing raw data of images. Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
            <param name="ContentArea">Area of the every image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(System.Byte[],IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a byte array containing the binary data of an image to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="imageAsByteArray">A byte[] containing an image.  Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
            <param name="ContentArea">Area of the image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(System.Collections.Generic.IEnumerable{System.Byte[]},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a IEnumerable of byte array containing the binary data of images to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="imagesAsByteArrays">A IEnumerable of byte[] containing image data. Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
            <param name="ContentArea">Area of the every image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(IronSoftware.Drawing.AnyBitmap,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a <see cref="T:IronSoftware.Drawing.AnyBitmap" /> to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="imageAsBitmap">A managed <see cref="T:IronSoftware.Drawing.AnyBitmap" /> object.</param>
            <param name="ContentArea">Area of the image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(SixLabors.ImageSharp.Image,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a <see cref="T:SixLabors.ImageSharp.Image" /> to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="image">A managed Image object.</param>
            <param name="ContentArea">Area of the image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(System.Collections.Generic.IEnumerable{SixLabors.ImageSharp.Image},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds an IEnumerable of SixLabors.ImageSharp.Images to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="images">IEnumerable of managed Image objects.</param>
            <param name="ContentArea">Area of the every image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(System.Collections.Generic.IEnumerable{IronSoftware.Drawing.AnyBitmap},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a IEnumerable of <see cref="T:IronSoftware.Drawing.AnyBitmap" /> to this <see cref="T:IronOcr.OcrInput" />. 
            </summary>
            <param name="imageAsBitmaps">An IEnumerable of managed <see cref="T:IronSoftware.Drawing.AnyBitmap" /> objects.</param>
            <param name="ContentArea">Area of the every image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(IronOcr.OcrInput,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds all pages of an OcrInput to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="imageAsOcrInput">OcrInput object to be added to this OcrInput.</param>
            <param name="ContentArea">Area to use of each page of the OcrInput object.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(IronOcr.OcrInput.Page,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a OcrInput <see cref="T:IronOcr.OcrInput.Page" /> to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="imageAsOcrInputPage">Page to be added.</param>
            <param name="ContentArea">Area of the page to be added.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(System.Collections.Generic.IEnumerable{IronOcr.OcrInput.Page},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a IEnumerable of OcrInput <see cref="T:IronOcr.OcrInput.Page" /> to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="imagesAsOcrInputPages">Pages to be added.</param>
            <param name="ContentArea">Area of every page to be added.</param>
        </member>
        <member name="T:IronOcr.OcrFilters">
            <summary>
            A collection of OCR Image filter for processing Images.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.None">
            <summary>
            No filter for processing images.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Rotate">
            <summary>
            Rotates images by a number of degrees clockwise. For anti-clockwise, use negative numbers.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Deskew">
            <summary>
            Rotates an image so it is the right way up and orthogonal . This is very useful for OCR because Tesseract tolerance for skewed scans can be as low as 5 degrees.
            <para>This also helps when producing searchable PDF documents from IronTesseract because the pages will likely all be the right way up.</para><para>This version uses only  Hough transform to make minor correction. Example:  pages that where  put in a scanner at a slight angle.</para></summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Invert">
            <summary>
            Inverts every color. E.g. White becomes black : black becomes white.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.DeNoise">
            <summary>
            Removes digital noise. This filter should only be used where noise is expected. Flattens Alpha channels to white.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Scale">
            <summary>
            Scales images up in size by specify width and height.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Sharpen">
            <summary>
            Sharpens blurred OCR Documents.  Applies a Gaussian sharpening filter to image.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Contrast">
            <summary>
            Increases contrast automatically. This filter often improves OCR speed and accuracy in low contrast scans.
            <para>Amount which is used to adjust contrast. A value of 0 will create an image that is completely gray. A value of 1 leaves the input unchanged.</para><para>Amount values greater than 0 increase contrast making light areas lighter and dark areas darker.</para><para>Amount values less than 0 decrease contrast - decreasing variety of contrast.</para></summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Dilate">
            <summary>
            Advanced Morphology. Opposite of <see cref="F:IronOcr.OcrFilters.Erode" />.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Erode">
            <summary>
            Advanced Morphology. Opposite of <see cref="F:IronOcr.OcrFilters.Dilate" />.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Binarize">
            <summary>
            This image filter turns every pixel black or white with no middle ground. May Improve OCR performance cases of very low contrast of text to background.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Open">
            <summary>
            Advanced Morphology. Opposite of <see cref="F:IronOcr.OcrFilters.Close" /><para>Opening is just another name of erosion followed by dilation. It is useful in removing noise.</para></summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Close">
            <summary>
            Advanced Morphology. Opposite of <see cref="F:IronOcr.OcrFilters.Open" /><para>Closing is reverse of Opening, Dilation followed by Erosion. It is useful in closing small holes inside the foreground objects.</para></summary>
        </member>
        <member name="F:IronOcr.OcrFilters.AdaptiveThreshold">
            <summary>
            Applies Bradley Adaptive Threshold to the image.
            </summary>
        </member>
        <member name="T:IronOcr.OrientationConfidence">
            A class that defines and measures confidence thresholds for Hough Transforms used in <see cref="M:IronOcr.OcrInput.Deskew(System.Int32)" /> method calls.
        </member>
        <member name="P:IronOcr.OrientationConfidence.MinConfidence">
            <summary>
             A confidence threshold.  If this criteria is not met, pages will not be rotated by OSD.  MinConfidence of zero means OSD id full automatic and trusted.
            </summary>
        </member>
        <member name="P:IronOcr.OrientationConfidence.ActualConfidence">
            <summary>
            An array of the actual Teseract  OSD confidences returned, one per page. If these values are lower than <see cref="P:IronOcr.OrientationConfidence.MinConfidence" />, then the page will not be rotated.
            </summary>
        </member>
        <member name="T:IronOcr.OcrInputFilterWizard">
            <summary>
                <para>OcrInputFilterWizard provides a brute-force filter assessment tool to try filter combinations within IronOCR to get the highest IronTesseract confidence.</para>
                <para>Simply call the <see cref="M:IronOcr.OcrInputFilterWizard.Run(System.String,System.String@,System.Double@,IronOcr.IronTesseract)" /> method with a image filepath, and optionally a Tesseract.</para>
                <para>Out variables include the result of the best combination's read, and the best confidence.</para>
                <para>Example use: var results = OcrInputFilterWizard.Run("img.png", out string text, out double confidence);</para>
            </summary>
        </member>
        <member name="M:IronOcr.OcrInputFilterWizard.Run(System.String,System.String@,System.Double@,IronOcr.IronTesseract)">
            <summary>
                <para>This method applies a brute-force filter assessment tool to try filter combinations within IronOCR to get the highest IronTesseract confidence.</para>
                <para>Out variables include the result of the best combination's read text, and the best confidence.</para>
                <para>Example use: OcrInputFilterWizard.Run("img.png", out string text, out double confidence);</para>
                <para>Please note that this is a debug method which is CPU-intensive. When using a large PDF it may be wise to only scan a single page rather than the whole document.</para>
            </summary>
            <param name="filePath">Relative or Absolute filepath to image to run wizard on.</param>
            <param name="bestReadResult">Out-variable of the best filter combination Tesseract string read result.</param>
            <param name="ironOcrConfidence">Out-variable of confidence of the best read result from Tesseract itself.</param>
            <param name="tesseract">Optional Tesseract to include. Can be used if multiple languages need to be read.</param>
            <returns>Code to use to reproduce the best confidence result as a multi-line string.</returns>
        </member>
        <member name="M:IronOcr.OcrInputFilterWizard.Run(System.String,System.String@,IronOcr.IronTesseract)">
            <summary>
                <para>This method applies a brute-force filter assessment tool to try filter combinations within IronOCR to get the highest IronTesseract confidence.</para>
                <para>Out variables include the result of the best combination's read text.</para>
                <para>Example use: OcrInputFilterWizard.Run("img.png", out string bestReadResult);</para>
                <para>Please note that this is a debug method which is CPU-intensive. When using a large PDF it may be wise to only scan a single page rather than the whole document.</para>
            </summary>
            <param name="filePath">Relative or Absolute filepath to image to run wizard on.</param>
            <param name="bestReadResult">Out-variable of the best filter combination Tesseract string read result.</param>
            <param name="tesseract">Optional Tesseract to include. Can be used if multiple languages need to be read.</param>
            <returns>Code to use to reproduce the best confidence result as a multi-line string.</returns>
        </member>
        <member name="M:IronOcr.OcrInputFilterWizard.Run(System.String,System.Double@,IronOcr.IronTesseract)">
            <summary>
                <para>This method applies a brute-force filter assessment tool to try filter combinations within IronOCR to get the highest IronTesseract confidence.</para>
                <para>Out variables include the result of the best confidence.</para>
                <para>Example use: OcrInputFilterWizard.Run("img.png", out double confidence);</para>
                <para>Please note that this is a debug method which is CPU-intensive. When using a large PDF it may be wise to only scan a single page rather than the whole document.</para>
            </summary>
            <param name="filePath">Relative or Absolute filepath to image to run wizard on.</param>
            <param name="ironOcrConfidence">Out-variable of confidence of the best read result from Tesseract itself.</param>
            <param name="tesseract">Optional Tesseract to include. Can be used if multiple languages need to be read.</param>
            <returns>Code to use to reproduce the best confidence result as a multi-line string.</returns>
        </member>
        <member name="M:IronOcr.OcrInputFilterWizard.Run(System.String,IronOcr.IronTesseract)">
            <summary>
                <para>This method applies a brute-force filter assessment tool to try filter combinations within IronOCR to get the highest IronTesseract confidence.</para>
                <para>Example use: OcrInputFilterWizard.Run("img.png");</para>
                <para>Please note that this is a debug method which is CPU-intensive. When using a large PDF it may be wise to only scan a single page rather than the whole document.</para>
            </summary>
            <param name="filePath">Relative or Absolute filepath to image to run wizard on.</param>
            <param name="tesseract">Optional Tesseract to include. Can be used if multiple languages need to be read.</param>
            <returns>Code to use to reproduce the best confidence result as a multi-line string.</returns>
        </member>
        <member name="M:IronOcr.OcrReadTask.Cancel">
            <summary>
            Abort the associated Ocr reading
            </summary>
        </member>
        <member name="T:IronOcr.OcrResult">
            <summary>
             A full document object model (DOM) for results when <see cref="T:IronOcr.IronTesseract" /> reads an image or <see cref="T:IronOcr.OcrInput" />.
            <para>Gives access to Text, Pages, Words, Paragraphs, Lines, Words, Characters,  Images, Barcodes, Coordinates, Font information in granular detail.</para></summary>
        </member>
        <member name="T:IronOcr.OcrResult.Barcode">
            <summary>
            Represents a barcode discovered during OCR.  See <see cref="F:IronOcr.TesseractConfiguration.ReadBarCodes" /> which must be set true to use this feature.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Barcode.BarcodeNumber">
            <summary>
            One based number of this barcode within the <see cref="T:IronOcr.OcrResult" /> document.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Barcode.Value">
            <summary>
            Text value of the barcode.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Barcode.Format">
            <summary>
            Barcode format / type.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Barcode.Text">
            <summary>
            Text value of the barcode. Synonym of <see cref="P:IronOcr.OcrResult.Barcode.Value" />.
            </summary>
        </member>
        <member name="M:IronOcr.OcrResult.Barcode.ToString">
            <summary>
            Text value of the barcode. Synonym of <see cref="P:IronOcr.OcrResult.Barcode.Value" />.
            </summary>
        </member>
        <member name="T:IronOcr.OcrResult.Block">
            <summary>
            Represents a block of text containing zero or more paragraphs.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Block.Paragraphs">
            <summary>
            Every paragraph of text within this block.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Block.Lines">
            <summary>
            Every line of text within this block.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Block.Words">
            <summary>
            Every word of text within this block - in order.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Block.Characters">
            <summary>
            Every character of text within this block - in order.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Block.BlockNumber">
            <summary>
            A unique ID for this Block within its <see cref="T:IronOcr.OcrResult" /> object.  The first block will be numbered 1.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Block.BlockType">
            <summary>
             A string representation of the type of block.
            <para>See https://github.com/charlesw/tesseract/blob/master/src/Tesseract/PolyBlockType.cs</para></summary>
        </member>
        <member name="T:IronOcr.OcrResult.Character">
            <summary>
            Represents a single character (char) of text.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Character.Block">
            <summary>
            The block of text containing this character.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Character.Paragraph">
            <summary>
            The paragraph of text containing this character.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Character.Line">
            <summary>
            The line of text containing this character.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Character.Word">
            <summary>
            The word containing this character.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Character.Font">
            <summary>
            Detailed font information for this character.  May only be visible using <see cref="F:IronOcr.TesseractEngineMode.TesseractOnly" />.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Character.CharacterNumber">
            <summary>
            A unique ID number for this character within the document. The first character will be 1.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Character.Choices">
            <summary>
            A list of alternative words choices and their statistical relevance. 
            </summary>
        </member>
        <member name="M:IronOcr.OcrResult.Character.ToChar">
            <summary>
            Converts this object to a <see cref="T:System.Char" /></summary>
            <returns>A single character</returns>
        </member>
        <member name="T:IronOcr.OcrResult.Choice">
            <summary />
        </member>
        <member name="F:IronOcr.OcrResult.Choice.Text">
            <summary>
            The text for this word choice.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Choice.Confidence">
            <summary>
             Statistical Confidence as a percentage.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Cancelled">
            <summary>
            Indicates that the Ocr reading was cancelled by the user or after a timeout
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.TesseractVersion">
            <summary>
            The <see cref="T:IronOcr.TesseractVersion" /> used to generate this <see cref="T:IronOcr.OcrResult" />. 
            </summary>
            <seealso cref="T:IronOcr.TesseractVersion" />
        </member>
        <member name="P:IronOcr.OcrResult.Text">
            <summary>
            Returns the entire Text content of this OCR document.  4 <see cref="P:System.Environment.NewLine" /> characters will separate pages.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Confidence">
            <summary>
            OCR statistical accuracy confidence as an average of every character. <para> 1 = 100%, 0 = 0%</para></summary>
        </member>
        <member name="P:IronOcr.OcrResult.Pages">
            <summary>
             Represents every page within this <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
        </member>
        <member name="M:IronOcr.OcrResult.SaveAsTextFile(System.String)">
            <summary>
             Exports a .txt version of the Tesseract results objects document. This is a plain text file. 
             <para> 4 Environment.Newlines between pages. 2 Environment.Newlines between paragraphs.</para></summary>
            <param name="Path">The file path the text file will be saved to.</param>
        </member>
        <member name="M:IronOcr.OcrResult.SaveAsSearchablePdfBytes">
            <summary>
             Exports a searchable PDF version of the OCR input document as a byte array.    Works for all input formats including PDFs &amp; Images.
            </summary>
        </member>
        <member name="M:IronOcr.OcrResult.SaveAsSearchablePdfStream">
            <summary>
            Exports a searchable PDF version of the OCR input document as a Stream.    Works for all input formats including PDFs &amp; Images.
            </summary>
        </member>
        <member name="M:IronOcr.OcrResult.SaveAsSearchablePdf(System.String)">
            <summary>
             Exports a searchable PDF version of the OCR input document.    Works for all input formats including PDFs &amp; Images.
            </summary>
            <param name="Path">The file path the PDF will be saved to.</param>
        </member>
        <member name="M:IronOcr.OcrResult.SaveAsHocrString">
            <summary>
             Exports an hOCR version of the Tesseract results object document as a string. This is an XHTML file which can be read as XML or HTML.
             <para>https://en.wikipedia.org/wiki/HOCR</para></summary>
        </member>
        <member name="M:IronOcr.OcrResult.SaveAsHocrFile(System.String)">
            <summary>
             Exports an hOCR version of the Tesseract results object document. This is an XHTML file which can be read as XML or HTML.
             <para>https://en.wikipedia.org/wiki/HOCR</para></summary>
            <param name="Path">The file path the xhtml file will be saved to.</param>
        </member>
        <member name="P:IronOcr.OcrResult.Barcodes">
            <summary>
            Represents every barcode  discovered in this OCR document.  Developers must set <see cref="F:IronOcr.TesseractConfiguration.ReadBarCodes" /> = True for this feature to be active.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Blocks">
            <summary>
            Represents every block of text discovered in this OCR document in order of appearance. A Block is a collection of 1 or more paragraphs located closely  together.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Paragraphs">
            <summary>
            Represents every paragraph of text discovered in this OCR document in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Lines">
            <summary>
            Represents every line of text discovered in this OCR document in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Words">
            <summary>
            Represents every word discovered in this OCR document in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Characters">
            <summary>
            Represents every symbol (char) discovered in this OCR document in order of appearance.
            </summary>
        </member>
        <member name="T:IronOcr.OcrResult.Line">
            <summary>
            A line of text within an <see cref="F:IronOcr.OcrResult.Line.Paragraph" /></summary>
        </member>
        <member name="F:IronOcr.OcrResult.Line.Block">
            <summary>
            The <see cref="F:IronOcr.OcrResult.Line.Block" /> of text which contains this line.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Line.Paragraph">
            <summary>
            The <see cref="F:IronOcr.OcrResult.Line.Paragraph" /> which contains this line of text.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Line.Words">
            <summary>
            Every <see cref="T:IronOcr.OcrResult.Word" /> contained within this Line. In order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Line.Characters">
            <summary>
            Every symbol (char) contained within this Line. In order of appearance.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Line.BaselineAngle">
            <summary>
            Angle at which this line of text slopes.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Line.BaselineOffset">
            <summary>
            pixel offset defining how this line of text slopes.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Line.LineNumber">
            <summary>
            One based line number (identified) within this <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
        </member>
        <member name="T:IronOcr.OcrResult.OcrFont">
            <summary>
            Detailed font information returned when using  Tesseract OEM engine modes.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrFont.IsSmallCaps">
            <summary>
            Is the text in "Small Caps" (half height capital letters). 
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrFont.IsBold">
            <summary>
            Is the text Bold.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrFont.IsItalic">
            <summary>
            Is the text Italic.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrFont.IsSerif">
            <summary>
            Is the text Serif (like Times-New Roman).
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrFont.IsUnderlined">
            <summary>
            Is the text Underlined.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrFont.IsFixedWidth">
            <summary>
            Is the text FixedWidth (monospaced like Courier). 
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrFont.IsCaligraphic">
            <summary>
            Is the text in a calligraphic or "Fruktur" style. 
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrFont.FontName">
            <summary>
            Best guess at the closest known typeface name.  
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrFont.FontSize">
            <summary>
            Best guess at the font height in points.  
            </summary>
        </member>
        <member name="T:IronOcr.OcrResult.OcrResultElement">
            <summary>
            Lowest level of abstract OcrResult DOM element.  All result objects extend from this including <see cref="T:IronOcr.OcrResult.Barcode" />, <see cref="T:IronOcr.OcrResult.Character" />,  <see cref="T:IronOcr.OcrResult.Word" />,  <see cref="T:IronOcr.OcrResult.Line" />,  <see cref="T:IronOcr.OcrResult.Paragraph" /> ...
            </summary>
        </member>
        <member name="M:IronOcr.OcrResult.OcrResultElement.ToBitmap(IronOcr.OcrInput)">
            <summary>
            Returns an image of this element.
            </summary>
            <param name="Input">The OcrInput document that was read by <see cref="T:IronOcr.IronTesseract" /></param>
            <returns>A <see cref="T:IronSoftware.Drawing.AnyBitmap" />.</returns>
        </member>
        <member name="P:IronOcr.OcrResult.OcrResultElement.Width">
            <summary>
            Width in Pixels
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrResultElement.Height">
            <summary>
            Height in Pixels
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrResultElement.X">
            <summary>
            Position of this OCR Results object on the source image (page) in pixels counted from the left edge.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrResultElement.Y">
            <summary>
            Position of this OCR Results object on the source image (page) in pixels counted down from the top edge.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrResultElement.Location">
            <summary>
            Returns a <see cref="T:IronSoftware.Drawing.CropRectangle" /> of the location and size of this element within an OCR page.  Units are pixels and reference locations on the source image.
            </summary>
        </member>
        <member name="T:IronOcr.OcrResult.OcrResultTextElement">
            <summary>
            An abstract class representing discovered OCR DOM text elements such as <see cref="T:IronOcr.OcrResult.Character" />,  <see cref="T:IronOcr.OcrResult.Word" />,  <see cref="T:IronOcr.OcrResult.Line" />,  <see cref="T:IronOcr.OcrResult.Paragraph" /> ...
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrResultTextElement.TextDirection">
            <summary>
            The direction text was read in: such as 'Left to Right' or 'Top to Bottom'.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrResultTextElement.Text">
            <summary>
            The full text of this OcrResultElement as a string.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrResultTextElement.Confidence">
            <summary>
            OCR statistical accuracy confidence as an average of every character within this object. <para> 1 = 100%, 0 = 0%</para></summary>
        </member>
        <member name="M:IronOcr.OcrResult.OcrResultTextElement.ToString">
            <summary>
            Full OCR text discovered within this object. <para> A synonym of <see cref="P:IronOcr.OcrResult.OcrResultTextElement.Text" /></para>.
            </summary>
        </member>
        <member name="T:IronOcr.OcrResult.Page">
            <summary>
            Represents a single page within an <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.Rotation">
            <summary>
            The number of degrees the original page has been rotated to produce this result.  
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.Barcodes">
            <summary>
            Represents every barcode discovered in this Page.  Developers must set <see cref="F:IronOcr.TesseractConfiguration.ReadBarCodes" /> = True for this feature to be active.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.WordCount">
            <summary>
            The number of words on this page.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.PageNumber">
            <summary>
            A 1 based unique identifier for this page within an <see cref="T:IronOcr.OcrResult" /> object.  The first page is number 1.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Page.PdfExtractedText">
            <summary>
            When Reading PDFs.  Gives an alternative value to <see cref="P:IronOcr.OcrResult.Text" /> which comes from machine decoding PDF document strings only.  Can not read text from images.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.Confidence">
            <summary>
            OCR statistical accuracy confidence as an average of every character. <para> 1 = 100%, 0 = 0%</para></summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.Blocks">
            <summary>
            Represents every block of text discovered within this <see cref="T:IronOcr.OcrResult.Page" /> in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.Paragraphs">
            <summary>
            Represents every paragraph of text discovered within this <see cref="T:IronOcr.OcrResult.Page" /> in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.Lines">
            <summary>
            Represents every line of text discovered within this <see cref="T:IronOcr.OcrResult.Page" /> in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.Words">
            <summary>
            Represents every word discovered within this <see cref="T:IronOcr.OcrResult.Page" /> in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.Characters">
            <summary>
            Represents every symbol (char) discovered within this <see cref="T:IronOcr.OcrResult.Page" /> in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.ContentArea">
            <summary>
            Represents the rectangular area of this <see cref="T:IronOcr.OcrResult.Page" />  page on which OCR has been applied. Dimensions are in Pixels.
            <para>Default value is the entire size of the Page.  Relates to <see cref="M:IronOcr.OcrInput.AddImage(IronSoftware.Drawing.AnyBitmap,IronSoftware.Drawing.CropRectangle)" /></para></summary>
        </member>
        <member name="M:IronOcr.OcrResult.Page.ContentAreaToBitmap(IronOcr.OcrInput)">
            <summary>
            Returns an image of the <see cref="P:IronOcr.OcrResult.Page.ContentArea" /> of this <see cref="T:IronOcr.OcrResult.Page" />.
            </summary>
            <param name="Input">The OcrInput document that was read by <see cref="T:IronOcr.IronTesseract" /></param>
            <returns>A <see cref="T:IronSoftware.Drawing.AnyBitmap" />.</returns>
        </member>
        <member name="T:IronOcr.OcrResult.Paragraph">
            <summary>
            Represents a paragraph of text with an <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Paragraph.Block">
            <summary>
            Represents the Block of text that contains this paragraph.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Paragraph.Lines">
            <summary>
            Represents every line of text in this paragraph.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Paragraph.Words">
            <summary>
            Represents every word in this paragraph, in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Paragraph.Characters">
            <summary>
            Represents every character  in this paragraph, in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Paragraph.ParagraphNumber">
            <summary>
            1 based unique numerical identifier for this paragraph within the <see cref="T:IronOcr.OcrResult" /> document.
            </summary>
        </member>
        <member name="M:IronOcr.OcrResult.ToJson">
            <summary>
            Serializes the <see cref="T:IronOcr.OcrResult" /> object to a JSON string.
            </summary>
            <remarks>Use the method <see cref="M:IronOcr.OcrResult.FromJson(System.String)" /> for deserializing the JSON to the <see cref="T:IronOcr.OcrResult" /> object.
            </remarks>
            <returns>
            The JSON string representation of the <see cref="T:IronOcr.OcrResult" />.
            </returns>
        </member>
        <member name="M:IronOcr.OcrResult.FromJson(System.String)">
            <summary>
            Deserializes the JSON to the <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
            <param name="json">A JSON string representation of the <see cref="T:IronOcr.OcrResult" />.</param>
            <returns>The deserialized <see cref="T:IronOcr.OcrResult" /> object from the JSON string.</returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="json" /> is null</exception>
        </member>
        <member name="P:IronOcr.OcrResult.EngineModeUsed">
            <summary>
            The <see cref="T:IronOcr.TesseractEngineMode" /> used to generate this <see cref="T:IronOcr.OcrResult" />. 
            </summary>
            <seealso cref="T:IronOcr.TesseractEngineMode" />
        </member>
        <member name="T:IronOcr.OcrResult.TextFlow">
            <summary>
            Describes text direction
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.TextFlow.LeftToRight">
            <summary>
            LTR Languages such as English.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.TextFlow.RightToLeft">
            <summary>
            RTL Languages such as Arabic.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.TextFlow.TopToBottom">
            <summary>
            Vertical languages such as found in some forms of East Asian script.
            </summary>
        </member>
        <member name="T:IronOcr.OcrResult.Word">
            <summary>
            Represents a Word discovered during OCR.  
            </summary>
            <seealso cref="T:IronOcr.OcrResult" />
        </member>
        <member name="F:IronOcr.OcrResult.Word.Block">
            <summary>
            The <see cref="F:IronOcr.OcrResult.Word.Block" /> containing this Word.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Word.Paragraph">
            <summary>
            The <see cref="F:IronOcr.OcrResult.Word.Paragraph" /> containing this Word.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Word.Line">
            <summary>
            The <see cref="F:IronOcr.OcrResult.Word.Line" /> containing this Word.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Word.Characters">
            <summary>
            A list of every symbol (char) within this word in order. 
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Word.WordNumber">
            <summary>
            1 based number to identify this word within the <see cref="T:IronOcr.OcrResult" /></summary>
        </member>
        <member name="P:IronOcr.OcrResult.Word.Font">
            <summary>
            Legacy. Null unless the Tesseract 3 Engine Mode "TesseractMode" is used.
            </summary>
        </member>
        <member name="T:IronOcr.OcrResult.BarcodeEncoding">
            <summary>
            Barcode Encoding Types.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.Codabar">
            <summary>
                Codabar 1D barcode format.  Codabar is a linear barcode symbology developed in 1972 by Pitney Bowes Corp
              <para>Please Note: Codabar encodes numerical data (digits) only.</para></summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.Code39">
            <summary>
                Code 39 1D barcode format. Code 39 is a variable length, discrete barcode symbology. The Code 39 specification defines 43 characters, consisting of uppercase letters (A through Z).
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.Code93">
            <summary>
                Code 93 1D barcode format. Code 93 is a barcode symbology designed in 1982 by Intermec to provide a higher density and data security enhancement to Code 39.
                <para>Code 93 Supports encoding of only the following ASCII characters: A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9 - . $ / + % SPACE</para></summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.Code128">
            <summary>
                Code 128 1D format. Code 128 is a high-density linear barcode symbology defined in ISO/IEC 15417:2007. It is used for alphanumeric or numeric-only barcodes.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.EAN8">
            <summary>
                EAN-8 1D barcode format. An EAN-8 is an EAN/UPC symbology barcode and is derived from the longer International Article Number (EAN-13) code.
               <para>Please Note: EAN-8 may only encode numerical (digits) content of length 7 or 8 digits long.   Shorter Barcodes will have trailing zeros (000) prepended to the start of the number automatically.</para></summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.EAN13">
            <summary>
                EAN-13 1D format. The International Article Number (also known as European Article Number or EAN) is a standard describing a barcode symbology and numbering system used in global trade to identify a specific retail product type, in a specific packaging configuration, from a specific manufacturer.Titf
                <para>Please Note: EAN-13 may only encode numerical (digits) content of length 12 or 13 digits long.   Shorter Barcodes will have trailing zeros (000) prepended to the start of the number automatically.</para></summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.ITF">
            <summary>
                 ITF (Interleaved Two of Five) 1D format.  ITF-14 is the GS1 implementation of an Interleaved 2 of 5 (ITF) bar code to encode a Global Trade Item Number. ITF-14 symbols are generally used on packaging levels of a product, such as a case box of 24 cans of soup. The ITF-14 will always encode 14 digits.s
               <para>Please Note: ITF encodes numerical data only. If the number if digits is not even, a '0' will automatically be prepended.</para></summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.UPCA">
            <summary>
                 UPC-A 1D format. The Universal Product Code (UPC) is a barcode symbology that is widely used in the United States, Canada, United Kingdom, Australia, New Zealand, in Europe and other countries for tracking trade items in stores. UPC (technically refers to UPC-A) consists of 12 numeric digits, that are uniquely assigned to each trade item. Along with the related EAN barcode, the UPC is the barcode mainly used for scanning of trade items at the point of sale, per GS1 specifications.
                 <para>Please Note: UPCA may only encode numerical (digits) content of length 12 or 13 digits long.   Shorter Barcodes will have trailing zeros (000) prepended to the start of the number automatically.</para></summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.UPCE">
            <summary>
                 UPC-E 1D format. To allow the use of UPC barcodes on smaller packages, where a full 12-digit barcode may not fit, a 'zero-suppressed' version of UPC was developed, called UPC-E, in which the number system digit, all trailing zeros in the manufacturer code, and all leading zeros in the product code, are suppressed (omitted).MSI
                 <para>Please Note: UPCE may only encode numerical (digits) content of between 8 and more than 13 digits long.</para></summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.MSI">
            <summary>
                MSI 1D format.  MSI is a barcode symbology developed by the MSI Data Corporation, based on the original Plessey Code symbology.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.Plessey">
            <summary>
                Plessey 1D format.  Plessey Code is a 1D linear barcode symbology based on pulse width modulation, developed in 1971 by The Plessey Company PLC, a British-based company.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.Databar">
            <summary> 
                "RSS Expanded" or "GS1 Databar" barcode formats.   Includes 1D barcode and stacked 2D variants of this barcode format.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.Rss14">
            <summary> 
                Reduce Space Symbology 14 barcode format. May represent a 1D barcode or Stacked 2D barcode.   RSS 14 barcode (Reduce Space Symbology) encodes the full 14-digit EAN.UCC item identification in a symbol that can be omni-directionally scanned by suitably configured point-of-sale laser scanners. It is the latest barcode type for space-constrained identification from EAN International and the Uniform Code Council, Inc.. RSS barcodes have been identified to target the grocery industry and in healthcare, where items are too small to allow for other barcode symbologies.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.PDF417">
            <summary> 
                PDF417 format.  PDF417 is a stacked linear barcode symbol format used in a variety of applications, primarily transport, identification cards, and inventory management. PDF stands for Portable Data File. The 417 signifies that each pattern in the code consists of 4 bars and spaces, and that each pattern is 17 units long. The PDF417 symbology was invented by Dr. Ynjiun P. Wang at Symbol Technologies in 1991. (Wang 1993) It is ISO standard 15438.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.Aztec">
            <summary> 
                Aztec 2D barcode format.  Aztec Code is a type of 2D barcode invented by Andrew Longacre, Jr. and Robert Hussey in 1995. Named after the resemblance of the central finder pattern to an Aztec pyramid, Aztec code has the potential to use less space than other matrix barcodes because it does not require a surrounding blank "quiet zone".s
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.DataMatrix">
            <summary> 
                Data Matrix 2D barcode format. An example of a Data Matrix code, encoding the text: "Wikipedia, the free encyclopedia" A Data Matrix is a two-dimensional barcode consisting of black and white "cells" or modules arranged in either a square or rectangular pattern, also known as a matrix. The information to be encoded can be text or numeric data. Usual data size is from a few bytes up to 1556 bytes.
              </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.MaxiCode">
            <summary> 
                 MaxiCode 2D barcode format.  MaxiCode is a public domain, machine-readable symbol system originally created and used by United Parcel Service. Suitable for tracking and managing the shipment of packages, it resembles a barcode, but uses dots arranged in a hexagonal grid instead .
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.QRCode">
            <summary> 
                QR Code 2D barcode format.  QR code (abbreviated from Quick Response Code) is the trademark for a type of matrix barcode (or two-dimensional barcode) first designed in 1994 for the automotive industry in Japan. A barcode is a machine-readable optical label that contains information about the item to which it is attached. A QR code uses four standardized encoding modes (numeric, alphanumeric, byte/binary, and kanji) to efficiently store data; extensions may also be used.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.IntelligentMail">
            <summary> 
                Intelligent Mail 2D barcode format.  The Intelligent Mail Barcode (Also known as "IM Barcode" or "USPS OneCode Barcodes" or "IMB") is a 65-bar barcode for use on mail in the United States. The term "Intelligent Mail" refers to services offered by the United States Postal Service for domestic mail delivery. The IM barcode is intended to provide greater information and functionality than its predecessors POSTNET and PLANET.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.PharmaCode">
            <summary>
            Pharmaceutical Binary Code. A reading fault tolerant binary barcode standard used in the medical industry.   https://en.wikipedia.org/wiki/Pharmacode
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.Other">
            <summary>
            Unspecified Barcode Encoding
            </summary>
        </member>
        <member name="T:IronOcr.OpenCvClient">
            <summary>
            Client layer for OpenCV interop
            </summary>
        </member>
        <member name="P:IronOcr.OpenCvClient.Instance">
            <summary>
            OpenCvClient Instance
            </summary>
        </member>
        <member name="M:IronOcr.OpenCvClient.Finalize">
            <summary>
            Dispose OpenCvClient
            </summary>
        </member>
        <member name="M:IronOcr.OpenCvClient.OpenCvClientInit">
            <summary>
            Initilize OpenCvClient
            </summary>
        </member>
        <member name="M:IronOcr.OpenCvClient.Dispose">
            <summary>
            Dispose OpenCvClient
            </summary>
        </member>
        <member name="M:IronOcr.OpenCvClient.FindTextRegion(SixLabors.ImageSharp.Image,System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Find first region of Text in image using OpenCV
            </summary>
            <param name="bitmap">Source image.</param>
            <param name="scale">Resolution scale factor. Image width and height will be multiplied by this value.</param>
            <param name="dilation_amount">Dilation amount, in pixels. Text areas width and height will be increased by this value.</param>
            <param name="binarize">True to convert the image to black and white, False otherwise</param>
            <param name="invert">True to invert image colors when binarizing, False otherwise</param>
        </member>
        <member name="M:IronOcr.OpenCvClient.FindTextRegions(SixLabors.ImageSharp.Image,System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Find all regions of Text in image using OpenCV
            </summary>
            <param name="bitmap">Source image.</param>
            <param name="scale">Resolution scale factor. Image width and height will be multiplied by this value.</param>
            <param name="dilation_amount">Dilation amount, in pixels. Text areas width and height will be increased by this value.</param>
            <param name="binarize">True to convert the image to black and white, False otherwise</param>
            <param name="invert">True to invert image colors when binarizing, False otherwise</param>
        </member>
        <member name="T:IronOcr.BarcodeReaderSafety">
            <summary>
            extensions methods which are working directly on any IBarcodeReaderGeneric implementation
            </summary>
        </member>
        <member name="M:IronOcr.BarcodeReaderSafety.SafeDecode(ZXing.ImageSharp.BarcodeReader{SixLabors.ImageSharp.PixelFormats.Rgba32},SixLabors.ImageSharp.Image{SixLabors.ImageSharp.PixelFormats.Rgba32})">
            <summary>
            uses the BarcodeReader class for decoding
            </summary>
            <param name="reader" />
            <param name="image" />
            <returns />
        </member>
        <member name="M:IronOcr.BarcodeReaderSafety.SafeDecodeMultiple(ZXing.ImageSharp.BarcodeReader{SixLabors.ImageSharp.PixelFormats.Rgba32},SixLabors.ImageSharp.Image{SixLabors.ImageSharp.PixelFormats.Rgba32})">
            <summary>
            uses the BarcodeReader class for decoding
            </summary>
            <param name="reader" />
            <param name="image" />
            <returns />
        </member>
        <member name="T:System.Drawing.Dimension">
            <summary>
            The  Dimension  class encapsulates the width and height of a component (in int precision) in a single object.
            </summary>
            <remarks>
            The class is associated with certain properties of components. Several methods defined by the  Component  class
            and the LayoutManager  interface return a  Dimension  object.  Normally the values of  width and  height  are
            non-negative ints. The constructors that allow you to create a dimension do not prevent you from setting a
            negative value for these properties. If the value of  width  or  height  is negative, the behavior of some
            methods defined by other objects is undefined.
            </remarks>
        </member>
        <member name="M:System.Drawing.Dimension.#ctor">
            <summary>
            Creates an instance of  Dimension  with a width of zero and a height of zero.
            </summary>
        </member>
        <member name="M:System.Drawing.Dimension.#ctor(System.Drawing.Dimension)">
            <summary>
            Creates an instance of  Dimension  whose width and height are the same as for the specified dimension.
            </summary>
            <param name="d">
            the specified dimension for the width  and height  values.
            </param>
        </member>
        <member name="M:System.Drawing.Dimension.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a Dimension and initializes it to the specified width and specified height.
            </summary>
            <param name="width">the specified width dimension</param>
            <param name="height">the specified height dimension</param>
        </member>
        <member name="M:System.Drawing.Dimension.Equals(System.Object)">
            <summary>
            Checks whether two dimension objects have equal values.
            </summary>
            <param name="obj" />
            <returns />
        </member>
        <member name="M:System.Drawing.Dimension.GetHashCode">
            <summary>
            Returns the hash code for this Dimension.
            </summary>
            <returns>a hash code</returns>
        </member>
        <member name="M:System.Drawing.Dimension.SetSize(System.Double,System.Double)">
            <summary>
            Set the size of this Dimension object to the specified width and height in double precision.
            </summary>
            <param name="width">the new width for the Dimension object</param>
            <param name="height">the new height for the Dimension object</param>
        </member>
        <member name="M:System.Drawing.Dimension.SetSize(System.Int32,System.Int32)">
            <summary>
            Set the size of this  Dimension  object to the specified width and height.
            </summary>
            <param name="width">the new width for this  Dimension  object.</param>
            <param name="height">the new height for this  Dimension  object.</param>
        </member>
        <member name="M:System.Drawing.Dimension.ToString">
            <summary>
            Returns a string representation of the values of this Dimension  object's  height  and width  fields.
            </summary>
            <remarks>
            This method is intended to be used only for debugging purposes, and the content and format of the returned
            string may vary between implementations. The returned string may be empty but may not be  null .
            </remarks>
            <returns>
            a string representation of this  Dimension object.
            </returns>
        </member>
        <member name="P:System.Drawing.Dimension.height">
            <summary>
            The height dimension. Negative values can be used.
            </summary>
        </member>
        <member name="P:System.Drawing.Dimension.Height">
            <summary>
            Returns the height of this dimension in double precision.
            </summary>
            <value>the height</value>
        </member>
        <member name="P:System.Drawing.Dimension.Size">
            <summary>
            Get/set the size of this  Dimension  object.
            </summary>
            <value>the size</value>
        </member>
        <member name="P:System.Drawing.Dimension.width">
            <summary>
            The width dimension. Negative values can be used.
            </summary>
        </member>
        <member name="P:System.Drawing.Dimension.Width">
            <summary>
            Returns the width of this dimension in double precision.
            </summary>
            <value>the width</value>
        </member>
        <member name="T:System.Drawing.Dimension2D">
            <summary>
            The  Dimension2D  class is to encapsulate a width and a height dimension.
            </summary>
            <remarks>
            This class is only the abstract baseclass for all objects that store a 2D dimension. The actual storage
            representation of the sizes is left to the subclass.
            </remarks>
        </member>
        <member name="M:System.Drawing.Dimension2D.Clone">
            <summary>
            Creates a new object of the same class as this object.
            </summary>
            <returns>a clone of this instance</returns>
        </member>
        <member name="M:System.Drawing.Dimension2D.SetSize(System.Double,System.Double)">
            <summary>
            Sets the size of this  Dimension  object to the specified width and height.
            </summary>
            <param name="width">
            the new width for the  Dimension object
            </param>
            <param name="height">
            the new height for the  Dimension object
            </param>
        </member>
        <member name="P:System.Drawing.Dimension2D.Height">
            <summary>
            Returns the height of this  Dimension  in double precision.
            </summary>
            <value>the height</value>
        </member>
        <member name="P:System.Drawing.Dimension2D.Size">
            <summary>
            Sets the size of this  Dimension2D  object to match the specified size.
            </summary>
            <value>the size</value>
        </member>
        <member name="P:System.Drawing.Dimension2D.Width">
            <summary>
            Returns the width of this  Dimension  in double precision.
            </summary>
            <value>the width</value>
        </member>
        <member name="F:System.util.collections.OrderedTree.SentinelNode">
            <summary>
            sentinelNode is convenient way of indicating a leaf node.
            </summary>
        </member>
        <member name="F:System.util.collections.OrderedTree._intCount">
            <summary>
            the number of nodes contained in the tree
            </summary>
        </member>
        <member name="F:System.util.collections.OrderedTree._lastNodeFound">
            <summary>
            the node that was last found; used to optimize searches
            </summary>
        </member>
        <member name="F:System.util.collections.OrderedTree._rbTree">
            <summary>
            the tree
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTree.delete(System.util.collections.OrderedTreeNode)">
            <summary>
            Delete Delete a node from the tree and restore red black properties
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTree.restoreAfterDelete(System.util.collections.OrderedTreeNode)">
            <summary>
            RestoreAfterDelete Deletions from red-black trees may destroy the red-black properties. Examine the tree and
            restore. Rotations are normally required to restore it
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTree.restoreAfterInsert(System.util.collections.OrderedTreeNode)">
            <summary>
            RestoreAfterInsert Additions to red-black trees usually destroy the red-black properties. Examine the tree
            and restore. Rotations are normally required to restore it
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTree.Add(System.IComparable,System.Object)">
            <summary>
            Add args: ByVal key As IComparable, ByVal data As Object key is object that implements IComparable interface
            performance tip: change to use use int type (such as the hashcode)
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTree.Clear">
            <summary>
            Clear Empties or clears the tree
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTree.Elements">
            <summary>
            Elements Returns an enumeration of the data objects. if(ascending is true, the objects will be returned in
            ascending order, else the objects will be returned in descending order.
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTree.GetData(System.IComparable)">
            <summary>
            GetData Gets the data object associated with the specified key
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTree.GetEnumerator">
            <summary>
            GetEnumerator return an enumerator that returns the tree nodes in order
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTree.GetMaxKey">
            <summary>
            GetMaxKey Returns the maximum key value
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTree.GetMaxValue">
            <summary>
            GetMaxValue Returns the object having the maximum key
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTree.GetMinKey">
            <summary>
            GetMinKey Returns the minimum key value
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTree.GetMinValue">
            <summary>
            GetMinValue Returns the object having the minimum key value
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTree.IsEmpty">
            <summary>
            IsEmpty Is the tree empty?
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTree.Remove(System.IComparable)">
            <summary>
            Remove removes the key and data object (delete)
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTree.RemoveMax">
            <summary>
            RemoveMax removes the node with the maximum key
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTree.RemoveMin">
            <summary>
            RemoveMin removes the node with the minimum key
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTree.RotateLeft(System.util.collections.OrderedTreeNode)">
            <summary>
            RotateLeft Rebalance the tree by rotating the nodes to the left
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTree.RotateRight(System.util.collections.OrderedTreeNode)">
            <summary>
            RotateRight Rebalance the tree by rotating the nodes to the right
            </summary>
        </member>
        <member name="P:System.util.collections.OrderedTree.Keys">
            <summary>
            Keys if(ascending is true, the keys will be returned in ascending order, else the keys will be returned in
            descending order.
            </summary>
        </member>
        <member name="P:System.util.collections.OrderedTree.Values">
            <summary>
            Values Provided for .NET compatibility.
            </summary>
        </member>
        <member name="F:System.util.collections.OrderedTreeEnumerator._ascending">
            <summary>
            return in ascending order (true) or descending (false)
            </summary>
        </member>
        <member name="F:System.util.collections.OrderedTreeEnumerator._keys">
            <summary>
            return the keys
            </summary>
        </member>
        <member name="F:System.util.collections.OrderedTreeEnumerator._objValue">
            <summary>
            the data or value associated with the key
            </summary>
        </member>
        <member name="F:System.util.collections.OrderedTreeEnumerator._ordKey">
            <summary>
            key
            </summary>
        </member>
        <member name="F:System.util.collections.OrderedTreeEnumerator._stack">
            <summary>
            the treap uses the stack to order the nodes
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTreeEnumerator.#ctor(System.util.collections.OrderedTreeNode,System.Boolean,System.Boolean)">
            <summary>
            Determine order, walk the tree and push the nodes onto the stack
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTreeEnumerator.HasMoreElements">
            <summary>
            HasMoreElements
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTreeEnumerator.MoveNext">
            <summary>
            MoveNext For .NET compatibility
            </summary>
        </member>
        <member name="M:System.util.collections.OrderedTreeEnumerator.NextElement">
            <summary>
            NextElement
            </summary>
        </member>
        <member name="P:System.util.collections.OrderedTreeEnumerator.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="P:System.util.collections.OrderedTreeEnumerator.Value">
            <summary>
            Data
            </summary>
        </member>
        <member name="F:System.util.collections.OrderedTreeNode.RED">
            <summary>
            tree node colors
            </summary>
        </member>
        <member name="F:System.util.collections.OrderedTreeNode._intColor">
            <summary>
            color - used to balance the tree
            </summary>
        </member>
        <member name="F:System.util.collections.OrderedTreeNode._objData">
            <summary>
            the data or value associated with the key
            </summary>
        </member>
        <member name="F:System.util.collections.OrderedTreeNode._ordKey">
            <summary>
            key provided by the calling class
            </summary>
        </member>
        <member name="F:System.util.collections.OrderedTreeNode._rbnLeft">
            <summary>
            left node
            </summary>
        </member>
        <member name="F:System.util.collections.OrderedTreeNode._rbnParent">
            <summary>
            parent node
            </summary>
        </member>
        <member name="F:System.util.collections.OrderedTreeNode._rbnRight">
            <summary>
            right node
            </summary>
        </member>
        <member name="P:System.util.collections.OrderedTreeNode.Color">
            <summary>
            Color
            </summary>
        </member>
        <member name="P:System.util.collections.OrderedTreeNode.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="P:System.util.collections.OrderedTreeNode.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="P:System.util.collections.OrderedTreeNode.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="P:System.util.collections.OrderedTreeNode.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="T:System.util.ListIterator">
            <summary>
            Summary description for ListIterator.
            </summary>
        </member>
        <member name="T:System.util.Properties">
            <summary>
            Summary description for Properties.
            </summary>
        </member>
        <member name="M:System.util.Properties.loadConvert(System.String)">
            <summary>
            Converts encoded \uxxxx to unicode chars and changes special saved chars to their original forms
            </summary>
        </member>
        <member name="T:System.util.StringTokenizer">
            <summary>
            a replacement for the StringTokenizer java class
            </summary>
            <summary>
            it's more or less the same as the one in the GNU classpath
            </summary>
        </member>
        <member name="T:System.util.Util">
            <summary>
            Summary description for Util.
            </summary>
        </member>
        <member name="F:System.util.zlib.Adler32.Base">
            <summary>
            largest prime smaller than 65536
            </summary>
        </member>
        <member name="F:System.util.zlib.Adler32.Nmax">
            <summary>
            NMAX is the largest n such that 255n(n+1)/2 + (n+1)(BASE-1)
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.BlockDone">
            <summary>
            block flush performed
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.FinishDone">
            <summary>
            finish done, accept no more input or output
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.FinishStarted">
            <summary>
            finish started, need only more output at next deflate
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.NeedMore">
            <summary>
            block not completed, need more input or more output
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.PresetDict">
            <summary>
            preset dictionary flag in zlib header
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.Rep36">
            <summary>
            repeat previous bit length 3-6 times (2 bits of repeat count)
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.Repz11138">
            <summary>
            repeat a zero length 11-138 times  (7 bits of repeat count)
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.Repz310">
            <summary>
            repeat a zero length 3-10 times  (3 bits of repeat count)
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.ZBinary">
            <summary>
            The three kinds of block type
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.ZDeflated">
            <summary>
            The deflate compression method
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.BiBuf">
            <summary>
            Output buffer. bits are inserted starting at the bottom (least
            </summary>
            <summary>
            significant bits).
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.BiValid">
            <summary>
            Number of valid bits in bi_buf.  All bits above the last valid bit
            </summary>
            <summary>
            are always zero.
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.BlCount">
            <summary>
            number of codes at each bit length for an optimal tree
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.Depth">
            <summary>
            Depth of each subtree used as tie breaker for trees of equal frequency
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.GoodMatch">
            <summary>
            Use a faster search when the previous match is longer than this
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.HashShift">
            <summary>
            Number of bits by which ins_h must be shifted at each input
            </summary>
            <summary>
            step. It must be such that after MIN_MATCH steps, the oldest
            </summary>
            <summary>
            byte no longer takes part in the hash key, that is:
            </summary>
            <summary>
            hash_shift * MIN_MATCH &gt;= hash_bits
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.Heap">
            <summary>
            heap used to build the Huffman trees
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.LBuf">
            <summary>
            The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
            </summary>
            <summary>
            The same heap array is used to build all trees.
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.LitBufsize">
            <summary>
            Size of match buffer for literals/lengths.  There are 4 reasons for
            </summary>
            <summary>
            limiting lit_bufsize to 64K:
            </summary>
            <summary>
            - frequencies can be kept in 16 bit counters
            </summary>
            <summary>
            - if compression is not successful for the first block, all input
            </summary>
            <summary>
            data is still in the window so we can still emit a stored block even
            </summary>
            <summary>
            when input comes from standard input.  (This can also be done for
            </summary>
            <summary>
            all blocks if lit_bufsize is not greater than 32K.)
            </summary>
            <summary>
            - if compression is not successful for a file smaller than 64K, we can
            </summary>
            <summary>
            even emit a stored file instead of a stored block (saving 5 bytes).
            </summary>
            <summary>
            This is applicable only for zip (not gzip or zlib).
            </summary>
            <summary>
            - creating new Huffman trees less frequently may not provide fast
            </summary>
            <summary>
            adaptation to changes in the input data statistics. (Take for
            </summary>
            <summary>
            example a binary file with poorly compressible code followed by
            </summary>
            <summary>
            a highly compressible string table.) Smaller buffer sizes give
            </summary>
            <summary>
            fast adaptation but have of course the overhead of transmitting
            </summary>
            <summary>
            trees more frequently.
            </summary>
            <summary>
            - I can't count above 4
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.MatchLength">
            <summary>
            Window position at the beginning of the current output block. Gets
            </summary>
            <summary>
            negative when the window is moved backwards.
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.MaxChainLength">
            <summary>
            To speed up deflation, hash chains are never searched beyond this
            </summary>
            <summary>
            length.  A higher limit improves compression ratio but degrades the speed.
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.MaxLazyMatch">
            <summary>
            Attempt to find a better match only when the current match is strictly
            </summary>
            <summary>
            smaller than this value. This mechanism is used only for compression
            </summary>
            <summary>
            levels &gt;= 4.
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.NiceMatch">
            <summary>
            Stop searching when current match exceeds this
            </summary>
        </member>
        <member name="F:System.util.zlib.Deflate.PrevLength">
            <summary>
            Length of the best match at previous step. Matches not greater than this
            </summary>
            <summary>
            are discarded. This is used in the lazy match evaluation.
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate._tr_align">
            <summary>
            Send one empty static block to give enough lookahead for inflate.
            </summary>
            <summary>
            This takes 10 bits, of which 7 may remain in the bit buffer.
            </summary>
            <summary>
            The current inflate code requires 9 bits of lookahead. If the
            </summary>
            <summary>
            last two codes for the previous block (real code plus EOB) were coded
            </summary>
            <summary>
            on 5 bits or less, inflate may have only 5+3 bits of lookahead to decode
            </summary>
            <summary>
            the last real code. In this case we send two empty static blocks instead
            </summary>
            <summary>
            of one. (There are no problems if the previous block is stored or fixed.)
            </summary>
            <summary>
            To simplify the code, we assume the worst case of last real code encoded
            </summary>
            <summary>
            on one bit only.
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate._tr_flush_block(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Determine the best encoding for the current block: dynamic trees, static
            </summary>
            <summary>
            trees or store, and output the encoded block to the zip file.
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate._tr_stored_block(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Send a stored block
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate._tr_tally(System.Int32,System.Int32)">
            <summary>
            Save the match info and tally the frequency counts. Return true if
            </summary>
            <summary>
            the current block must be flushed.
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate.bi_flush">
            <summary>
            Flush the bit buffer, keeping at most 7 bits in it.
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate.bi_windup">
            <summary>
            Flush the bit buffer and align the output on a byte boundary
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate.build_bl_tree">
            <summary>
            Construct the Huffman tree for the bit lengths and return the index in
            </summary>
            <summary>
            bl_order of the last bit length code to send.
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate.compress_block(System.Int16[],System.Int16[])">
            <summary>
            Send the block data compressed using the given Huffman trees
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate.copy_block(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Copy a stored block, storing first the length and its
            </summary>
            <summary>
            one's complement if requested.
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate.deflate_fast(System.Int32)">
            <summary>
            Compress as much as possible from the input stream, return the current
            </summary>
            <summary>
            block state.
            </summary>
            <summary>
            This function does not perform lazy evaluation of matches and inserts
            </summary>
            <summary>
            new strings in the dictionary only for unmatched strings or for short
            </summary>
            <summary>
            matches. It is used only for the fast compression options.
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate.deflate_slow(System.Int32)">
            <summary>
            Same as above, but achieves better compression. We use a lazy
            </summary>
            <summary>
            evaluation for matches: a match is finally adopted only if there is
            </summary>
            <summary>
            no better match at the next window position.
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate.deflate_stored(System.Int32)">
            <summary>
            Copy without compression as much as possible from the input stream, return
            </summary>
            <summary>
            the current block state.
            </summary>
            <summary>
            This function does not insert new strings in the dictionary since
            </summary>
            <summary>
            uncompressible data is probably not useful. This function is used
            </summary>
            <summary>
            only for the level=0 compression option.
            </summary>
            <summary>
            NOTE: this function should be optimized to avoid extra copying from
            </summary>
            <summary>
            window to pending_buf.
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate.fill_window">
            <summary>
             Fill the window when the lookahead becomes insufficient.
             </summary>
            <summary>
             Updates strstart and lookahead.
             </summary>
            <summary />
            <summary>
             At least one byte has been read, or avail_in == 0; reads are
             </summary>
            <summary>
             performed for at least two bytes (required for the zip translate_eol
             </summary>
            <summary>
             option -- not supported here).
             </summary>
        </member>
        <member name="M:System.util.zlib.Deflate.Pqdownheap(System.Int16[],System.Int32)">
            <summary>
            Restore the heap property by moving down the tree starting at node k,
            </summary>
            <summary>
            exchanging a node with the smallest of its two sons if necessary, stopping
            </summary>
            <summary>
            when the heap property is re-established (each father smaller than its
            </summary>
            <summary>
            two sons).
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate.put_byte(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Output a byte on the stream.
            </summary>
            <summary>
            IN assertion: there is enough room in pending_buf.
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate.scan_tree(System.Int16[],System.Int32)">
            <summary>
            Scan a literal or distance tree to determine the frequencies of the codes
            </summary>
            <summary>
            in the bit length tree.
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate.send_all_trees(System.Int32,System.Int32,System.Int32)">
            <summary>
            Send the header for a block using dynamic Huffman trees: the counts, the
            </summary>
            <summary>
            lengths of the bit length codes, the literal tree and the distance tree.
            </summary>
            <summary>
            IN assertion: lcodes &gt;= 257, dcodes &gt;= 1, blcodes &gt;= 4.
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate.send_tree(System.Int16[],System.Int32)">
            <summary>
            Send a literal or distance tree in compressed form, using the codes in
            </summary>
            <summary>
            bl_tree.
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate.set_data_type">
            <summary>
            frequencies does not exceed 64K (to fit in an int on 16 bit machines).
            </summary>
        </member>
        <member name="M:System.util.zlib.Deflate.tr_init">
            <summary>
            Buffer for distances. To simplify the code, d_buf and l_buf have
            </summary>
            <summary>
            the same number of elements. To use different lengths, an extra flag
            </summary>
            <summary>
            array would be necessary.
            </summary>
            <summary>
            Initialize the tree data structures for a new zlib stream.
            </summary>
        </member>
        <member name="F:System.util.zlib.InfBlocks._border">
            <summary>
            Table for deflate from PKZIP's appnote.txt.
            </summary>
        </member>
        <member name="F:System.util.zlib.InfBlocks._inflateMask">
            <summary>
            And'ing with mask[n] masks the lower n bits
            </summary>
        </member>
        <member name="F:System.util.zlib.InfBlocks.Bitk">
            <summary>
            mode independent information
            </summary>
        </member>
        <member name="M:System.util.zlib.InfBlocks.inflate_flush(System.util.zlib.ZStream,System.Int32)">
            <summary>
            copy as much as possible from the sliding window to the output area
            </summary>
        </member>
        <member name="M:System.util.zlib.InfBlocks.sync_point">
            <summary>
            Returns true if inflate is currently at the end of a block generated
            </summary>
            <summary>
            by Z_SYNC_FLUSH or Z_FULL_FLUSH.
            </summary>
        </member>
        <member name="F:System.util.zlib.InfCodes.Start">
            <summary>
            waiting for "i:"=input,
            </summary>
            <summary>
            "o:"=output,
            </summary>
            <summary>
            "x:"=nothing
            </summary>
        </member>
        <member name="F:System.util.zlib.InfCodes._get">
            <summary>
            if EXT or COPY, where and how much
            </summary>
        </member>
        <member name="F:System.util.zlib.InfCodes._len">
            <summary>
            mode dependent information
            </summary>
        </member>
        <member name="F:System.util.zlib.Inflate.PresetDict">
            <summary>
            preset dictionary flag in zlib header
            </summary>
        </member>
        <member name="F:System.util.zlib.Inflate.Marker">
            <summary>
            if BAD, inflateSync's marker bytes count
            </summary>
        </member>
        <member name="F:System.util.zlib.Inflate.method">
            <summary>
            mode dependent information
            </summary>
        </member>
        <member name="F:System.util.zlib.Inflate.Nowrap">
            <summary>
            mode independent information
            </summary>
        </member>
        <member name="F:System.util.zlib.Inflate.Was">
            <summary>
            if CHECK, check values to compare
            </summary>
        </member>
        <member name="M:System.util.zlib.Inflate.InflateSyncPoint(System.util.zlib.ZStream)">
            <summary>
            Returns true if inflate is currently at the end of a block generated
            </summary>
            <summary>
            by Z_SYNC_FLUSH or Z_FULL_FLUSH. This function is used by one PPP
            </summary>
            <summary>
            implementation to provide an additional safety check. PPP uses Z_SYNC_FLUSH
            </summary>
            <summary>
            but removes the length bytes of the resulting empty stored block. When
            </summary>
            <summary>
            decompressing, PPP checks that at the end of input packet, inflate is
            </summary>
            <summary>
            waiting for these length bytes.
            </summary>
        </member>
        <member name="F:System.util.zlib.InfTree.Bmax">
            <summary>
            If BMAX needs to be larger than 16, then h and x[] should be uLong.
            </summary>
        </member>
        <member name="F:System.util.zlib.InfTree._cplens">
            <summary>
            Tables for deflate from PKZIP's appnote.txt.
            </summary>
        </member>
        <member name="F:System.util.zlib.InfTree._cplext">
            <summary>
            see note #13 above about 258
            </summary>
        </member>
        <member name="F:System.util.zlib.JZlib.Z_FILTERED">
            <summary>
            compression strategy
            </summary>
        </member>
        <member name="F:System.util.zlib.JZlib.Z_NO_COMPRESSION">
            <summary>
            compression levels
            </summary>
        </member>
        <member name="F:System.util.zlib.StaticTree.MAX_BL_BITS">
            <summary>
            Bit length codes must not exceed MAX_BL_BITS bits
            </summary>
        </member>
        <member name="F:System.util.zlib.Tree.DIST_CODE_LEN">
            <summary>
            The lengths of the bit length codes are sent in order of decreasing
            </summary>
            <summary>
            probability, to avoid transmitting the lengths for unused bit
            </summary>
            <summary>
            length codes.
            </summary>
            <summary>
            see definition of array dist_code below
            </summary>
        </member>
        <member name="F:System.util.zlib.Tree.END_BLOCK">
            <summary>
            end of block literal code
            </summary>
        </member>
        <member name="F:System.util.zlib.Tree.MAX_BL_BITS">
            <summary>
            Bit length codes must not exceed MAX_BL_BITS bits
            </summary>
        </member>
        <member name="F:System.util.zlib.Tree.REP_3_6">
            <summary>
            repeat previous bit length 3-6 times (2 bits of repeat count)
            </summary>
        </member>
        <member name="F:System.util.zlib.Tree.REPZ_11_138">
            <summary>
            repeat a zero length 11-138 times  (7 bits of repeat count)
            </summary>
        </member>
        <member name="F:System.util.zlib.Tree.REPZ_3_10">
            <summary>
            repeat a zero length 3-10 times  (3 bits of repeat count)
            </summary>
        </member>
        <member name="F:System.util.zlib.Tree.ExtraBlbits">
            <summary>
            extra bits for each bit length code
            </summary>
        </member>
        <member name="F:System.util.zlib.Tree.ExtraDbits">
            <summary>
            extra bits for each distance code
            </summary>
        </member>
        <member name="F:System.util.zlib.Tree.ExtraLbits">
            <summary>
            extra bits for each length code
            </summary>
        </member>
        <member name="M:System.util.zlib.Tree.bi_reverse(System.Int32,System.Int32)">
            <summary>
            Reverse the first len bits of a code, using straightforward code (a faster
            </summary>
        </member>
        <member name="M:System.util.zlib.Tree.build_tree(System.util.zlib.Deflate)">
            <summary>
            Construct one Huffman tree and assigns the code bit strings and lengths.
            </summary>
            <summary>
            Update the total bit length for the current block.
            </summary>
            <summary>
            IN assertion: the field freq is set for all tree elements.
            </summary>
            <summary>
            OUT assertions: the fields len and code are set to the optimal bit length
            </summary>
            <summary>
            and corresponding code. The length opt_len is updated; static_len is
            </summary>
            <summary>
            also updated if stree is not null. The field max_code is set.
            </summary>
        </member>
        <member name="M:System.util.zlib.Tree.d_code(System.Int32)">
            <summary>
            Mapping from a distance to a distance code. dist is the distance - 1 and
            </summary>
            <summary>
            must not have side effects. _dist_code[256] and _dist_code[257] are never
            </summary>
            <summary>
            used.
            </summary>
        </member>
        <member name="M:System.util.zlib.Tree.gen_bitlen(System.util.zlib.Deflate)">
            <summary>
            Compute the optimal bit lengths for a tree and update the total bit length
            </summary>
            <summary>
            for the current block.
            </summary>
            <summary>
            IN assertion: the fields freq and dad are set, heap[heap_max] and
            </summary>
            <summary>
            above are the tree nodes sorted by increasing frequency.
            </summary>
            <summary>
            OUT assertions: the field len is set to the optimal bit length, the
            </summary>
            <summary>
            array bl_count contains the frequencies for each bit length.
            </summary>
            <summary>
            The length opt_len is updated; static_len is also updated if stree is
            </summary>
            <summary>
            not null.
            </summary>
        </member>
        <member name="M:System.util.zlib.Tree.gen_codes(System.Int16[],System.Int32,System.Int16[])">
            <summary>
            Generate the codes for a given tree and bit counts (which need not be
            </summary>
            <summary>
            optimal).
            </summary>
            <summary>
            IN assertion: the array bl_count contains the bit length statistics for
            </summary>
            <summary>
            the given tree and the field len is set for all tree elements.
            </summary>
            <summary>
            OUT assertion: the field code is set for all tree elements of non
            </summary>
            <summary>
            zero code length.
            </summary>
        </member>
        <member name="T:System.util.zlib.ZDeflaterOutputStream">
            <summary>
            Summary description for DeflaterOutputStream.
            </summary>
        </member>
        <member name="T:System.util.zlib.ZInflaterInputStream">
            <summary>
            Summary description for DeflaterOutputStream.
            </summary>
        </member>
        <member name="M:System.util.zlib.ZStream.flush_pending">
            <summary>
            Flush as much pending output as possible. All deflate() output goes
            </summary>
            <summary>
            through this function so some applications may wish to modify it
            </summary>
            <summary>
            to avoid allocating a large strm-&gt;next_out buffer and copying into it.
            </summary>
            <summary>
            (See also read_buf()).
            </summary>
        </member>
        <member name="M:System.util.zlib.ZStream.read_buf(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read a new buffer from the current input stream, update the adler32
            </summary>
            <summary>
            and total number of bytes read.  All deflate() input goes through
            </summary>
            <summary>
            this function so some applications may wish to modify it to avoid
            </summary>
            <summary>
            allocating a large strm-&gt;next_in buffer and copying from it.
            </summary>
            <summary>
            (See also flush_pending()).
            </summary>
        </member>
        <member name="T:System.IO.StreamHelpers">
            <summary>
            Provides methods to help in the implementation of Stream-derived types.
            </summary>
        </member>
        <member name="M:System.IO.StreamHelpers.ValidateCopyToArgs(System.IO.Stream,System.IO.Stream,System.Int32)">
            <summary>
            Validate the arguments to CopyTo, as would Stream.CopyTo.
            </summary>
        </member>
    </members>
</doc>